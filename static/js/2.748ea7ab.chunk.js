/*! For license information please see 2.748ea7ab.chunk.js.LICENSE.txt */
(this["webpackJsonpproto-dashboard"]=this["webpackJsonpproto-dashboard"]||[]).push([[2],[function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(l){r=!0,o=l}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return n}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}n.d(t,"a",(function(){return i}))},function(e,t,n){e.exports=n(16)},function(e,t,n){"use strict";function i(e,t,n,i,r,o,s){try{var a=e[o](s),l=a.value}catch(u){return void n(u)}a.done?t(l):Promise.resolve(l).then(i,r)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var s=e.apply(t,n);function a(e){i(s,r,o,a,l,"next",e)}function l(e){i(s,r,o,a,l,"throw",e)}a(void 0)}))}}n.d(t,"a",(function(){return r}))},function(e,t,n){var i;!function(r){"use strict";var o,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,a=Math.ceil,l=Math.floor,u="[BigNumber Error] ",c=u+"Number primitive has more than 15 significant digits: ",d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13];function h(e){var t=0|e;return e>0||e===t?t:t-1}function f(e){for(var t,n,i=1,r=e.length,o=e[0]+"";i<r;){for(n=14-(t=e[i++]+"").length;n--;t="0"+t);o+=t}for(r=o.length;48===o.charCodeAt(--r););return o.slice(0,r+1||1)}function p(e,t){var n,i,r=e.c,o=t.c,s=e.s,a=t.s,l=e.e,u=t.e;if(!s||!a)return null;if(n=r&&!r[0],i=o&&!o[0],n||i)return n?i?0:-a:s;if(s!=a)return s;if(n=s<0,i=l==u,!r||!o)return i?0:!r^n?1:-1;if(!i)return l>u^n?1:-1;for(a=(l=r.length)<(u=o.length)?l:u,s=0;s<a;s++)if(r[s]!=o[s])return r[s]>o[s]^n?1:-1;return l==u?0:l>u^n?1:-1}function v(e,t,n,i){if(e<t||e>n||e!==l(e))throw Error(u+(i||"Argument")+("number"==typeof e?e<t||e>n?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function y(e){var t=e.c.length-1;return h(e.e/14)==t&&e.c[t]%2!=0}function g(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function m(e,t,n){var i,r;if(t<0){for(r=n+".";++t;r+=n);e=r+e}else if(++t>(i=e.length)){for(r=n,t-=i;--t;r+=n);e+=r}else t<i&&(e=e.slice(0,t)+"."+e.slice(t));return e}(o=function e(t){var n,i,r,o=P.prototype={constructor:P,toString:null,valueOf:null},b=new P(1),w=20,_=4,k=-7,x=21,S=-1e7,O=1e7,E=!1,T=1,M=0,D={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:"\xa0",suffix:""},C="0123456789abcdefghijklmnopqrstuvwxyz";function P(e,t){var n,o,a,u,d,h,f,p,y=this;if(!(y instanceof P))return new P(e,t);if(null==t){if(e&&!0===e._isBigNumber)return y.s=e.s,void(!e.c||e.e>O?y.c=y.e=null:e.e<S?y.c=[y.e=0]:(y.e=e.e,y.c=e.c.slice()));if((h="number"==typeof e)&&0*e==0){if(y.s=1/e<0?(e=-e,-1):1,e===~~e){for(u=0,d=e;d>=10;d/=10,u++);return void(u>O?y.c=y.e=null:(y.e=u,y.c=[e]))}p=String(e)}else{if(!s.test(p=String(e)))return r(y,p,h);y.s=45==p.charCodeAt(0)?(p=p.slice(1),-1):1}(u=p.indexOf("."))>-1&&(p=p.replace(".","")),(d=p.search(/e/i))>0?(u<0&&(u=d),u+=+p.slice(d+1),p=p.substring(0,d)):u<0&&(u=p.length)}else{if(v(t,2,C.length,"Base"),10==t)return F(y=new P(e),w+y.e+1,_);if(p=String(e),h="number"==typeof e){if(0*e!=0)return r(y,p,h,t);if(y.s=1/e<0?(p=p.slice(1),-1):1,P.DEBUG&&p.replace(/^0\.0*|\./,"").length>15)throw Error(c+e)}else y.s=45===p.charCodeAt(0)?(p=p.slice(1),-1):1;for(n=C.slice(0,t),u=d=0,f=p.length;d<f;d++)if(n.indexOf(o=p.charAt(d))<0){if("."==o){if(d>u){u=f;continue}}else if(!a&&(p==p.toUpperCase()&&(p=p.toLowerCase())||p==p.toLowerCase()&&(p=p.toUpperCase()))){a=!0,d=-1,u=0;continue}return r(y,String(e),h,t)}h=!1,(u=(p=i(p,t,10,y.s)).indexOf("."))>-1?p=p.replace(".",""):u=p.length}for(d=0;48===p.charCodeAt(d);d++);for(f=p.length;48===p.charCodeAt(--f););if(p=p.slice(d,++f)){if(f-=d,h&&P.DEBUG&&f>15&&(e>9007199254740991||e!==l(e)))throw Error(c+y.s*e);if((u=u-d-1)>O)y.c=y.e=null;else if(u<S)y.c=[y.e=0];else{if(y.e=u,y.c=[],d=(u+1)%14,u<0&&(d+=14),d<f){for(d&&y.c.push(+p.slice(0,d)),f-=14;d<f;)y.c.push(+p.slice(d,d+=14));d=14-(p=p.slice(d)).length}else d-=f;for(;d--;p+="0");y.c.push(+p)}}else y.c=[y.e=0]}function N(e,t,n,i){var r,o,s,a,l;if(null==n?n=_:v(n,0,8),!e.c)return e.toString();if(r=e.c[0],s=e.e,null==t)l=f(e.c),l=1==i||2==i&&(s<=k||s>=x)?g(l,s):m(l,s,"0");else if(o=(e=F(new P(e),t,n)).e,a=(l=f(e.c)).length,1==i||2==i&&(t<=o||o<=k)){for(;a<t;l+="0",a++);l=g(l,o)}else if(t-=s,l=m(l,o,"0"),o+1>a){if(--t>0)for(l+=".";t--;l+="0");}else if((t+=o-a)>0)for(o+1==a&&(l+=".");t--;l+="0");return e.s<0&&r?"-"+l:l}function I(e,t){for(var n,i=1,r=new P(e[0]);i<e.length;i++){if(!(n=new P(e[i])).s){r=n;break}t.call(r,n)&&(r=n)}return r}function A(e,t,n){for(var i=1,r=t.length;!t[--r];t.pop());for(r=t[0];r>=10;r/=10,i++);return(n=i+14*n-1)>O?e.c=e.e=null:n<S?e.c=[e.e=0]:(e.e=n,e.c=t),e}function F(e,t,n,i){var r,o,s,u,c,h,f,p=e.c,v=d;if(p){e:{for(r=1,u=p[0];u>=10;u/=10,r++);if((o=t-r)<0)o+=14,s=t,f=(c=p[h=0])/v[r-s-1]%10|0;else if((h=a((o+1)/14))>=p.length){if(!i)break e;for(;p.length<=h;p.push(0));c=f=0,r=1,s=(o%=14)-14+1}else{for(c=u=p[h],r=1;u>=10;u/=10,r++);f=(s=(o%=14)-14+r)<0?0:c/v[r-s-1]%10|0}if(i=i||t<0||null!=p[h+1]||(s<0?c:c%v[r-s-1]),i=n<4?(f||i)&&(0==n||n==(e.s<0?3:2)):f>5||5==f&&(4==n||i||6==n&&(o>0?s>0?c/v[r-s]:0:p[h-1])%10&1||n==(e.s<0?8:7)),t<1||!p[0])return p.length=0,i?(t-=e.e+1,p[0]=v[(14-t%14)%14],e.e=-t||0):p[0]=e.e=0,e;if(0==o?(p.length=h,u=1,h--):(p.length=h+1,u=v[14-o],p[h]=s>0?l(c/v[r-s]%v[s])*u:0),i)for(;;){if(0==h){for(o=1,s=p[0];s>=10;s/=10,o++);for(s=p[0]+=u,u=1;s>=10;s/=10,u++);o!=u&&(e.e++,1e14==p[0]&&(p[0]=1));break}if(p[h]+=u,1e14!=p[h])break;p[h--]=0,u=1}for(o=p.length;0===p[--o];p.pop());}e.e>O?e.c=e.e=null:e.e<S&&(e.c=[e.e=0])}return e}function R(e){var t,n=e.e;return null===n?e.toString():(t=f(e.c),t=n<=k||n>=x?g(t,n):m(t,n,"0"),e.s<0?"-"+t:t)}return P.clone=e,P.ROUND_UP=0,P.ROUND_DOWN=1,P.ROUND_CEIL=2,P.ROUND_FLOOR=3,P.ROUND_HALF_UP=4,P.ROUND_HALF_DOWN=5,P.ROUND_HALF_EVEN=6,P.ROUND_HALF_CEIL=7,P.ROUND_HALF_FLOOR=8,P.EUCLID=9,P.config=P.set=function(e){var t,n;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(v(n=e[t],0,1e9,t),w=n),e.hasOwnProperty(t="ROUNDING_MODE")&&(v(n=e[t],0,8,t),_=n),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((n=e[t])&&n.pop?(v(n[0],-1e9,0,t),v(n[1],0,1e9,t),k=n[0],x=n[1]):(v(n,-1e9,1e9,t),k=-(x=n<0?-n:n))),e.hasOwnProperty(t="RANGE"))if((n=e[t])&&n.pop)v(n[0],-1e9,-1,t),v(n[1],1,1e9,t),S=n[0],O=n[1];else{if(v(n,-1e9,1e9,t),!n)throw Error(u+t+" cannot be zero: "+n);S=-(O=n<0?-n:n)}if(e.hasOwnProperty(t="CRYPTO")){if((n=e[t])!==!!n)throw Error(u+t+" not true or false: "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw E=!n,Error(u+"crypto unavailable");E=n}else E=n}if(e.hasOwnProperty(t="MODULO_MODE")&&(v(n=e[t],0,9,t),T=n),e.hasOwnProperty(t="POW_PRECISION")&&(v(n=e[t],0,1e9,t),M=n),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(n=e[t]))throw Error(u+t+" not an object: "+n);D=n}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(n=e[t])||/^.$|[+-.\s]|(.).*\1/.test(n))throw Error(u+t+" invalid: "+n);C=n}}return{DECIMAL_PLACES:w,ROUNDING_MODE:_,EXPONENTIAL_AT:[k,x],RANGE:[S,O],CRYPTO:E,MODULO_MODE:T,POW_PRECISION:M,FORMAT:D,ALPHABET:C}},P.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!P.DEBUG)return!0;var t,n,i=e.c,r=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(i)){if((1===o||-1===o)&&r>=-1e9&&r<=1e9&&r===l(r)){if(0===i[0]){if(0===r&&1===i.length)return!0;break e}if((t=(r+1)%14)<1&&(t+=14),String(i[0]).length==t){for(t=0;t<i.length;t++)if((n=i[t])<0||n>=1e14||n!==l(n))break e;if(0!==n)return!0}}}else if(null===i&&null===r&&(null===o||1===o||-1===o))return!0;throw Error(u+"Invalid BigNumber: "+e)},P.maximum=P.max=function(){return I(arguments,o.lt)},P.minimum=P.min=function(){return I(arguments,o.gt)},P.random=function(){var e=9007199254740992*Math.random()&2097151?function(){return l(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)};return function(t){var n,i,r,o,s,c=0,h=[],f=new P(b);if(null==t?t=w:v(t,0,1e9),o=a(t/14),E)if(crypto.getRandomValues){for(n=crypto.getRandomValues(new Uint32Array(o*=2));c<o;)(s=131072*n[c]+(n[c+1]>>>11))>=9e15?(i=crypto.getRandomValues(new Uint32Array(2)),n[c]=i[0],n[c+1]=i[1]):(h.push(s%1e14),c+=2);c=o/2}else{if(!crypto.randomBytes)throw E=!1,Error(u+"crypto unavailable");for(n=crypto.randomBytes(o*=7);c<o;)(s=281474976710656*(31&n[c])+1099511627776*n[c+1]+4294967296*n[c+2]+16777216*n[c+3]+(n[c+4]<<16)+(n[c+5]<<8)+n[c+6])>=9e15?crypto.randomBytes(7).copy(n,c):(h.push(s%1e14),c+=7);c=o/7}if(!E)for(;c<o;)(s=e())<9e15&&(h[c++]=s%1e14);for(t%=14,(o=h[--c])&&t&&(s=d[14-t],h[c]=l(o/s)*s);0===h[c];h.pop(),c--);if(c<0)h=[r=0];else{for(r=-1;0===h[0];h.splice(0,1),r-=14);for(c=1,s=h[0];s>=10;s/=10,c++);c<14&&(r-=14-c)}return f.e=r,f.c=h,f}}(),P.sum=function(){for(var e=1,t=arguments,n=new P(t[0]);e<t.length;)n=n.plus(t[e++]);return n},i=function(){function e(e,t,n,i){for(var r,o,s=[0],a=0,l=e.length;a<l;){for(o=s.length;o--;s[o]*=t);for(s[0]+=i.indexOf(e.charAt(a++)),r=0;r<s.length;r++)s[r]>n-1&&(null==s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}return function(t,i,r,o,s){var a,l,u,c,d,h,p,v,y=t.indexOf("."),g=w,b=_;for(y>=0&&(c=M,M=0,t=t.replace(".",""),h=(v=new P(i)).pow(t.length-y),M=c,v.c=e(m(f(h.c),h.e,"0"),10,r,"0123456789"),v.e=v.c.length),u=c=(p=e(t,i,r,s?(a=C,"0123456789"):(a="0123456789",C))).length;0==p[--c];p.pop());if(!p[0])return a.charAt(0);if(y<0?--u:(h.c=p,h.e=u,h.s=o,p=(h=n(h,v,g,b,r)).c,d=h.r,u=h.e),y=p[l=u+g+1],c=r/2,d=d||l<0||null!=p[l+1],d=b<4?(null!=y||d)&&(0==b||b==(h.s<0?3:2)):y>c||y==c&&(4==b||d||6==b&&1&p[l-1]||b==(h.s<0?8:7)),l<1||!p[0])t=d?m(a.charAt(1),-g,a.charAt(0)):a.charAt(0);else{if(p.length=l,d)for(--r;++p[--l]>r;)p[l]=0,l||(++u,p=[1].concat(p));for(c=p.length;!p[--c];);for(y=0,t="";y<=c;t+=a.charAt(p[y++]));t=m(t,u,a.charAt(0))}return t}}(),n=function(){function e(e,t,n){var i,r,o,s,a=0,l=e.length,u=t%1e7,c=t/1e7|0;for(e=e.slice();l--;)a=((r=u*(o=e[l]%1e7)+(i=c*o+(s=e[l]/1e7|0)*u)%1e7*1e7+a)/n|0)+(i/1e7|0)+c*s,e[l]=r%n;return a&&(e=[a].concat(e)),e}function t(e,t,n,i){var r,o;if(n!=i)o=n>i?1:-1;else for(r=o=0;r<n;r++)if(e[r]!=t[r]){o=e[r]>t[r]?1:-1;break}return o}function n(e,t,n,i){for(var r=0;n--;)e[n]-=r,r=e[n]<t[n]?1:0,e[n]=r*i+e[n]-t[n];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(i,r,o,s,a){var u,c,d,f,p,v,y,g,m,b,w,_,k,x,S,O,E,T=i.s==r.s?1:-1,M=i.c,D=r.c;if(!M||!M[0]||!D||!D[0])return new P(i.s&&r.s&&(M?!D||M[0]!=D[0]:D)?M&&0==M[0]||!D?0*T:T/0:NaN);for(m=(g=new P(T)).c=[],T=o+(c=i.e-r.e)+1,a||(a=1e14,c=h(i.e/14)-h(r.e/14),T=T/14|0),d=0;D[d]==(M[d]||0);d++);if(D[d]>(M[d]||0)&&c--,T<0)m.push(1),f=!0;else{for(x=M.length,O=D.length,d=0,T+=2,(p=l(a/(D[0]+1)))>1&&(D=e(D,p,a),M=e(M,p,a),O=D.length,x=M.length),k=O,w=(b=M.slice(0,O)).length;w<O;b[w++]=0);E=D.slice(),E=[0].concat(E),S=D[0],D[1]>=a/2&&S++;do{if(p=0,(u=t(D,b,O,w))<0){if(_=b[0],O!=w&&(_=_*a+(b[1]||0)),(p=l(_/S))>1)for(p>=a&&(p=a-1),y=(v=e(D,p,a)).length,w=b.length;1==t(v,b,y,w);)p--,n(v,O<y?E:D,y,a),y=v.length,u=1;else 0==p&&(u=p=1),y=(v=D.slice()).length;if(y<w&&(v=[0].concat(v)),n(b,v,w,a),w=b.length,-1==u)for(;t(D,b,O,w)<1;)p++,n(b,O<w?E:D,w,a),w=b.length}else 0===u&&(p++,b=[0]);m[d++]=p,b[0]?b[w++]=M[k]||0:(b=[M[k]],w=1)}while((k++<x||null!=b[0])&&T--);f=null!=b[0],m[0]||m.splice(0,1)}if(1e14==a){for(d=1,T=m[0];T>=10;T/=10,d++);F(g,o+(g.e=d+14*c-1)+1,s,f)}else g.e=c,g.r=+f;return g}}(),r=function(){var e=/^(-?)0([xbo])(?=\w[\w.]*$)/i,t=/^([^.]+)\.$/,n=/^\.([^.]+)$/,i=/^-?(Infinity|NaN)$/,r=/^\s*\+(?=[\w.])|^\s+|\s+$/g;return function(o,s,a,l){var c,d=a?s:s.replace(r,"");if(i.test(d))o.s=isNaN(d)?null:d<0?-1:1;else{if(!a&&(d=d.replace(e,(function(e,t,n){return c="x"==(n=n.toLowerCase())?16:"b"==n?2:8,l&&l!=c?e:t})),l&&(c=l,d=d.replace(t,"$1").replace(n,"0.$1")),s!=d))return new P(d,c);if(P.DEBUG)throw Error(u+"Not a"+(l?" base "+l:"")+" number: "+s);o.s=null}o.c=o.e=null}}(),o.absoluteValue=o.abs=function(){var e=new P(this);return e.s<0&&(e.s=1),e},o.comparedTo=function(e,t){return p(this,new P(e,t))},o.decimalPlaces=o.dp=function(e,t){var n,i,r,o=this;if(null!=e)return v(e,0,1e9),null==t?t=_:v(t,0,8),F(new P(o),e+o.e+1,t);if(!(n=o.c))return null;if(i=14*((r=n.length-1)-h(this.e/14)),r=n[r])for(;r%10==0;r/=10,i--);return i<0&&(i=0),i},o.dividedBy=o.div=function(e,t){return n(this,new P(e,t),w,_)},o.dividedToIntegerBy=o.idiv=function(e,t){return n(this,new P(e,t),0,1)},o.exponentiatedBy=o.pow=function(e,t){var n,i,r,o,s,c,d,h,f=this;if((e=new P(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+R(e));if(null!=t&&(t=new P(t)),s=e.e>14,!f.c||!f.c[0]||1==f.c[0]&&!f.e&&1==f.c.length||!e.c||!e.c[0])return h=new P(Math.pow(+R(f),s?2-y(e):+R(e))),t?h.mod(t):h;if(c=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new P(NaN);(i=!c&&f.isInteger()&&t.isInteger())&&(f=f.mod(t))}else{if(e.e>9&&(f.e>0||f.e<-1||(0==f.e?f.c[0]>1||s&&f.c[1]>=24e7:f.c[0]<8e13||s&&f.c[0]<=9999975e7)))return o=f.s<0&&y(e)?-0:0,f.e>-1&&(o=1/o),new P(c?1/o:o);M&&(o=a(M/14+2))}for(s?(n=new P(.5),c&&(e.s=1),d=y(e)):d=(r=Math.abs(+R(e)))%2,h=new P(b);;){if(d){if(!(h=h.times(f)).c)break;o?h.c.length>o&&(h.c.length=o):i&&(h=h.mod(t))}if(r){if(0===(r=l(r/2)))break;d=r%2}else if(F(e=e.times(n),e.e+1,1),e.e>14)d=y(e);else{if(0===(r=+R(e)))break;d=r%2}f=f.times(f),o?f.c&&f.c.length>o&&(f.c.length=o):i&&(f=f.mod(t))}return i?h:(c&&(h=b.div(h)),t?h.mod(t):o?F(h,M,_,void 0):h)},o.integerValue=function(e){var t=new P(this);return null==e?e=_:v(e,0,8),F(t,t.e+1,e)},o.isEqualTo=o.eq=function(e,t){return 0===p(this,new P(e,t))},o.isFinite=function(){return!!this.c},o.isGreaterThan=o.gt=function(e,t){return p(this,new P(e,t))>0},o.isGreaterThanOrEqualTo=o.gte=function(e,t){return 1===(t=p(this,new P(e,t)))||0===t},o.isInteger=function(){return!!this.c&&h(this.e/14)>this.c.length-2},o.isLessThan=o.lt=function(e,t){return p(this,new P(e,t))<0},o.isLessThanOrEqualTo=o.lte=function(e,t){return-1===(t=p(this,new P(e,t)))||0===t},o.isNaN=function(){return!this.s},o.isNegative=function(){return this.s<0},o.isPositive=function(){return this.s>0},o.isZero=function(){return!!this.c&&0==this.c[0]},o.minus=function(e,t){var n,i,r,o,s=this,a=s.s;if(t=(e=new P(e,t)).s,!a||!t)return new P(NaN);if(a!=t)return e.s=-t,s.plus(e);var l=s.e/14,u=e.e/14,c=s.c,d=e.c;if(!l||!u){if(!c||!d)return c?(e.s=-t,e):new P(d?s:NaN);if(!c[0]||!d[0])return d[0]?(e.s=-t,e):new P(c[0]?s:3==_?-0:0)}if(l=h(l),u=h(u),c=c.slice(),a=l-u){for((o=a<0)?(a=-a,r=c):(u=l,r=d),r.reverse(),t=a;t--;r.push(0));r.reverse()}else for(i=(o=(a=c.length)<(t=d.length))?a:t,a=t=0;t<i;t++)if(c[t]!=d[t]){o=c[t]<d[t];break}if(o&&(r=c,c=d,d=r,e.s=-e.s),(t=(i=d.length)-(n=c.length))>0)for(;t--;c[n++]=0);for(t=1e14-1;i>a;){if(c[--i]<d[i]){for(n=i;n&&!c[--n];c[n]=t);--c[n],c[i]+=1e14}c[i]-=d[i]}for(;0==c[0];c.splice(0,1),--u);return c[0]?A(e,c,u):(e.s=3==_?-1:1,e.c=[e.e=0],e)},o.modulo=o.mod=function(e,t){var i,r,o=this;return e=new P(e,t),!o.c||!e.s||e.c&&!e.c[0]?new P(NaN):!e.c||o.c&&!o.c[0]?new P(o):(9==T?(r=e.s,e.s=1,i=n(o,e,0,3),e.s=r,i.s*=r):i=n(o,e,0,T),(e=o.minus(i.times(e))).c[0]||1!=T||(e.s=o.s),e)},o.multipliedBy=o.times=function(e,t){var n,i,r,o,s,a,l,u,c,d,f,p,v,y=this,g=y.c,m=(e=new P(e,t)).c;if(!g||!m||!g[0]||!m[0])return!y.s||!e.s||g&&!g[0]&&!m||m&&!m[0]&&!g?e.c=e.e=e.s=null:(e.s*=y.s,g&&m?(e.c=[0],e.e=0):e.c=e.e=null),e;for(i=h(y.e/14)+h(e.e/14),e.s*=y.s,(l=g.length)<(d=m.length)&&(v=g,g=m,m=v,r=l,l=d,d=r),r=l+d,v=[];r--;v.push(0));for(1e14,1e7,r=d;--r>=0;){for(n=0,f=m[r]%1e7,p=m[r]/1e7|0,o=r+(s=l);o>r;)n=((u=f*(u=g[--s]%1e7)+(a=p*u+(c=g[s]/1e7|0)*f)%1e7*1e7+v[o]+n)/1e14|0)+(a/1e7|0)+p*c,v[o--]=u%1e14;v[o]=n}return n?++i:v.splice(0,1),A(e,v,i)},o.negated=function(){var e=new P(this);return e.s=-e.s||null,e},o.plus=function(e,t){var n,i=this,r=i.s;if(t=(e=new P(e,t)).s,!r||!t)return new P(NaN);if(r!=t)return e.s=-t,i.minus(e);var o=i.e/14,s=e.e/14,a=i.c,l=e.c;if(!o||!s){if(!a||!l)return new P(r/0);if(!a[0]||!l[0])return l[0]?e:new P(a[0]?i:0*r)}if(o=h(o),s=h(s),a=a.slice(),r=o-s){for(r>0?(s=o,n=l):(r=-r,n=a),n.reverse();r--;n.push(0));n.reverse()}for((r=a.length)-(t=l.length)<0&&(n=l,l=a,a=n,t=r),r=0;t;)r=(a[--t]=a[t]+l[t]+r)/1e14|0,a[t]=1e14===a[t]?0:a[t]%1e14;return r&&(a=[r].concat(a),++s),A(e,a,s)},o.precision=o.sd=function(e,t){var n,i,r,o=this;if(null!=e&&e!==!!e)return v(e,1,1e9),null==t?t=_:v(t,0,8),F(new P(o),e,t);if(!(n=o.c))return null;if(i=14*(r=n.length-1)+1,r=n[r]){for(;r%10==0;r/=10,i--);for(r=n[0];r>=10;r/=10,i++);}return e&&o.e+1>i&&(i=o.e+1),i},o.shiftedBy=function(e){return v(e,-9007199254740991,9007199254740991),this.times("1e"+e)},o.squareRoot=o.sqrt=function(){var e,t,i,r,o,s=this,a=s.c,l=s.s,u=s.e,c=w+4,d=new P("0.5");if(1!==l||!a||!a[0])return new P(!l||l<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(l=Math.sqrt(+R(s)))||l==1/0?(((t=f(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(+t),u=h((u+1)/2)-(u<0||u%2),i=new P(t=l==1/0?"1e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):i=new P(l+""),i.c[0])for((l=(u=i.e)+c)<3&&(l=0);;)if(o=i,i=d.times(o.plus(n(s,o,c,1))),f(o.c).slice(0,l)===(t=f(i.c)).slice(0,l)){if(i.e<u&&--l,"9999"!=(t=t.slice(l-3,l+1))&&(r||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(F(i,i.e+w+2,1),e=!i.times(i).eq(s));break}if(!r&&(F(o,o.e+w+2,0),o.times(o).eq(s))){i=o;break}c+=4,l+=4,r=1}return F(i,i.e+w+1,_,e)},o.toExponential=function(e,t){return null!=e&&(v(e,0,1e9),e++),N(this,e,t,1)},o.toFixed=function(e,t){return null!=e&&(v(e,0,1e9),e=e+this.e+1),N(this,e,t)},o.toFormat=function(e,t,n){var i,r=this;if(null==n)null!=e&&t&&"object"==typeof t?(n=t,t=null):e&&"object"==typeof e?(n=e,e=t=null):n=D;else if("object"!=typeof n)throw Error(u+"Argument not an object: "+n);if(i=r.toFixed(e,t),r.c){var o,s=i.split("."),a=+n.groupSize,l=+n.secondaryGroupSize,c=n.groupSeparator||"",d=s[0],h=s[1],f=r.s<0,p=f?d.slice(1):d,v=p.length;if(l&&(o=a,a=l,l=o,v-=o),a>0&&v>0){for(o=v%a||a,d=p.substr(0,o);o<v;o+=a)d+=c+p.substr(o,a);l>0&&(d+=c+p.slice(o)),f&&(d="-"+d)}i=h?d+(n.decimalSeparator||"")+((l=+n.fractionGroupSize)?h.replace(new RegExp("\\d{"+l+"}\\B","g"),"$&"+(n.fractionGroupSeparator||"")):h):d}return(n.prefix||"")+i+(n.suffix||"")},o.toFraction=function(e){var t,i,r,o,s,a,l,c,h,p,v,y,g=this,m=g.c;if(null!=e&&(!(l=new P(e)).isInteger()&&(l.c||1!==l.s)||l.lt(b)))throw Error(u+"Argument "+(l.isInteger()?"out of range: ":"not an integer: ")+R(l));if(!m)return new P(g);for(t=new P(b),h=i=new P(b),r=c=new P(b),y=f(m),s=t.e=y.length-g.e-1,t.c[0]=d[(a=s%14)<0?14+a:a],e=!e||l.comparedTo(t)>0?s>0?t:h:l,a=O,O=1/0,l=new P(y),c.c[0]=0;p=n(l,t,0,1),1!=(o=i.plus(p.times(r))).comparedTo(e);)i=r,r=o,h=c.plus(p.times(o=h)),c=o,t=l.minus(p.times(o=t)),l=o;return o=n(e.minus(i),r,0,1),c=c.plus(o.times(h)),i=i.plus(o.times(r)),c.s=h.s=g.s,v=n(h,r,s*=2,_).minus(g).abs().comparedTo(n(c,i,s,_).minus(g).abs())<1?[h,r]:[c,i],O=a,v},o.toNumber=function(){return+R(this)},o.toPrecision=function(e,t){return null!=e&&v(e,1,1e9),N(this,e,t,2)},o.toString=function(e){var t,n=this,r=n.s,o=n.e;return null===o?r?(t="Infinity",r<0&&(t="-"+t)):t="NaN":(null==e?t=o<=k||o>=x?g(f(n.c),o):m(f(n.c),o,"0"):10===e?t=m(f((n=F(new P(n),w+o+1,_)).c),n.e,"0"):(v(e,2,C.length,"Base"),t=i(m(f(n.c),o,"0"),10,e,r,!0)),r<0&&n.c[0]&&(t="-"+t)),t},o.valueOf=o.toJSON=function(){return R(this)},o._isBigNumber=!0,null!=t&&P.set(t),P}()).default=o.BigNumber=o,void 0===(i=function(){return o}.call(t,n,t,e))||(e.exports=i)}()},function(e,t,n){(function(e){e.exports=function(){"use strict";var t,n;function i(){return t.apply(null,arguments)}function r(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function o(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function s(e){return void 0===e}function a(e){return"number"===typeof e||"[object Number]"===Object.prototype.toString.call(e)}function l(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function u(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function c(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var n in t)c(t,n)&&(e[n]=t[n]);return c(t,"toString")&&(e.toString=t.toString),c(t,"valueOf")&&(e.valueOf=t.valueOf),e}function h(e,t,n,i){return xt(e,t,n,i,!0).utc()}function f(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function p(e){if(null==e._isValid){var t=f(e),i=n.call(t.parsedDateParts,(function(e){return null!=e})),r=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&i);if(e._strict&&(r=r&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return r;e._isValid=r}return e._isValid}function v(e){var t=h(NaN);return null!=e?d(f(t),e):f(t).userInvalidated=!0,t}n=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var y=i.momentProperties=[];function g(e,t){var n,i,r;if(s(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),s(t._i)||(e._i=t._i),s(t._f)||(e._f=t._f),s(t._l)||(e._l=t._l),s(t._strict)||(e._strict=t._strict),s(t._tzm)||(e._tzm=t._tzm),s(t._isUTC)||(e._isUTC=t._isUTC),s(t._offset)||(e._offset=t._offset),s(t._pf)||(e._pf=f(t)),s(t._locale)||(e._locale=t._locale),y.length>0)for(n=0;n<y.length;n++)s(r=t[i=y[n]])||(e[i]=r);return e}var m=!1;function b(e){g(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===m&&(m=!0,i.updateOffset(this),m=!1)}function w(e){return e instanceof b||null!=e&&null!=e._isAMomentObject}function _(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function k(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=_(t)),n}function x(e,t,n){var i,r=Math.min(e.length,t.length),o=Math.abs(e.length-t.length),s=0;for(i=0;i<r;i++)(n&&e[i]!==t[i]||!n&&k(e[i])!==k(t[i]))&&s++;return s+o}function S(e){!1===i.suppressDeprecationWarnings&&"undefined"!==typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function O(e,t){var n=!0;return d((function(){if(null!=i.deprecationHandler&&i.deprecationHandler(null,e),n){for(var r,o=[],s=0;s<arguments.length;s++){if(r="","object"===typeof arguments[s]){for(var a in r+="\n["+s+"] ",arguments[0])r+=a+": "+arguments[0][a]+", ";r=r.slice(0,-2)}else r=arguments[s];o.push(r)}S(e+"\nArguments: "+Array.prototype.slice.call(o).join("")+"\n"+(new Error).stack),n=!1}return t.apply(this,arguments)}),t)}var E,T={};function M(e,t){null!=i.deprecationHandler&&i.deprecationHandler(e,t),T[e]||(S(t),T[e]=!0)}function D(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function C(e,t){var n,i=d({},e);for(n in t)c(t,n)&&(o(e[n])&&o(t[n])?(i[n]={},d(i[n],e[n]),d(i[n],t[n])):null!=t[n]?i[n]=t[n]:delete i[n]);for(n in e)c(e,n)&&!c(t,n)&&o(e[n])&&(i[n]=d({},i[n]));return i}function P(e){null!=e&&this.set(e)}i.suppressDeprecationWarnings=!1,i.deprecationHandler=null,E=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)c(e,t)&&n.push(t);return n};var N={};function I(e,t){var n=e.toLowerCase();N[n]=N[n+"s"]=N[t]=e}function A(e){return"string"===typeof e?N[e]||N[e.toLowerCase()]:void 0}function F(e){var t,n,i={};for(n in e)c(e,n)&&(t=A(n))&&(i[t]=e[n]);return i}var R={};function j(e,t){R[e]=t}function L(e,t,n){var i=""+Math.abs(e),r=t-i.length;return(e>=0?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}var z=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Y=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,B={},H={};function W(e,t,n,i){var r=i;"string"===typeof i&&(r=function(){return this[i]()}),e&&(H[e]=r),t&&(H[t[0]]=function(){return L(r.apply(this,arguments),t[1],t[2])}),n&&(H[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function U(e,t){return e.isValid()?(t=V(t,e.localeData()),B[t]=B[t]||function(e){var t,n,i,r=e.match(z);for(t=0,n=r.length;t<n;t++)H[r[t]]?r[t]=H[r[t]]:r[t]=(i=r[t]).match(/\[[\s\S]/)?i.replace(/^\[|\]$/g,""):i.replace(/\\/g,"");return function(t){var i,o="";for(i=0;i<n;i++)o+=D(r[i])?r[i].call(t,e):r[i];return o}}(t),B[t](e)):e.localeData().invalidDate()}function V(e,t){var n=5;function i(e){return t.longDateFormat(e)||e}for(Y.lastIndex=0;n>=0&&Y.test(e);)e=e.replace(Y,i),Y.lastIndex=0,n-=1;return e}var G=/\d/,q=/\d\d/,$=/\d{3}/,Z=/\d{4}/,Q=/[+-]?\d{6}/,X=/\d\d?/,K=/\d\d\d\d?/,J=/\d\d\d\d\d\d?/,ee=/\d{1,3}/,te=/\d{1,4}/,ne=/[+-]?\d{1,6}/,ie=/\d+/,re=/[+-]?\d+/,oe=/Z|[+-]\d\d:?\d\d/gi,se=/Z|[+-]\d\d(?::?\d\d)?/gi,ae=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,le={};function ue(e,t,n){le[e]=D(t)?t:function(e,i){return e&&n?n:t}}function ce(e,t){return c(le,e)?le[e](t._strict,t._locale):new RegExp(de(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,n,i,r){return t||n||i||r}))))}function de(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var he={};function fe(e,t){var n,i=t;for("string"===typeof e&&(e=[e]),a(t)&&(i=function(e,n){n[t]=k(e)}),n=0;n<e.length;n++)he[e[n]]=i}function pe(e,t){fe(e,(function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)}))}function ve(e,t,n){null!=t&&c(he,e)&&he[e](t,n._a,n,e)}function ye(e){return ge(e)?366:365}function ge(e){return e%4===0&&e%100!==0||e%400===0}W("Y",0,0,(function(){var e=this.year();return e<=9999?""+e:"+"+e})),W(0,["YY",2],0,(function(){return this.year()%100})),W(0,["YYYY",4],0,"year"),W(0,["YYYYY",5],0,"year"),W(0,["YYYYYY",6,!0],0,"year"),I("year","y"),j("year",1),ue("Y",re),ue("YY",X,q),ue("YYYY",te,Z),ue("YYYYY",ne,Q),ue("YYYYYY",ne,Q),fe(["YYYYY","YYYYYY"],0),fe("YYYY",(function(e,t){t[0]=2===e.length?i.parseTwoDigitYear(e):k(e)})),fe("YY",(function(e,t){t[0]=i.parseTwoDigitYear(e)})),fe("Y",(function(e,t){t[0]=parseInt(e,10)})),i.parseTwoDigitYear=function(e){return k(e)+(k(e)>68?1900:2e3)};var me,be=we("FullYear",!0);function we(e,t){return function(n){return null!=n?(ke(this,e,n),i.updateOffset(this,t),this):_e(this,e)}}function _e(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function ke(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&ge(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),xe(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function xe(e,t){if(isNaN(e)||isNaN(t))return NaN;var n,i=(t%(n=12)+n)%n;return e+=(t-i)/12,1===i?ge(e)?29:28:31-i%7%2}me=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},W("M",["MM",2],"Mo",(function(){return this.month()+1})),W("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),W("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),I("month","M"),j("month",8),ue("M",X),ue("MM",X,q),ue("MMM",(function(e,t){return t.monthsShortRegex(e)})),ue("MMMM",(function(e,t){return t.monthsRegex(e)})),fe(["M","MM"],(function(e,t){t[1]=k(e)-1})),fe(["MMM","MMMM"],(function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null!=r?t[1]=r:f(n).invalidMonth=e}));var Se=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Oe="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Ee="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function Te(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=h([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?-1!==(r=me.call(this._shortMonthsParse,s))?r:null:-1!==(r=me.call(this._longMonthsParse,s))?r:null:"MMM"===t?-1!==(r=me.call(this._shortMonthsParse,s))?r:-1!==(r=me.call(this._longMonthsParse,s))?r:null:-1!==(r=me.call(this._longMonthsParse,s))?r:-1!==(r=me.call(this._shortMonthsParse,s))?r:null}function Me(e,t){var n;if(!e.isValid())return e;if("string"===typeof t)if(/^\d+$/.test(t))t=k(t);else if(!a(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),xe(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function De(e){return null!=e?(Me(this,e),i.updateOffset(this,!0),this):_e(this,"Month")}var Ce=ae,Pe=ae;function Ne(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;t<12;t++)n=h([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;t<12;t++)i[t]=de(i[t]),r[t]=de(r[t]);for(t=0;t<24;t++)o[t]=de(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function Ie(e,t,n,i,r,o,s){var a;return e<100&&e>=0?(a=new Date(e+400,t,n,i,r,o,s),isFinite(a.getFullYear())&&a.setFullYear(e)):a=new Date(e,t,n,i,r,o,s),a}function Ae(e){var t;if(e<100&&e>=0){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function Fe(e,t,n){var i=7+t-n;return-(7+Ae(e,0,i).getUTCDay()-t)%7+i-1}function Re(e,t,n,i,r){var o,s,a=1+7*(t-1)+(7+n-i)%7+Fe(e,i,r);return a<=0?s=ye(o=e-1)+a:a>ye(e)?(o=e+1,s=a-ye(e)):(o=e,s=a),{year:o,dayOfYear:s}}function je(e,t,n){var i,r,o=Fe(e.year(),t,n),s=Math.floor((e.dayOfYear()-o-1)/7)+1;return s<1?i=s+Le(r=e.year()-1,t,n):s>Le(e.year(),t,n)?(i=s-Le(e.year(),t,n),r=e.year()+1):(r=e.year(),i=s),{week:i,year:r}}function Le(e,t,n){var i=Fe(e,t,n),r=Fe(e+1,t,n);return(ye(e)-i+r)/7}function ze(e,t){return e.slice(t,7).concat(e.slice(0,t))}W("w",["ww",2],"wo","week"),W("W",["WW",2],"Wo","isoWeek"),I("week","w"),I("isoWeek","W"),j("week",5),j("isoWeek",5),ue("w",X),ue("ww",X,q),ue("W",X),ue("WW",X,q),pe(["w","ww","W","WW"],(function(e,t,n,i){t[i.substr(0,1)]=k(e)})),W("d",0,"do","day"),W("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),W("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),W("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),W("e",0,0,"weekday"),W("E",0,0,"isoWeekday"),I("day","d"),I("weekday","e"),I("isoWeekday","E"),j("day",11),j("weekday",11),j("isoWeekday",11),ue("d",X),ue("e",X),ue("E",X),ue("dd",(function(e,t){return t.weekdaysMinRegex(e)})),ue("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),ue("dddd",(function(e,t){return t.weekdaysRegex(e)})),pe(["dd","ddd","dddd"],(function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null!=r?t.d=r:f(n).invalidWeekday=e})),pe(["d","e","E"],(function(e,t,n,i){t[i]=k(e)}));var Ye="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Be="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),He="Su_Mo_Tu_We_Th_Fr_Sa".split("_");function We(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=h([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?-1!==(r=me.call(this._weekdaysParse,s))?r:null:"ddd"===t?-1!==(r=me.call(this._shortWeekdaysParse,s))?r:null:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:"dddd"===t?-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._shortWeekdaysParse,s))?r:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:"ddd"===t?-1!==(r=me.call(this._shortWeekdaysParse,s))?r:-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:-1!==(r=me.call(this._minWeekdaysParse,s))?r:-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._shortWeekdaysParse,s))?r:null}var Ue=ae,Ve=ae,Ge=ae;function qe(){function e(e,t){return t.length-e.length}var t,n,i,r,o,s=[],a=[],l=[],u=[];for(t=0;t<7;t++)n=h([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),s.push(i),a.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(s.sort(e),a.sort(e),l.sort(e),u.sort(e),t=0;t<7;t++)a[t]=de(a[t]),l[t]=de(l[t]),u[t]=de(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+s.join("|")+")","i")}function $e(){return this.hours()%12||12}function Ze(e,t){W(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function Qe(e,t){return t._meridiemParse}W("H",["HH",2],0,"hour"),W("h",["hh",2],0,$e),W("k",["kk",2],0,(function(){return this.hours()||24})),W("hmm",0,0,(function(){return""+$e.apply(this)+L(this.minutes(),2)})),W("hmmss",0,0,(function(){return""+$e.apply(this)+L(this.minutes(),2)+L(this.seconds(),2)})),W("Hmm",0,0,(function(){return""+this.hours()+L(this.minutes(),2)})),W("Hmmss",0,0,(function(){return""+this.hours()+L(this.minutes(),2)+L(this.seconds(),2)})),Ze("a",!0),Ze("A",!1),I("hour","h"),j("hour",13),ue("a",Qe),ue("A",Qe),ue("H",X),ue("h",X),ue("k",X),ue("HH",X,q),ue("hh",X,q),ue("kk",X,q),ue("hmm",K),ue("hmmss",J),ue("Hmm",K),ue("Hmmss",J),fe(["H","HH"],3),fe(["k","kk"],(function(e,t,n){var i=k(e);t[3]=24===i?0:i})),fe(["a","A"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),fe(["h","hh"],(function(e,t,n){t[3]=k(e),f(n).bigHour=!0})),fe("hmm",(function(e,t,n){var i=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i)),f(n).bigHour=!0})),fe("hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i,2)),t[5]=k(e.substr(r)),f(n).bigHour=!0})),fe("Hmm",(function(e,t,n){var i=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i))})),fe("Hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i,2)),t[5]=k(e.substr(r))}));var Xe,Ke=we("Hours",!0),Je={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:Oe,monthsShort:Ee,week:{dow:0,doy:6},weekdays:Ye,weekdaysMin:He,weekdaysShort:Be,meridiemParse:/[ap]\.?m?\.?/i},et={},tt={};function nt(e){return e?e.toLowerCase().replace("_","-"):e}function it(t){var n=null;if(!et[t]&&"undefined"!==typeof e&&e&&e.exports)try{n=Xe._abbr,!function(){var e=new Error("Cannot find module 'undefined'");throw e.code="MODULE_NOT_FOUND",e}(),rt(n)}catch(i){}return et[t]}function rt(e,t){var n;return e&&((n=s(t)?st(e):ot(e,t))?Xe=n:"undefined"!==typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Xe._abbr}function ot(e,t){if(null!==t){var n,i=Je;if(t.abbr=e,null!=et[e])M("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=et[e]._config;else if(null!=t.parentLocale)if(null!=et[t.parentLocale])i=et[t.parentLocale]._config;else{if(null==(n=it(t.parentLocale)))return tt[t.parentLocale]||(tt[t.parentLocale]=[]),tt[t.parentLocale].push({name:e,config:t}),null;i=n._config}return et[e]=new P(C(i,t)),tt[e]&&tt[e].forEach((function(e){ot(e.name,e.config)})),rt(e),et[e]}return delete et[e],null}function st(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Xe;if(!r(e)){if(t=it(e))return t;e=[e]}return function(e){for(var t,n,i,r,o=0;o<e.length;){for(t=(r=nt(e[o]).split("-")).length,n=(n=nt(e[o+1]))?n.split("-"):null;t>0;){if(i=it(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&x(r,n,!0)>=t-1)break;t--}o++}return Xe}(e)}function at(e){var t,n=e._a;return n&&-2===f(e).overflow&&(t=n[1]<0||n[1]>11?1:n[2]<1||n[2]>xe(n[0],n[1])?2:n[3]<0||n[3]>24||24===n[3]&&(0!==n[4]||0!==n[5]||0!==n[6])?3:n[4]<0||n[4]>59?4:n[5]<0||n[5]>59?5:n[6]<0||n[6]>999?6:-1,f(e)._overflowDayOfYear&&(t<0||t>2)&&(t=2),f(e)._overflowWeeks&&-1===t&&(t=7),f(e)._overflowWeekday&&-1===t&&(t=8),f(e).overflow=t),e}function lt(e,t,n){return null!=e?e:null!=t?t:n}function ut(e){var t,n,r,o,s,a=[];if(!e._d){for(r=function(e){var t=new Date(i.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var t,n,i,r,o,s,a,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)o=1,s=4,n=lt(t.GG,e._a[0],je(St(),1,4).year),i=lt(t.W,1),((r=lt(t.E,1))<1||r>7)&&(l=!0);else{o=e._locale._week.dow,s=e._locale._week.doy;var u=je(St(),o,s);n=lt(t.gg,e._a[0],u.year),i=lt(t.w,u.week),null!=t.d?((r=t.d)<0||r>6)&&(l=!0):null!=t.e?(r=t.e+o,(t.e<0||t.e>6)&&(l=!0)):r=o}i<1||i>Le(n,o,s)?f(e)._overflowWeeks=!0:null!=l?f(e)._overflowWeekday=!0:(a=Re(n,i,r,o,s),e._a[0]=a.year,e._dayOfYear=a.dayOfYear)}(e),null!=e._dayOfYear&&(s=lt(e._a[0],r[0]),(e._dayOfYear>ye(s)||0===e._dayOfYear)&&(f(e)._overflowDayOfYear=!0),n=Ae(s,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=a[t]=r[t];for(;t<7;t++)e._a[t]=a[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?Ae:Ie).apply(null,a),o=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&"undefined"!==typeof e._w.d&&e._w.d!==o&&(f(e).weekdayMismatch=!0)}}var ct=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,dt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,ht=/Z|[+-]\d\d(?::?\d\d)?/,ft=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],pt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],vt=/^\/?Date\((\-?\d+)/i;function yt(e){var t,n,i,r,o,s,a=e._i,l=ct.exec(a)||dt.exec(a);if(l){for(f(e).iso=!0,t=0,n=ft.length;t<n;t++)if(ft[t][1].exec(l[1])){r=ft[t][0],i=!1!==ft[t][2];break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=pt.length;t<n;t++)if(pt[t][1].exec(l[3])){o=(l[2]||" ")+pt[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!ht.exec(l[4]))return void(e._isValid=!1);s="Z"}e._f=r+(o||"")+(s||""),_t(e)}else e._isValid=!1}var gt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function mt(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}var bt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function wt(e){var t=gt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(t){var n=function(e,t,n,i,r,o){var s=[mt(e),Ee.indexOf(t),parseInt(n,10),parseInt(i,10),parseInt(r,10)];return o&&s.push(parseInt(o,10)),s}(t[4],t[3],t[2],t[5],t[6],t[7]);if(!function(e,t,n){return!e||Be.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(f(n).weekdayMismatch=!0,n._isValid=!1,!1)}(t[1],n,e))return;e._a=n,e._tzm=function(e,t,n){if(e)return bt[e];if(t)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(t[8],t[9],t[10]),e._d=Ae.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),f(e).rfc2822=!0}else e._isValid=!1}function _t(e){if(e._f!==i.ISO_8601)if(e._f!==i.RFC_2822){e._a=[],f(e).empty=!0;var t,n,r,o,s,a=""+e._i,l=a.length,u=0;for(r=V(e._f,e._locale).match(z)||[],t=0;t<r.length;t++)o=r[t],(n=(a.match(ce(o,e))||[])[0])&&((s=a.substr(0,a.indexOf(n))).length>0&&f(e).unusedInput.push(s),a=a.slice(a.indexOf(n)+n.length),u+=n.length),H[o]?(n?f(e).empty=!1:f(e).unusedTokens.push(o),ve(o,n,e)):e._strict&&!n&&f(e).unusedTokens.push(o);f(e).charsLeftOver=l-u,a.length>0&&f(e).unusedInput.push(a),e._a[3]<=12&&!0===f(e).bigHour&&e._a[3]>0&&(f(e).bigHour=void 0),f(e).parsedDateParts=e._a.slice(0),f(e).meridiem=e._meridiem,e._a[3]=function(e,t,n){var i;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?((i=e.isPM(n))&&t<12&&(t+=12),i||12!==t||(t=0),t):t}(e._locale,e._a[3],e._meridiem),ut(e),at(e)}else wt(e);else yt(e)}function kt(e){var t=e._i,n=e._f;return e._locale=e._locale||st(e._l),null===t||void 0===n&&""===t?v({nullInput:!0}):("string"===typeof t&&(e._i=t=e._locale.preparse(t)),w(t)?new b(at(t)):(l(t)?e._d=t:r(n)?function(e){var t,n,i,r,o;if(0===e._f.length)return f(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=g({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],_t(t),p(t)&&(o+=f(t).charsLeftOver,o+=10*f(t).unusedTokens.length,f(t).score=o,(null==i||o<i)&&(i=o,n=t));d(e,n||t)}(e):n?_t(e):function(e){var t=e._i;s(t)?e._d=new Date(i.now()):l(t)?e._d=new Date(t.valueOf()):"string"===typeof t?function(e){var t=vt.exec(e._i);null===t?(yt(e),!1===e._isValid&&(delete e._isValid,wt(e),!1===e._isValid&&(delete e._isValid,i.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):r(t)?(e._a=u(t.slice(0),(function(e){return parseInt(e,10)})),ut(e)):o(t)?function(e){if(!e._d){var t=F(e._i);e._a=u([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),ut(e)}}(e):a(t)?e._d=new Date(t):i.createFromInputFallback(e)}(e),p(e)||(e._d=null),e))}function xt(e,t,n,i,s){var a={};return!0!==n&&!1!==n||(i=n,n=void 0),(o(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||r(e)&&0===e.length)&&(e=void 0),a._isAMomentObject=!0,a._useUTC=a._isUTC=s,a._l=n,a._i=e,a._f=t,a._strict=i,function(e){var t=new b(at(kt(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}(a)}function St(e,t,n,i){return xt(e,t,n,i,!1)}i.createFromInputFallback=O("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),i.ISO_8601=function(){},i.RFC_2822=function(){};var Ot=O("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:v()})),Et=O("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:v()}));function Tt(e,t){var n,i;if(1===t.length&&r(t[0])&&(t=t[0]),!t.length)return St();for(n=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](n)||(n=t[i]);return n}var Mt=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Dt(e){var t=F(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||t.isoWeek||0,s=t.day||0,a=t.hour||0,l=t.minute||0,u=t.second||0,c=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===me.call(Mt,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,i=0;i<Mt.length;++i)if(e[Mt[i]]){if(n)return!1;parseFloat(e[Mt[i]])!==k(e[Mt[i]])&&(n=!0)}return!0}(t),this._milliseconds=+c+1e3*u+6e4*l+1e3*a*60*60,this._days=+s+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=st(),this._bubble()}function Ct(e){return e instanceof Dt}function Pt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Nt(e,t){W(e,0,0,(function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+L(~~(e/60),2)+t+L(~~e%60,2)}))}Nt("Z",":"),Nt("ZZ",""),ue("Z",se),ue("ZZ",se),fe(["Z","ZZ"],(function(e,t,n){n._useUTC=!0,n._tzm=At(se,e)}));var It=/([\+\-]|\d\d)/gi;function At(e,t){var n=(t||"").match(e);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(It)||["-",0,0],r=60*i[1]+k(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ft(e,t){var n,r;return t._isUTC?(n=t.clone(),r=(w(e)||l(e)?e.valueOf():St(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+r),i.updateOffset(n,!1),n):St(e).local()}function Rt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function jt(){return!!this.isValid()&&this._isUTC&&0===this._offset}i.updateOffset=function(){};var Lt=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,zt=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Yt(e,t){var n,i,r,o=e,s=null;return Ct(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:a(e)?(o={},t?o[t]=e:o.milliseconds=e):(s=Lt.exec(e))?(n="-"===s[1]?-1:1,o={y:0,d:k(s[2])*n,h:k(s[3])*n,m:k(s[4])*n,s:k(s[5])*n,ms:k(Pt(1e3*s[6]))*n}):(s=zt.exec(e))?(n="-"===s[1]?-1:1,o={y:Bt(s[2],n),M:Bt(s[3],n),w:Bt(s[4],n),d:Bt(s[5],n),h:Bt(s[6],n),m:Bt(s[7],n),s:Bt(s[8],n)}):null==o?o={}:"object"===typeof o&&("from"in o||"to"in o)&&(r=function(e,t){var n;return e.isValid()&&t.isValid()?(t=Ft(t,e),e.isBefore(t)?n=Ht(e,t):((n=Ht(t,e)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(St(o.from),St(o.to)),(o={}).ms=r.milliseconds,o.M=r.months),i=new Dt(o),Ct(e)&&c(e,"_locale")&&(i._locale=e._locale),i}function Bt(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function Ht(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function Wt(e,t){return function(n,i){var r;return null===i||isNaN(+i)||(M(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),Ut(this,Yt(n="string"===typeof n?+n:n,i),e),this}}function Ut(e,t,n,r){var o=t._milliseconds,s=Pt(t._days),a=Pt(t._months);e.isValid()&&(r=null==r||r,a&&Me(e,_e(e,"Month")+a*n),s&&ke(e,"Date",_e(e,"Date")+s*n),o&&e._d.setTime(e._d.valueOf()+o*n),r&&i.updateOffset(e,s||a))}Yt.fn=Dt.prototype,Yt.invalid=function(){return Yt(NaN)};var Vt=Wt(1,"add"),Gt=Wt(-1,"subtract");function qt(e,t){var n=12*(t.year()-e.year())+(t.month()-e.month()),i=e.clone().add(n,"months");return-(n+(t-i<0?(t-i)/(i-e.clone().add(n-1,"months")):(t-i)/(e.clone().add(n+1,"months")-i)))||0}function $t(e){var t;return void 0===e?this._locale._abbr:(null!=(t=st(e))&&(this._locale=t),this)}i.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",i.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Zt=O("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));function Qt(){return this._locale}function Xt(e,t){return(e%t+t)%t}function Kt(e,t,n){return e<100&&e>=0?new Date(e+400,t,n)-126227808e5:new Date(e,t,n).valueOf()}function Jt(e,t,n){return e<100&&e>=0?Date.UTC(e+400,t,n)-126227808e5:Date.UTC(e,t,n)}function en(e,t){W(0,[e,e.length],0,t)}function tn(e,t,n,i,r){var o;return null==e?je(this,i,r).year:(t>(o=Le(e,i,r))&&(t=o),nn.call(this,e,t,n,i,r))}function nn(e,t,n,i,r){var o=Re(e,t,n,i,r),s=Ae(o.year,0,o.dayOfYear);return this.year(s.getUTCFullYear()),this.month(s.getUTCMonth()),this.date(s.getUTCDate()),this}W(0,["gg",2],0,(function(){return this.weekYear()%100})),W(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),en("gggg","weekYear"),en("ggggg","weekYear"),en("GGGG","isoWeekYear"),en("GGGGG","isoWeekYear"),I("weekYear","gg"),I("isoWeekYear","GG"),j("weekYear",1),j("isoWeekYear",1),ue("G",re),ue("g",re),ue("GG",X,q),ue("gg",X,q),ue("GGGG",te,Z),ue("gggg",te,Z),ue("GGGGG",ne,Q),ue("ggggg",ne,Q),pe(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,n,i){t[i.substr(0,2)]=k(e)})),pe(["gg","GG"],(function(e,t,n,r){t[r]=i.parseTwoDigitYear(e)})),W("Q",0,"Qo","quarter"),I("quarter","Q"),j("quarter",7),ue("Q",G),fe("Q",(function(e,t){t[1]=3*(k(e)-1)})),W("D",["DD",2],"Do","date"),I("date","D"),j("date",9),ue("D",X),ue("DD",X,q),ue("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),fe(["D","DD"],2),fe("Do",(function(e,t){t[2]=k(e.match(X)[0])}));var rn=we("Date",!0);W("DDD",["DDDD",3],"DDDo","dayOfYear"),I("dayOfYear","DDD"),j("dayOfYear",4),ue("DDD",ee),ue("DDDD",$),fe(["DDD","DDDD"],(function(e,t,n){n._dayOfYear=k(e)})),W("m",["mm",2],0,"minute"),I("minute","m"),j("minute",14),ue("m",X),ue("mm",X,q),fe(["m","mm"],4);var on=we("Minutes",!1);W("s",["ss",2],0,"second"),I("second","s"),j("second",15),ue("s",X),ue("ss",X,q),fe(["s","ss"],5);var sn,an=we("Seconds",!1);for(W("S",0,0,(function(){return~~(this.millisecond()/100)})),W(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),W(0,["SSS",3],0,"millisecond"),W(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),W(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),W(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),W(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),W(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),W(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),I("millisecond","ms"),j("millisecond",16),ue("S",ee,G),ue("SS",ee,q),ue("SSS",ee,$),sn="SSSS";sn.length<=9;sn+="S")ue(sn,ie);function ln(e,t){t[6]=k(1e3*("0."+e))}for(sn="S";sn.length<=9;sn+="S")fe(sn,ln);var un=we("Milliseconds",!1);W("z",0,0,"zoneAbbr"),W("zz",0,0,"zoneName");var cn=b.prototype;function dn(e){return e}cn.add=Vt,cn.calendar=function(e,t){var n=e||St(),r=Ft(n,this).startOf("day"),o=i.calendarFormat(this,r)||"sameElse",s=t&&(D(t[o])?t[o].call(this,n):t[o]);return this.format(s||this.localeData().calendar(o,this,St(n)))},cn.clone=function(){return new b(this)},cn.diff=function(e,t,n){var i,r,o;if(!this.isValid())return NaN;if(!(i=Ft(e,this)).isValid())return NaN;switch(r=6e4*(i.utcOffset()-this.utcOffset()),t=A(t)){case"year":o=qt(this,i)/12;break;case"month":o=qt(this,i);break;case"quarter":o=qt(this,i)/3;break;case"second":o=(this-i)/1e3;break;case"minute":o=(this-i)/6e4;break;case"hour":o=(this-i)/36e5;break;case"day":o=(this-i-r)/864e5;break;case"week":o=(this-i-r)/6048e5;break;default:o=this-i}return n?o:_(o)},cn.endOf=function(e){var t;if(void 0===(e=A(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Jt:Kt;switch(e){case"year":t=n(this.year()+1,0,1)-1;break;case"quarter":t=n(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=n(this.year(),this.month()+1,1)-1;break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=n(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=36e5-Xt(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1;break;case"minute":t=this._d.valueOf(),t+=6e4-Xt(t,6e4)-1;break;case"second":t=this._d.valueOf(),t+=1e3-Xt(t,1e3)-1}return this._d.setTime(t),i.updateOffset(this,!0),this},cn.format=function(e){e||(e=this.isUtc()?i.defaultFormatUtc:i.defaultFormat);var t=U(this,e);return this.localeData().postformat(t)},cn.from=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||St(e).isValid())?Yt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},cn.fromNow=function(e){return this.from(St(),e)},cn.to=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||St(e).isValid())?Yt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},cn.toNow=function(e){return this.to(St(),e)},cn.get=function(e){return D(this[e=A(e)])?this[e]():this},cn.invalidAt=function(){return f(this).overflow},cn.isAfter=function(e,t){var n=w(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},cn.isBefore=function(e,t){var n=w(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},cn.isBetween=function(e,t,n,i){var r=w(e)?e:St(e),o=w(t)?t:St(t);return!!(this.isValid()&&r.isValid()&&o.isValid())&&("("===(i=i||"()")[0]?this.isAfter(r,n):!this.isBefore(r,n))&&(")"===i[1]?this.isBefore(o,n):!this.isAfter(o,n))},cn.isSame=function(e,t){var n,i=w(e)?e:St(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},cn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},cn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},cn.isValid=function(){return p(this)},cn.lang=Zt,cn.locale=$t,cn.localeData=Qt,cn.max=Et,cn.min=Ot,cn.parsingFlags=function(){return d({},f(this))},cn.set=function(e,t){if("object"===typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:R[n]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=F(e)),i=0;i<n.length;i++)this[n[i].unit](e[n[i].unit]);else if(D(this[e=A(e)]))return this[e](t);return this},cn.startOf=function(e){var t;if(void 0===(e=A(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Jt:Kt;switch(e){case"year":t=n(this.year(),0,1);break;case"quarter":t=n(this.year(),this.month()-this.month()%3,1);break;case"month":t=n(this.year(),this.month(),1);break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=n(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=Xt(t+(this._isUTC?0:6e4*this.utcOffset()),36e5);break;case"minute":t=this._d.valueOf(),t-=Xt(t,6e4);break;case"second":t=this._d.valueOf(),t-=Xt(t,1e3)}return this._d.setTime(t),i.updateOffset(this,!0),this},cn.subtract=Gt,cn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},cn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},cn.toDate=function(){return new Date(this.valueOf())},cn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?U(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):D(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",U(n,"Z")):U(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},cn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',i=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r=t+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},cn.toJSON=function(){return this.isValid()?this.toISOString():null},cn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},cn.unix=function(){return Math.floor(this.valueOf()/1e3)},cn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},cn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},cn.year=be,cn.isLeapYear=function(){return ge(this.year())},cn.weekYear=function(e){return tn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},cn.isoWeekYear=function(e){return tn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},cn.quarter=cn.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},cn.month=De,cn.daysInMonth=function(){return xe(this.year(),this.month())},cn.week=cn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},cn.isoWeek=cn.isoWeeks=function(e){var t=je(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},cn.weeksInYear=function(){var e=this.localeData()._week;return Le(this.year(),e.dow,e.doy)},cn.isoWeeksInYear=function(){return Le(this.year(),1,4)},cn.date=rn,cn.day=cn.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,t){return"string"!==typeof e?e:isNaN(e)?"number"===typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,"d")):t},cn.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},cn.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return"string"===typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},cn.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},cn.hour=cn.hours=Ke,cn.minute=cn.minutes=on,cn.second=cn.seconds=an,cn.millisecond=cn.milliseconds=un,cn.utcOffset=function(e,t,n){var r,o=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"===typeof e){if(null===(e=At(se,e)))return this}else Math.abs(e)<16&&!n&&(e*=60);return!this._isUTC&&t&&(r=Rt(this)),this._offset=e,this._isUTC=!0,null!=r&&this.add(r,"m"),o!==e&&(!t||this._changeInProgress?Ut(this,Yt(e-o,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,i.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:Rt(this)},cn.utc=function(e){return this.utcOffset(0,e)},cn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Rt(this),"m")),this},cn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"===typeof this._i){var e=At(oe,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},cn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?St(e).utcOffset():0,(this.utcOffset()-e)%60===0)},cn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},cn.isLocal=function(){return!!this.isValid()&&!this._isUTC},cn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},cn.isUtc=jt,cn.isUTC=jt,cn.zoneAbbr=function(){return this._isUTC?"UTC":""},cn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},cn.dates=O("dates accessor is deprecated. Use date instead.",rn),cn.months=O("months accessor is deprecated. Use month instead",De),cn.years=O("years accessor is deprecated. Use year instead",be),cn.zone=O("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null!=e?("string"!==typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),cn.isDSTShifted=O("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!s(this._isDSTShifted))return this._isDSTShifted;var e={};if(g(e,this),(e=kt(e))._a){var t=e._isUTC?h(e._a):St(e._a);this._isDSTShifted=this.isValid()&&x(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}));var hn=P.prototype;function fn(e,t,n,i){var r=st(),o=h().set(i,t);return r[n](o,e)}function pn(e,t,n){if(a(e)&&(t=e,e=void 0),e=e||"",null!=t)return fn(e,t,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=fn(e,i,n,"month");return r}function vn(e,t,n,i){"boolean"===typeof e?(a(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,a(t)&&(n=t,t=void 0),t=t||"");var r,o=st(),s=e?o._week.dow:0;if(null!=n)return fn(t,(n+s)%7,i,"day");var l=[];for(r=0;r<7;r++)l[r]=fn(t,(r+s)%7,i,"day");return l}hn.calendar=function(e,t,n){var i=this._calendar[e]||this._calendar.sameElse;return D(i)?i.call(t,n):i},hn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},hn.invalidDate=function(){return this._invalidDate},hn.ordinal=function(e){return this._ordinal.replace("%d",e)},hn.preparse=dn,hn.postformat=dn,hn.relativeTime=function(e,t,n,i){var r=this._relativeTime[n];return D(r)?r(e,t,n,i):r.replace(/%d/i,e)},hn.pastFuture=function(e,t){var n=this._relativeTime[e>0?"future":"past"];return D(n)?n(t):n.replace(/%s/i,t)},hn.set=function(e){var t,n;for(n in e)D(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},hn.months=function(e,t){return e?r(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Se).test(t)?"format":"standalone"][e.month()]:r(this._months)?this._months:this._months.standalone},hn.monthsShort=function(e,t){return e?r(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Se.test(t)?"format":"standalone"][e.month()]:r(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},hn.monthsParse=function(e,t,n){var i,r,o;if(this._monthsParseExact)return Te.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=h([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}},hn.monthsRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Ne.call(this),e?this._monthsStrictRegex:this._monthsRegex):(c(this,"_monthsRegex")||(this._monthsRegex=Pe),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},hn.monthsShortRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Ne.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(c(this,"_monthsShortRegex")||(this._monthsShortRegex=Ce),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},hn.week=function(e){return je(e,this._week.dow,this._week.doy).week},hn.firstDayOfYear=function(){return this._week.doy},hn.firstDayOfWeek=function(){return this._week.dow},hn.weekdays=function(e,t){var n=r(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?ze(n,this._week.dow):e?n[e.day()]:n},hn.weekdaysMin=function(e){return!0===e?ze(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},hn.weekdaysShort=function(e){return!0===e?ze(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},hn.weekdaysParse=function(e,t,n){var i,r,o;if(this._weekdaysParseExact)return We.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=h([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}},hn.weekdaysRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(c(this,"_weekdaysRegex")||(this._weekdaysRegex=Ue),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},hn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(c(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ve),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},hn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(c(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Ge),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},hn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},hn.meridiem=function(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"},rt("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===k(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),i.lang=O("moment.lang is deprecated. Use moment.locale instead.",rt),i.langData=O("moment.langData is deprecated. Use moment.localeData instead.",st);var yn=Math.abs;function gn(e,t,n,i){var r=Yt(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function mn(e){return e<0?Math.floor(e):Math.ceil(e)}function bn(e){return 4800*e/146097}function wn(e){return 146097*e/4800}function _n(e){return function(){return this.as(e)}}var kn=_n("ms"),xn=_n("s"),Sn=_n("m"),On=_n("h"),En=_n("d"),Tn=_n("w"),Mn=_n("M"),Dn=_n("Q"),Cn=_n("y");function Pn(e){return function(){return this.isValid()?this._data[e]:NaN}}var Nn=Pn("milliseconds"),In=Pn("seconds"),An=Pn("minutes"),Fn=Pn("hours"),Rn=Pn("days"),jn=Pn("months"),Ln=Pn("years"),zn=Math.round,Yn={ss:44,s:45,m:45,h:22,d:26,M:11};function Bn(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}var Hn=Math.abs;function Wn(e){return(e>0)-(e<0)||+e}function Un(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Hn(this._milliseconds)/1e3,i=Hn(this._days),r=Hn(this._months);e=_(n/60),t=_(e/60),n%=60,e%=60;var o=_(r/12),s=r%=12,a=i,l=t,u=e,c=n?n.toFixed(3).replace(/\.?0+$/,""):"",d=this.asSeconds();if(!d)return"P0D";var h=d<0?"-":"",f=Wn(this._months)!==Wn(d)?"-":"",p=Wn(this._days)!==Wn(d)?"-":"",v=Wn(this._milliseconds)!==Wn(d)?"-":"";return h+"P"+(o?f+o+"Y":"")+(s?f+s+"M":"")+(a?p+a+"D":"")+(l||u||c?"T":"")+(l?v+l+"H":"")+(u?v+u+"M":"")+(c?v+c+"S":"")}var Vn=Dt.prototype;return Vn.isValid=function(){return this._isValid},Vn.abs=function(){var e=this._data;return this._milliseconds=yn(this._milliseconds),this._days=yn(this._days),this._months=yn(this._months),e.milliseconds=yn(e.milliseconds),e.seconds=yn(e.seconds),e.minutes=yn(e.minutes),e.hours=yn(e.hours),e.months=yn(e.months),e.years=yn(e.years),this},Vn.add=function(e,t){return gn(this,e,t,1)},Vn.subtract=function(e,t){return gn(this,e,t,-1)},Vn.as=function(e){if(!this.isValid())return NaN;var t,n,i=this._milliseconds;if("month"===(e=A(e))||"quarter"===e||"year"===e)switch(t=this._days+i/864e5,n=this._months+bn(t),e){case"month":return n;case"quarter":return n/3;case"year":return n/12}else switch(t=this._days+Math.round(wn(this._months)),e){case"week":return t/7+i/6048e5;case"day":return t+i/864e5;case"hour":return 24*t+i/36e5;case"minute":return 1440*t+i/6e4;case"second":return 86400*t+i/1e3;case"millisecond":return Math.floor(864e5*t)+i;default:throw new Error("Unknown unit "+e)}},Vn.asMilliseconds=kn,Vn.asSeconds=xn,Vn.asMinutes=Sn,Vn.asHours=On,Vn.asDays=En,Vn.asWeeks=Tn,Vn.asMonths=Mn,Vn.asQuarters=Dn,Vn.asYears=Cn,Vn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*k(this._months/12):NaN},Vn._bubble=function(){var e,t,n,i,r,o=this._milliseconds,s=this._days,a=this._months,l=this._data;return o>=0&&s>=0&&a>=0||o<=0&&s<=0&&a<=0||(o+=864e5*mn(wn(a)+s),s=0,a=0),l.milliseconds=o%1e3,e=_(o/1e3),l.seconds=e%60,t=_(e/60),l.minutes=t%60,n=_(t/60),l.hours=n%24,s+=_(n/24),r=_(bn(s)),a+=r,s-=mn(wn(r)),i=_(a/12),a%=12,l.days=s,l.months=a,l.years=i,this},Vn.clone=function(){return Yt(this)},Vn.get=function(e){return e=A(e),this.isValid()?this[e+"s"]():NaN},Vn.milliseconds=Nn,Vn.seconds=In,Vn.minutes=An,Vn.hours=Fn,Vn.days=Rn,Vn.weeks=function(){return _(this.days()/7)},Vn.months=jn,Vn.years=Ln,Vn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var i=Yt(e).abs(),r=zn(i.as("s")),o=zn(i.as("m")),s=zn(i.as("h")),a=zn(i.as("d")),l=zn(i.as("M")),u=zn(i.as("y")),c=r<=Yn.ss&&["s",r]||r<Yn.s&&["ss",r]||o<=1&&["m"]||o<Yn.m&&["mm",o]||s<=1&&["h"]||s<Yn.h&&["hh",s]||a<=1&&["d"]||a<Yn.d&&["dd",a]||l<=1&&["M"]||l<Yn.M&&["MM",l]||u<=1&&["y"]||["yy",u];return c[2]=t,c[3]=+e>0,c[4]=n,Bn.apply(null,c)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},Vn.toISOString=Un,Vn.toString=Un,Vn.toJSON=Un,Vn.locale=$t,Vn.localeData=Qt,Vn.toIsoString=O("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Un),Vn.lang=Zt,W("X",0,0,"unix"),W("x",0,0,"valueOf"),ue("x",re),ue("X",/[+-]?\d+(\.\d{1,3})?/),fe("X",(function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))})),fe("x",(function(e,t,n){n._d=new Date(k(e))})),i.version="2.24.0",t=St,i.fn=cn,i.min=function(){var e=[].slice.call(arguments,0);return Tt("isBefore",e)},i.max=function(){var e=[].slice.call(arguments,0);return Tt("isAfter",e)},i.now=function(){return Date.now?Date.now():+new Date},i.utc=h,i.unix=function(e){return St(1e3*e)},i.months=function(e,t){return pn(e,t,"months")},i.isDate=l,i.locale=rt,i.invalid=v,i.duration=Yt,i.isMoment=w,i.weekdays=function(e,t,n){return vn(e,t,n,"weekdays")},i.parseZone=function(){return St.apply(null,arguments).parseZone()},i.localeData=st,i.isDuration=Ct,i.monthsShort=function(e,t){return pn(e,t,"monthsShort")},i.weekdaysMin=function(e,t,n){return vn(e,t,n,"weekdaysMin")},i.defineLocale=ot,i.updateLocale=function(e,t){if(null!=t){var n,i,r=Je;null!=(i=it(e))&&(r=i._config),t=C(r,t),(n=new P(t)).parentLocale=et[e],et[e]=n,rt(e)}else null!=et[e]&&(null!=et[e].parentLocale?et[e]=et[e].parentLocale:null!=et[e]&&delete et[e]);return et[e]},i.locales=function(){return E(et)},i.weekdaysShort=function(e,t,n){return vn(e,t,n,"weekdaysShort")},i.normalizeUnits=A,i.relativeTimeRounding=function(e){return void 0===e?zn:"function"===typeof e&&(zn=e,!0)},i.relativeTimeThreshold=function(e,t){return void 0!==Yn[e]&&(void 0===t?Yn[e]:(Yn[e]=t,"s"===e&&(Yn.ss=t-1),!0))},i.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},i.prototype=cn,i.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},i}()}).call(this,n(15)(e))},function(e,t,n){"use strict";(function(e){var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof e?e:"undefined"!=typeof self?self:{};function i(e,t){return e(t={exports:{}},t.exports),t.exports}var r=function(e){return e&&e.Math==Math&&e},o=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n&&n)||Function("return this")(),s=function(e){try{return!!e()}catch(e){return!0}},a=!s((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),l={}.propertyIsEnumerable,u=Object.getOwnPropertyDescriptor,c={f:u&&!l.call({1:2},1)?function(e){var t=u(this,e);return!!t&&t.enumerable}:l},d=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},h={}.toString,f=function(e){return h.call(e).slice(8,-1)},p="".split,v=s((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==f(e)?p.call(e,""):Object(e)}:Object,y=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},g=function(e){return v(y(e))},m=function(e){return"object"==typeof e?null!==e:"function"==typeof e},b=function(e,t){if(!m(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!m(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!m(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!m(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")},w={}.hasOwnProperty,_=function(e,t){return w.call(e,t)},k=o.document,x=m(k)&&m(k.createElement),S=function(e){return x?k.createElement(e):{}},O=!a&&!s((function(){return 7!=Object.defineProperty(S("div"),"a",{get:function(){return 7}}).a})),E=Object.getOwnPropertyDescriptor,T={f:a?E:function(e,t){if(e=g(e),t=b(t,!0),O)try{return E(e,t)}catch(e){}if(_(e,t))return d(!c.f.call(e,t),e[t])}},M=/#|\.prototype\./,D=function(e,t){var n=P[C(e)];return n==I||n!=N&&("function"==typeof t?s(t):!!t)},C=D.normalize=function(e){return String(e).replace(M,".").toLowerCase()},P=D.data={},N=D.NATIVE="N",I=D.POLYFILL="P",A=D,F={},R=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},j=function(e,t,n){if(R(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}},L=function(e){if(!m(e))throw TypeError(String(e)+" is not an object");return e},z=Object.defineProperty,Y={f:a?z:function(e,t,n){if(L(e),t=b(t,!0),L(n),O)try{return z(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},B=a?function(e,t,n){return Y.f(e,t,d(1,n))}:function(e,t,n){return e[t]=n,e},H=T.f,W=function(e){var t=function(t,n,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,i)}return e.apply(this,arguments)};return t.prototype=e.prototype,t},U=function(e,t){var n,i,r,s,a,l,u,c,d=e.target,h=e.global,f=e.stat,p=e.proto,v=h?o:f?o[d]:(o[d]||{}).prototype,y=h?F:F[d]||(F[d]={}),g=y.prototype;for(r in t)n=!A(h?r:d+(f?".":"#")+r,e.forced)&&v&&_(v,r),a=y[r],n&&(l=e.noTargetGet?(c=H(v,r))&&c.value:v[r]),s=n&&l?l:t[r],n&&typeof a==typeof s||(u=e.bind&&n?j(s,o):e.wrap&&n?W(s):p&&"function"==typeof s?j(Function.call,s):s,(e.sham||s&&s.sham||a&&a.sham)&&B(u,"sham",!0),y[r]=u,p&&(_(F,i=d+"Prototype")||B(F,i,{}),F[i][r]=s,e.real&&g&&!g[r]&&B(g,r,s)))},V=[].slice,G={},q=function(e,t,n){if(!(t in G)){for(var i=[],r=0;r<t;r++)i[r]="a["+r+"]";G[t]=Function("C,a","return new C("+i.join(",")+")")}return G[t](e,n)},$=Function.bind||function(e){var t=R(this),n=V.call(arguments,1),i=function i(){var r=n.concat(V.call(arguments));return this instanceof i?q(t,r.length,r):t.apply(e,r)};return m(t.prototype)&&(i.prototype=t.prototype),i};U({target:"Function",proto:!0},{bind:$});var Z=function(e){return F[e+"Prototype"]},Q=Z("Function").bind,X=Function.prototype,K=function(e){var t=e.bind;return e===X||e instanceof Function&&t===X.bind?Q:t};function J(e,t,n,i){e.beginPath(),e.arc(t,n,i,0,2*Math.PI,!1),e.closePath()}function ee(e,t,n,i,r,o){var s=Math.PI/180;i-2*o<0&&(o=i/2),r-2*o<0&&(o=r/2),e.beginPath(),e.moveTo(t+o,n),e.lineTo(t+i-o,n),e.arc(t+i-o,n+o,o,270*s,360*s,!1),e.lineTo(t+i,n+r-o),e.arc(t+i-o,n+r-o,o,0,90*s,!1),e.lineTo(t+o,n+r),e.arc(t+o,n+r-o,o,90*s,180*s,!1),e.lineTo(t,n+o),e.arc(t+o,n+o,o,180*s,270*s,!1),e.closePath()}function te(e,t,n,i,r){var o=i/2*.5522848,s=r/2*.5522848,a=t+i,l=n+r,u=t+i/2,c=n+r/2;e.beginPath(),e.moveTo(t,c),e.bezierCurveTo(t,c-s,u-o,n,u,n),e.bezierCurveTo(u+o,n,a,c-s,a,c),e.bezierCurveTo(a,c+s,u+o,l,u,l),e.bezierCurveTo(u-o,l,t,c+s,t,c),e.closePath()}function ne(e,t,n,i,r){var o=r*(1/3),s=i/2*.5522848,a=o/2*.5522848,l=t+i,u=n+o,c=t+i/2,d=n+o/2,h=n+(r-o/2),f=n+r;e.beginPath(),e.moveTo(l,d),e.bezierCurveTo(l,d+a,c+s,u,c,u),e.bezierCurveTo(c-s,u,t,d+a,t,d),e.bezierCurveTo(t,d-a,c-s,n,c,n),e.bezierCurveTo(c+s,n,l,d-a,l,d),e.lineTo(l,h),e.bezierCurveTo(l,h+a,c+s,f,c,f),e.bezierCurveTo(c-s,f,t,h+a,t,h),e.lineTo(t,d)}function ie(e,t,n,i,r,o){e.beginPath(),e.moveTo(t,n);for(var s=o.length,a=i-t,l=r-n,u=l/a,c=Math.sqrt(a*a+l*l),d=0,h=!0,f=0,p=+o[0];c>=.1;)(p=+o[d++%s])>c&&(p=c),f=Math.sqrt(p*p/(1+u*u)),t+=f=a<0?-f:f,n+=u*f,!0===h?e.lineTo(t,n):e.moveTo(t,n),c-=p,h=!h}var re={circle:J,dashedLine:ie,database:ne,diamond:function(e,t,n,i){e.beginPath(),e.lineTo(t,n+i),e.lineTo(t+i,n),e.lineTo(t,n-i),e.lineTo(t-i,n),e.closePath()},ellipse:te,ellipse_vis:te,hexagon:function(e,t,n,i){e.beginPath();var r=2*Math.PI/6;e.moveTo(t+i,n);for(var o=1;o<6;o++)e.lineTo(t+i*Math.cos(r*o),n+i*Math.sin(r*o));e.closePath()},roundRect:ee,square:function(e,t,n,i){e.beginPath(),e.rect(t-i,n-i,2*i,2*i),e.closePath()},star:function(e,t,n,i){e.beginPath(),n+=.1*(i*=.82);for(var r=0;r<10;r++){var o=r%2==0?1.3*i:.5*i;e.lineTo(t+o*Math.sin(2*r*Math.PI/10),n-o*Math.cos(2*r*Math.PI/10))}e.closePath()},triangle:function(e,t,n,i){e.beginPath(),n+=.275*(i*=1.15);var r=2*i,o=r/2,s=Math.sqrt(3)/6*r,a=Math.sqrt(r*r-o*o);e.moveTo(t,n-(a-s)),e.lineTo(t+o,n+s),e.lineTo(t-o,n+s),e.lineTo(t,n-(a-s)),e.closePath()},triangleDown:function(e,t,n,i){e.beginPath(),n-=.275*(i*=1.15);var r=2*i,o=r/2,s=Math.sqrt(3)/6*r,a=Math.sqrt(r*r-o*o);e.moveTo(t,n+(a-s)),e.lineTo(t+o,n-s),e.lineTo(t-o,n-s),e.lineTo(t,n+(a-s)),e.closePath()}},oe=i((function(e){function t(e){if(e)return function(e){for(var n in t.prototype)e[n]=t.prototype[n];return e}(e)}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},t.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,i=this._callbacks["$"+e];if(!i)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var r=0;r<i.length;r++)if((n=i[r])===t||n.fn===t){i.splice(r,1);break}return 0===i.length&&delete this._callbacks["$"+e],this},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),n=this._callbacks["$"+e],i=1;i<arguments.length;i++)t[i-1]=arguments[i];if(n){i=0;for(var r=(n=n.slice(0)).length;i<r;++i)n[i].apply(this,t)}return this},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},t.prototype.hasListeners=function(e){return!!this.listeners(e).length}})),se="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof e?e:"undefined"!=typeof self?self:{};function ae(e,t){return e(t={exports:{}},t.exports),t.exports}var le=function(e){return e&&e.Math==Math&&e},ue=le("object"==typeof globalThis&&globalThis)||le("object"==typeof window&&window)||le("object"==typeof self&&self)||le("object"==typeof se&&se)||Function("return this")(),ce=function(e){try{return!!e()}catch(e){return!0}},de=!ce((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),he={}.propertyIsEnumerable,fe=Object.getOwnPropertyDescriptor,pe={f:fe&&!he.call({1:2},1)?function(e){var t=fe(this,e);return!!t&&t.enumerable}:he},ve=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},ye={}.toString,ge=function(e){return ye.call(e).slice(8,-1)},me="".split,be=ce((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==ge(e)?me.call(e,""):Object(e)}:Object,we=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},_e=function(e){return be(we(e))},ke=function(e){return"object"==typeof e?null!==e:"function"==typeof e},xe=function(e,t){if(!ke(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!ke(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!ke(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!ke(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")},Se={}.hasOwnProperty,Oe=function(e,t){return Se.call(e,t)},Ee=ue.document,Te=ke(Ee)&&ke(Ee.createElement),Me=function(e){return Te?Ee.createElement(e):{}},De=!de&&!ce((function(){return 7!=Object.defineProperty(Me("div"),"a",{get:function(){return 7}}).a})),Ce=Object.getOwnPropertyDescriptor,Pe={f:de?Ce:function(e,t){if(e=_e(e),t=xe(t,!0),De)try{return Ce(e,t)}catch(e){}if(Oe(e,t))return ve(!pe.f.call(e,t),e[t])}},Ne=/#|\.prototype\./,Ie=function(e,t){var n=Fe[Ae(e)];return n==je||n!=Re&&("function"==typeof t?ce(t):!!t)},Ae=Ie.normalize=function(e){return String(e).replace(Ne,".").toLowerCase()},Fe=Ie.data={},Re=Ie.NATIVE="N",je=Ie.POLYFILL="P",Le=Ie,ze={},Ye=function(e,t,n){if(function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function")}(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}},Be=function(e){if(!ke(e))throw TypeError(String(e)+" is not an object");return e},He=Object.defineProperty,We={f:de?He:function(e,t,n){if(Be(e),t=xe(t,!0),Be(n),De)try{return He(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},Ue=de?function(e,t,n){return We.f(e,t,ve(1,n))}:function(e,t,n){return e[t]=n,e},Ve=Pe.f,Ge=function(e){var t=function(t,n,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,i)}return e.apply(this,arguments)};return t.prototype=e.prototype,t},qe=function(e,t){var n,i,r,o,s,a,l,u,c=e.target,d=e.global,h=e.stat,f=e.proto,p=d?ue:h?ue[c]:(ue[c]||{}).prototype,v=d?ze:ze[c]||(ze[c]={}),y=v.prototype;for(r in t)n=!Le(d?r:c+(h?".":"#")+r,e.forced)&&p&&Oe(p,r),s=v[r],n&&(a=e.noTargetGet?(u=Ve(p,r))&&u.value:p[r]),o=n&&a?a:t[r],n&&typeof s==typeof o||(l=e.bind&&n?Ye(o,ue):e.wrap&&n?Ge(o):f&&"function"==typeof o?Ye(Function.call,o):o,(e.sham||o&&o.sham||s&&s.sham)&&Ue(l,"sham",!0),v[r]=l,f&&(Oe(ze,i=c+"Prototype")||Ue(ze,i,{}),ze[i][r]=o,e.real&&y&&!y[r]&&Ue(y,r,o)))},$e=Array.isArray||function(e){return"Array"==ge(e)};qe({target:"Array",stat:!0},{isArray:$e});var Ze=ze.Array.isArray,Qe=Ze,Xe={},Ke=ue["__core-js_shared__"]||function(e,t){try{Ue(ue,e,t)}catch(i){ue[e]=t}return t}("__core-js_shared__",{}),Je=Function.toString;"function"!=typeof Ke.inspectSource&&(Ke.inspectSource=function(e){return Je.call(e)});var et,tt,nt,it=Ke.inspectSource,rt=ue.WeakMap,ot="function"==typeof rt&&/native code/.test(it(rt)),st=ae((function(e){(e.exports=function(e,t){return Ke[e]||(Ke[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.4",mode:"pure",copyright:"\xa9 2020 Denis Pushkarev (zloirock.ru)"})})),at=0,lt=Math.random(),ut=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++at+lt).toString(36)},ct=st("keys"),dt=function(e){return ct[e]||(ct[e]=ut(e))},ht={},ft=ue.WeakMap;if(ot){var pt=new ft,vt=pt.get,yt=pt.has,gt=pt.set;et=function(e,t){return gt.call(pt,e,t),t},tt=function(e){return vt.call(pt,e)||{}},nt=function(e){return yt.call(pt,e)}}else{var mt=dt("state");ht[mt]=!0,et=function(e,t){return Ue(e,mt,t),t},tt=function(e){return Oe(e,mt)?e[mt]:{}},nt=function(e){return Oe(e,mt)}}var bt,wt,_t,kt={set:et,get:tt,has:nt,enforce:function(e){return nt(e)?tt(e):et(e,{})},getterFor:function(e){return function(t){var n;if(!ke(t)||(n=tt(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},xt=function(e){return Object(we(e))},St=!ce((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Ot=dt("IE_PROTO"),Et=Object.prototype,Tt=St?Object.getPrototypeOf:function(e){return e=xt(e),Oe(e,Ot)?e[Ot]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?Et:null},Mt=!!Object.getOwnPropertySymbols&&!ce((function(){return!String(Symbol())})),Dt=Mt&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Ct=st("wks"),Pt=ue.Symbol,Nt=Dt?Pt:Pt&&Pt.withoutSetter||ut,It=function(e){return Oe(Ct,e)||(Mt&&Oe(Pt,e)?Ct[e]=Pt[e]:Ct[e]=Nt("Symbol."+e)),Ct[e]},At=(It("iterator"),!1);[].keys&&("next"in(_t=[].keys())?(wt=Tt(Tt(_t)))!==Object.prototype&&(bt=wt):At=!0),null==bt&&(bt={});var Ft,Rt={IteratorPrototype:bt,BUGGY_SAFARI_ITERATORS:At},jt=Math.ceil,Lt=Math.floor,zt=function(e){return isNaN(e=+e)?0:(e>0?Lt:jt)(e)},Yt=Math.min,Bt=function(e){return e>0?Yt(zt(e),9007199254740991):0},Ht=Math.max,Wt=Math.min,Ut=function(e,t){var n=zt(e);return n<0?Ht(n+t,0):Wt(n,t)},Vt=function(e){return function(t,n,i){var r,o=_e(t),s=Bt(o.length),a=Ut(i,s);if(e&&n!=n){for(;s>a;)if((r=o[a++])!=r)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===n)return e||a||0;return!e&&-1}},Gt={includes:Vt(!0),indexOf:Vt(!1)},qt=Gt.indexOf,$t=function(e,t){var n,i=_e(e),r=0,o=[];for(n in i)!Oe(ht,n)&&Oe(i,n)&&o.push(n);for(;t.length>r;)Oe(i,n=t[r++])&&(~qt(o,n)||o.push(n));return o},Zt=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Qt=Object.keys||function(e){return $t(e,Zt)},Xt=de?Object.defineProperties:function(e,t){Be(e);for(var n,i=Qt(t),r=i.length,o=0;r>o;)We.f(e,n=i[o++],t[n]);return e},Kt=function(e){return"function"==typeof e?e:void 0},Jt=function(e,t){return arguments.length<2?Kt(ze[e])||Kt(ue[e]):ze[e]&&ze[e][t]||ue[e]&&ue[e][t]},en=Jt("document","documentElement"),tn=dt("IE_PROTO"),nn=function(){},rn=function(e){return"<script>"+e+"<\/script>"},on=function(){try{Ft=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;on=Ft?function(e){e.write(rn("")),e.close();var t=e.parentWindow.Object;return e=null,t}(Ft):((t=Me("iframe")).style.display="none",en.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(rn("document.F=Object")),e.close(),e.F);for(var n=Zt.length;n--;)delete on.prototype[Zt[n]];return on()};ht[tn]=!0;var sn=Object.create||function(e,t){var n;return null!==e?(nn.prototype=Be(e),n=new nn,nn.prototype=null,n[tn]=e):n=on(),void 0===t?n:Xt(n,t)},an={};an[It("toStringTag")]="z";var ln="[object z]"===String(an),un=It("toStringTag"),cn="Arguments"==ge(function(){return arguments}()),dn=ln?ge:function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),un))?n:cn?ge(t):"Object"==(i=ge(t))&&"function"==typeof t.callee?"Arguments":i},hn=ln?{}.toString:function(){return"[object "+dn(this)+"]"},fn=We.f,pn=It("toStringTag"),vn=function(e,t,n,i){if(e){var r=n?e:e.prototype;Oe(r,pn)||fn(r,pn,{configurable:!0,value:t}),i&&!ln&&Ue(r,"toString",hn)}},yn=Rt.IteratorPrototype,gn=function(){return this},mn=(Object.setPrototypeOf||"__proto__"in{}&&function(){var e={};try{Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set.call(e,[]),e instanceof Array}catch(n){}}(),function(e,t,n,i){i&&i.enumerable?e[t]=n:Ue(e,t,n)}),bn=Rt.IteratorPrototype,wn=Rt.BUGGY_SAFARI_ITERATORS,_n=It("iterator"),kn=function(){return this},xn=function(e,t,n,i,r,o,s){!function(e,t,n){var i=t+" Iterator";e.prototype=sn(yn,{next:ve(1,n)}),vn(e,i,!1,!0),Xe[i]=gn}(n,t,i);var a,l,u,c=function(e){if(e===r&&v)return v;if(!wn&&e in f)return f[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},d=t+" Iterator",h=!1,f=e.prototype,p=f[_n]||f["@@iterator"]||r&&f[r],v=!wn&&p||c(r),y="Array"==t&&f.entries||p;if(y&&(a=Tt(y.call(new e)),bn!==Object.prototype&&a.next&&(vn(a,d,!0,!0),Xe[d]=kn)),"values"==r&&p&&"values"!==p.name&&(h=!0,v=function(){return p.call(this)}),s&&f[_n]!==v&&Ue(f,_n,v),Xe[t]=v,r)if(l={values:c("values"),keys:o?v:c("keys"),entries:c("entries")},s)for(u in l)!wn&&!h&&u in f||mn(f,u,l[u]);else qe({target:t,proto:!0,forced:wn||h},l);return l},Sn=kt.set,On=kt.getterFor("Array Iterator");xn(Array,"Array",(function(e,t){Sn(this,{type:"Array Iterator",target:_e(e),index:0,kind:t})}),(function(){var e=On(this),t=e.target,n=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:i,done:!1}:"values"==n?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),Xe.Arguments=Xe.Array;var En=It("toStringTag");for(var Tn in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var Mn=ue[Tn],Dn=Mn&&Mn.prototype;Dn&&dn(Dn)!==En&&Ue(Dn,En,Tn),Xe[Tn]=Xe.Array}var Cn=function(e){return function(t,n){var i,r,o=String(we(t)),s=zt(n),a=o.length;return s<0||s>=a?e?"":void 0:(i=o.charCodeAt(s))<55296||i>56319||s+1===a||(r=o.charCodeAt(s+1))<56320||r>57343?e?o.charAt(s):i:e?o.slice(s,s+2):r-56320+(i-55296<<10)+65536}},Pn=(Cn(!1),Cn(!0)),Nn=kt.set,In=kt.getterFor("String Iterator");xn(String,"String",(function(e){Nn(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=In(this),n=t.string,i=t.index;return i>=n.length?{value:void 0,done:!0}:(e=Pn(n,i),t.index+=e.length,{value:e,done:!1})}));var An=It("iterator"),Fn=function(e){if(null!=e)return e[An]||e["@@iterator"]||Xe[dn(e)]},Rn=function(e){var t=Fn(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return Be(t.call(e))},jn=It("iterator"),Ln=function(e){var t=Object(e);return void 0!==t[jn]||"@@iterator"in t||Xe.hasOwnProperty(dn(t))},zn=function(e,t){return function(e){if(Qe(e))return e}(e)||function(e,t){if(Ln(Object(e))||"[object Arguments]"===Object.prototype.toString.call(e)){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=Rn(e);!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return n}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()};qe({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}});var Yn=ze.Date.now;function Bn(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){var t=function(){for(var e=function(){var e=4022871197;return function(t){for(var n=t.toString(),i=0;i<n.length;i++){var r=.02519603282416938*(e+=n.charCodeAt(i));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}(),t=e(" "),n=e(" "),i=e(" "),r=0;r<arguments.length;r++)(t-=e(r<0||arguments.length<=r?void 0:arguments[r]))<0&&(t+=1),(n-=e(r<0||arguments.length<=r?void 0:arguments[r]))<0&&(n+=1),(i-=e(r<0||arguments.length<=r?void 0:arguments[r]))<0&&(i+=1);return[t,n,i]}(e),n=zn(t,3),i=n[0],r=n[1],o=n[2],s=1,a=function(){var e=2091639*i+2.3283064365386963e-10*s;return i=r,r=o,o=e-(s=0|e)};return a.uint32=function(){return 4294967296*a()},a.fract53=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.algorithm="Alea",a.seed=e,a.version="0.9",a}(t.length?t:[Yn()])}qe({target:"Object",stat:!0,forced:!de,sham:!de},{defineProperty:We.f});var Hn=ae((function(e){var t=ze.Object,n=e.exports=function(e,n,i){return t.defineProperty(e,n,i)};t.defineProperty.sham&&(n.sham=!0)})),Wn=Hn;qe({target:"Object",stat:!0,forced:!de,sham:!de},{defineProperties:Xt});var Un=ae((function(e){var t=ze.Object,n=e.exports=function(e,n){return t.defineProperties(e,n)};t.defineProperties.sham&&(n.sham=!0)})),Vn=Zt.concat("length","prototype"),Gn={f:Object.getOwnPropertyNames||function(e){return $t(e,Vn)}},qn={f:Object.getOwnPropertySymbols},$n=Jt("Reflect","ownKeys")||function(e){var t=Gn.f(Be(e)),n=qn.f;return n?t.concat(n(e)):t},Zn=function(e,t,n){var i=xe(t);i in e?We.f(e,i,ve(0,n)):e[i]=n};qe({target:"Object",stat:!0,sham:!de},{getOwnPropertyDescriptors:function(e){for(var t,n,i=_e(e),r=Pe.f,o=$n(i),s={},a=0;o.length>a;)void 0!==(n=r(i,t=o[a++]))&&Zn(s,t,n);return s}});var Qn=ze.Object.getOwnPropertyDescriptors,Xn=Pe.f,Kn=ce((function(){Xn(1)}));qe({target:"Object",stat:!0,forced:!de||Kn,sham:!de},{getOwnPropertyDescriptor:function(e,t){return Xn(_e(e),t)}});var Jn=ae((function(e){var t=ze.Object,n=e.exports=function(e,n){return t.getOwnPropertyDescriptor(e,n)};t.getOwnPropertyDescriptor.sham&&(n.sham=!0)})),ei=Gn.f,ti={}.toString,ni="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],ii={f:function(e){return ni&&"[object Window]"==ti.call(e)?function(e){try{return ei(e)}catch(e){return ni.slice()}}(e):ei(_e(e))}},ri={f:It},oi=We.f,si=function(e){var t=ze.Symbol||(ze.Symbol={});Oe(t,e)||oi(t,e,{value:ri.f(e)})},ai=It("species"),li=function(e,t){var n;return $e(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!$e(n.prototype)?ke(n)&&null===(n=n[ai])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},ui=[].push,ci=function(e){var t=1==e,n=2==e,i=3==e,r=4==e,o=6==e,s=5==e||o;return function(a,l,u,c){for(var d,h,f=xt(a),p=be(f),v=Ye(l,u,3),y=Bt(p.length),g=0,m=c||li,b=t?m(a,y):n?m(a,0):void 0;y>g;g++)if((s||g in p)&&(h=v(d=p[g],g,f),e))if(t)b[g]=h;else if(h)switch(e){case 3:return!0;case 5:return d;case 6:return g;case 2:ui.call(b,d)}else if(r)return!1;return o?-1:i||r?r:b}},di={forEach:ci(0),map:ci(1),filter:ci(2),some:ci(3),every:ci(4),find:ci(5),findIndex:ci(6)},hi=di.forEach,fi=dt("hidden"),pi=It("toPrimitive"),vi=kt.set,yi=kt.getterFor("Symbol"),gi=Object.prototype,mi=ue.Symbol,bi=Jt("JSON","stringify"),wi=Pe.f,_i=We.f,ki=ii.f,xi=pe.f,Si=st("symbols"),Oi=st("op-symbols"),Ei=st("string-to-symbol-registry"),Ti=st("symbol-to-string-registry"),Mi=st("wks"),Di=ue.QObject,Ci=!Di||!Di.prototype||!Di.prototype.findChild,Pi=de&&ce((function(){return 7!=sn(_i({},"a",{get:function(){return _i(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=wi(gi,t);i&&delete gi[t],_i(e,t,n),i&&e!==gi&&_i(gi,t,i)}:_i,Ni=function(e,t){var n=Si[e]=sn(mi.prototype);return vi(n,{type:"Symbol",tag:e,description:t}),de||(n.description=t),n},Ii=Dt?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof mi},Ai=function e(t,n,i){t===gi&&e(Oi,n,i),Be(t);var r=xe(n,!0);return Be(i),Oe(Si,r)?(i.enumerable?(Oe(t,fi)&&t[fi][r]&&(t[fi][r]=!1),i=sn(i,{enumerable:ve(0,!1)})):(Oe(t,fi)||_i(t,fi,ve(1,{})),t[fi][r]=!0),Pi(t,r,i)):_i(t,r,i)},Fi=function(e,t){Be(e);var n=_e(t),i=Qt(n).concat(zi(n));return hi(i,(function(t){de&&!Ri.call(n,t)||Ai(e,t,n[t])})),e},Ri=function(e){var t=xe(e,!0),n=xi.call(this,t);return!(this===gi&&Oe(Si,t)&&!Oe(Oi,t))&&(!(n||!Oe(this,t)||!Oe(Si,t)||Oe(this,fi)&&this[fi][t])||n)},ji=function(e,t){var n=_e(e),i=xe(t,!0);if(n!==gi||!Oe(Si,i)||Oe(Oi,i)){var r=wi(n,i);return!r||!Oe(Si,i)||Oe(n,fi)&&n[fi][i]||(r.enumerable=!0),r}},Li=function(e){var t=ki(_e(e)),n=[];return hi(t,(function(e){Oe(Si,e)||Oe(ht,e)||n.push(e)})),n},zi=function(e){var t=e===gi,n=ki(t?Oi:_e(e)),i=[];return hi(n,(function(e){!Oe(Si,e)||t&&!Oe(gi,e)||i.push(Si[e])})),i};if(Mt||(mn((mi=function(){if(this instanceof mi)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=ut(e),n=function e(n){this===gi&&e.call(Oi,n),Oe(this,fi)&&Oe(this[fi],t)&&(this[fi][t]=!1),Pi(this,t,ve(1,n))};return de&&Ci&&Pi(gi,t,{configurable:!0,set:n}),Ni(t,e)}).prototype,"toString",(function(){return yi(this).tag})),mn(mi,"withoutSetter",(function(e){return Ni(ut(e),e)})),pe.f=Ri,We.f=Ai,Pe.f=ji,Gn.f=ii.f=Li,qn.f=zi,ri.f=function(e){return Ni(It(e),e)},de&&_i(mi.prototype,"description",{configurable:!0,get:function(){return yi(this).description}})),qe({global:!0,wrap:!0,forced:!Mt,sham:!Mt},{Symbol:mi}),hi(Qt(Mi),(function(e){si(e)})),qe({target:"Symbol",stat:!0,forced:!Mt},{for:function(e){var t=String(e);if(Oe(Ei,t))return Ei[t];var n=mi(t);return Ei[t]=n,Ti[n]=t,n},keyFor:function(e){if(!Ii(e))throw TypeError(e+" is not a symbol");if(Oe(Ti,e))return Ti[e]},useSetter:function(){Ci=!0},useSimple:function(){Ci=!1}}),qe({target:"Object",stat:!0,forced:!Mt,sham:!de},{create:function(e,t){return void 0===t?sn(e):Fi(sn(e),t)},defineProperty:Ai,defineProperties:Fi,getOwnPropertyDescriptor:ji}),qe({target:"Object",stat:!0,forced:!Mt},{getOwnPropertyNames:Li,getOwnPropertySymbols:zi}),qe({target:"Object",stat:!0,forced:ce((function(){qn.f(1)}))},{getOwnPropertySymbols:function(e){return qn.f(xt(e))}}),bi){var Yi=!Mt||ce((function(){var e=mi();return"[null]"!=bi([e])||"{}"!=bi({a:e})||"{}"!=bi(Object(e))}));qe({target:"JSON",stat:!0,forced:Yi},{stringify:function(e,t,n){for(var i,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(i=t,(ke(t)||void 0!==e)&&!Ii(e))return $e(t)||(t=function(e,t){if("function"==typeof i&&(t=i.call(this,e,t)),!Ii(t))return t}),r[1]=t,bi.apply(null,r)}})}mi.prototype[pi]||Ue(mi.prototype,pi,mi.prototype.valueOf),vn(mi,"Symbol"),ht[fi]=!0;var Bi=ze.Object.getOwnPropertySymbols;qe({target:"Object",stat:!0,sham:!de},{create:sn});var Hi=ze.Object,Wi=function(e,t){return Hi.create(e,t)},Ui=Hn,Vi=function(e,t,n){return t in e?Ui(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},Gi=ce((function(){Qt(1)}));qe({target:"Object",stat:!0,forced:Gi},{keys:function(e){return Qt(xt(e))}});var qi,$i=ze.Object.keys,Zi="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff",Qi="["+Zi+"]",Xi=RegExp("^"+Qi+Qi+"*"),Ki=RegExp(Qi+Qi+"*$"),Ji=function(e){return function(t){var n=String(we(t));return 1&e&&(n=n.replace(Xi,"")),2&e&&(n=n.replace(Ki,"")),n}},er={start:Ji(1),end:Ji(2),trim:Ji(3)},tr=er.trim;qe({target:"String",proto:!0,forced:(qi="trim",ce((function(){return!!Zi[qi]()||"\u200b\x85\u180e"!="\u200b\x85\u180e"[qi]()||Zi[qi].name!==qi})))},{trim:function(){return tr(this)}});var nr=function(e){return ze[e+"Prototype"]},ir=nr("String").trim,rr=String.prototype,or=function(e){var t=e.trim;return"string"==typeof e||e===rr||e instanceof String&&t===rr.trim?ir:t},sr=function(e,t){var n=[][e];return!!n&&ce((function(){n.call(null,t||function(){throw 1},1)}))},ar=Object.defineProperty,lr={},ur=function(e){throw e},cr=function(e,t){if(Oe(lr,e))return lr[e];t||(t={});var n=[][e],i=!!Oe(t,"ACCESSORS")&&t.ACCESSORS,r=Oe(t,0)?t[0]:ur,o=Oe(t,1)?t[1]:void 0;return lr[e]=!!n&&!ce((function(){if(i&&!de)return!0;var e={length:-1};i?ar(e,1,{enumerable:!0,get:ur}):e[1]=1,n.call(e,r,o)}))},dr=di.forEach,hr=sr("forEach"),fr=cr("forEach"),pr=hr&&fr?[].forEach:function(e){return dr(this,e,arguments.length>1?arguments[1]:void 0)};qe({target:"Array",proto:!0,forced:[].forEach!=pr},{forEach:pr});var vr,yr,gr=nr("Array").forEach,mr=Array.prototype,br={DOMTokenList:!0,NodeList:!0},wr=function(e){var t=e.forEach;return e===mr||e instanceof Array&&t===mr.forEach||br.hasOwnProperty(dn(e))?gr:t},_r=Jt("navigator","userAgent")||"",kr=ue.process,xr=kr&&kr.versions,Sr=xr&&xr.v8;Sr?yr=(vr=Sr.split("."))[0]+vr[1]:_r&&(!(vr=_r.match(/Edge\/(\d+)/))||vr[1]>=74)&&(vr=_r.match(/Chrome\/(\d+)/))&&(yr=vr[1]);var Or=yr&&+yr,Er=It("species"),Tr=function(e){return Or>=51||!ce((function(){var t=[];return(t.constructor={})[Er]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Mr=di.map,Dr=Tr("map"),Cr=cr("map");qe({target:"Array",proto:!0,forced:!Dr||!Cr},{map:function(e){return Mr(this,e,arguments.length>1?arguments[1]:void 0)}});var Pr=nr("Array").map,Nr=Array.prototype,Ir=function(e){var t=e.map;return e===Nr||e instanceof Array&&t===Nr.map?Pr:t},Ar=er.trim,Fr=ue.parseInt,Rr=/^[+-]?0[Xx]/,jr=8!==Fr(Zi+"08")||22!==Fr(Zi+"0x16")?function(e,t){var n=Ar(String(e));return Fr(n,t>>>0||(Rr.test(n)?16:10))}:Fr;qe({global:!0,forced:parseInt!=jr},{parseInt:jr});var Lr=ze.parseInt,zr=pe.f,Yr=function(e){return function(t){for(var n,i=_e(t),r=Qt(i),o=r.length,s=0,a=[];o>s;)n=r[s++],de&&!zr.call(i,n)||a.push(e?[n,i[n]]:i[n]);return a}},Br=(Yr(!0),Yr(!1));qe({target:"Object",stat:!0},{values:function(e){return Br(e)}});var Hr=ze.Object.values,Wr=di.filter,Ur=Tr("filter"),Vr=cr("filter");qe({target:"Array",proto:!0,forced:!Ur||!Vr},{filter:function(e){return Wr(this,e,arguments.length>1?arguments[1]:void 0)}});var Gr=nr("Array").filter,qr=Array.prototype,$r=function(e){var t=e.filter;return e===qr||e instanceof Array&&t===qr.filter?Gr:t},Zr=It("isConcatSpreadable"),Qr=Or>=51||!ce((function(){var e=[];return e[Zr]=!1,e.concat()[0]!==e})),Xr=Tr("concat"),Kr=function(e){if(!ke(e))return!1;var t=e[Zr];return void 0!==t?!!t:$e(e)};qe({target:"Array",proto:!0,forced:!Qr||!Xr},{concat:function(e){var t,n,i,r,o,s=xt(this),a=li(s,0),l=0;for(t=-1,i=arguments.length;t<i;t++)if(o=-1===t?s:arguments[t],Kr(o)){if(l+(r=Bt(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<r;n++,l++)n in o&&Zn(a,l,o[n])}else{if(l>=9007199254740991)throw TypeError("Maximum allowed index exceeded");Zn(a,l++,o)}return a.length=l,a}});var Jr=nr("Array").concat,eo=Array.prototype,to=function(e){var t=e.concat;return e===eo||e instanceof Array&&t===eo.concat?Jr:t},no=function(e,t,n,i){try{return i?t(Be(n)[0],n[1]):t(n)}catch(t){var r=e.return;throw void 0!==r&&Be(r.call(e)),t}},io=It("iterator"),ro=Array.prototype,oo=function(e){return void 0!==e&&(Xe.Array===e||ro[io]===e)},so=It("iterator"),ao=!1;try{var lo=0,uo={next:function(){return{done:!!lo++}},return:function(){ao=!0}};uo[so]=function(){return this},Array.from(uo,(function(){throw 2}))}catch(n){}var co=!function(e,t){if(!ao)return!1;var n=!1;try{var i={};i[so]=function(){return{next:function(){return{done:n=!0}}}},function(e){Array.from(e)}(i)}catch(e){}return n}();qe({target:"Array",stat:!0,forced:co},{from:function(e){var t,n,i,r,o,s,a=xt(e),l="function"==typeof this?this:Array,u=arguments.length,c=u>1?arguments[1]:void 0,d=void 0!==c,h=Fn(a),f=0;if(d&&(c=Ye(c,u>2?arguments[2]:void 0,2)),null==h||l==Array&&oo(h))for(n=new l(t=Bt(a.length));t>f;f++)s=d?c(a[f],f):a[f],Zn(n,f,s);else for(o=(r=h.call(a)).next,n=new l;!(i=o.call(r)).done;f++)s=d?no(r,c,[i.value,f],!0):i.value,Zn(n,f,s);return n.length=f,n}});var ho=ze.Array.from,fo=function(e){return function(e){if(Qe(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Ln(Object(e))||"[object Arguments]"===Object.prototype.toString.call(e))return ho(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()},po=Tr("slice"),vo=cr("slice",{ACCESSORS:!0,0:0,1:2}),yo=It("species"),go=[].slice,mo=Math.max;qe({target:"Array",proto:!0,forced:!po||!vo},{slice:function(e,t){var n,i,r,o=_e(this),s=Bt(o.length),a=Ut(e,s),l=Ut(void 0===t?s:t,s);if($e(o)&&("function"!=typeof(n=o.constructor)||n!==Array&&!$e(n.prototype)?ke(n)&&null===(n=n[yo])&&(n=void 0):n=void 0,n===Array||void 0===n))return go.call(o,a,l);for(i=new(void 0===n?Array:n)(mo(l-a,0)),r=0;a<l;a++,r++)a in o&&Zn(i,r,o[a]);return i.length=r,i}});var bo=nr("Array").slice,wo=Array.prototype,_o=function(e){var t=e.slice;return e===wo||e instanceof Array&&t===wo.slice?bo:t},ko=ce((function(){Tt(1)}));qe({target:"Object",stat:!0,forced:ko,sham:!St},{getPrototypeOf:function(e){return Tt(xt(e))}});var xo=ze.Object.getPrototypeOf,So=Gt.indexOf,Oo=[].indexOf,Eo=!!Oo&&1/[1].indexOf(1,-0)<0,To=sr("indexOf"),Mo=cr("indexOf",{ACCESSORS:!0,1:0});qe({target:"Array",proto:!0,forced:Eo||!To||!Mo},{indexOf:function(e){return Eo?Oo.apply(this,arguments)||0:So(this,e,arguments.length>1?arguments[1]:void 0)}});var Do=nr("Array").indexOf,Co=Array.prototype,Po=function(e){var t=e.indexOf;return e===Co||e instanceof Array&&t===Co.indexOf?Do:t},No=Ze,Io=Object.assign,Ao=Object.defineProperty,Fo=!Io||ce((function(){if(de&&1!==Io({b:1},Io(Ao({},"a",{enumerable:!0,get:function(){Ao(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=Io({},e)[n]||"abcdefghijklmnopqrst"!=Qt(Io({},t)).join("")}))?function(e,t){for(var n=xt(e),i=arguments.length,r=1,o=qn.f,s=pe.f;i>r;)for(var a,l=be(arguments[r++]),u=o?Qt(l).concat(o(l)):Qt(l),c=u.length,d=0;c>d;)a=u[d++],de&&!s.call(l,a)||(n[a]=l[a]);return n}:Io;qe({target:"Object",stat:!0,forced:Object.assign!==Fo},{assign:Fo});var Ro=ze.Object.assign;si("iterator");var jo=ri.f("iterator");si("asyncIterator"),si("hasInstance"),si("isConcatSpreadable"),si("match"),si("matchAll"),si("replace"),si("search"),si("species"),si("split"),si("toPrimitive"),si("toStringTag"),si("unscopables"),vn(Math,"Math",!0),vn(ue.JSON,"JSON",!0);var Lo=ze.Symbol;si("asyncDispose"),si("dispose"),si("observable"),si("patternMatch"),si("replaceAll");var zo=Lo,Yo=ae((function(e){function t(n){return e.exports=t="function"==typeof zo&&"symbol"==typeof jo?function(e){return typeof e}:function(e){return e&&"function"==typeof zo&&e.constructor===zo&&e!==zo.prototype?"symbol":typeof e},t(n)}e.exports=t}));function Bo(e,t){var n=$i(e);if(Bi){var i=Bi(e);t&&(i=$r(i).call(i,(function(t){return Jn(e,t).enumerable}))),n.push.apply(n,i)}return n}var Ho=/^\/?Date\((-?\d+)/i,Wo=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,Uo=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,Vo=/^rgb\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *\)$/i,Go=/^rgba\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *([01]|0?\.\d+) *\)$/i;function qo(e){return e instanceof Number||"number"==typeof e}function $o(e){if(e)for(;!0===e.hasChildNodes();){var t=e.firstChild;t&&($o(t),e.removeChild(t))}}function Zo(e){return e instanceof String||"string"==typeof e}function Qo(e){return"object"===Yo(e)&&null!==e}function Xo(e){if(e instanceof Date)return!0;if(Zo(e)){if(Ho.exec(e))return!0;if(!isNaN(Date.parse(e)))return!0}return!1}function Ko(e,t,n,i){var r=!1;!0===i&&(r=null===t[n]&&void 0!==e[n]),r?delete e[n]:e[n]=t[n]}function Jo(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(var i in e)if(void 0!==t[i])if(null===t[i]||"object"!==Yo(t[i]))Ko(e,t,i,n);else{var r=e[i],o=t[i];Qo(r)&&Qo(o)&&Jo(r,o,n)}}var es=Ro;function ts(e,t){if(!No(e))throw new Error("Array with property names expected as first argument");for(var n=arguments.length,i=new Array(n>2?n-2:0),r=2;r<n;r++)i[r-2]=arguments[r];for(var o=0,s=i;o<s.length;o++)for(var a=s[o],l=0;l<e.length;l++){var u=e[l];a&&Object.prototype.hasOwnProperty.call(a,u)&&(t[u]=a[u])}return t}function ns(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(No(n))throw new TypeError("Arrays are not supported by deepExtend");for(var r=0;r<e.length;r++){var o=e[r];if(Object.prototype.hasOwnProperty.call(n,o))if(n[o]&&n[o].constructor===Object)void 0===t[o]&&(t[o]={}),t[o].constructor===Object?rs(t[o],n[o],!1,i):Ko(t,n,o,i);else{if(No(n[o]))throw new TypeError("Arrays are not supported by deepExtend");Ko(t,n,o,i)}}return t}function is(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(No(n))throw new TypeError("Arrays are not supported by deepExtend");for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)&&-1===Po(e).call(e,r))if(n[r]&&n[r].constructor===Object)void 0===t[r]&&(t[r]={}),t[r].constructor===Object?rs(t[r],n[r]):Ko(t,n,r,i);else if(No(n[r])){t[r]=[];for(var o=0;o<n[r].length;o++)t[r].push(n[r][o])}else Ko(t,n,r,i);return t}function rs(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)||!0===n)if("object"===Yo(t[r])&&null!==t[r]&&xo(t[r])===Object.prototype)void 0===e[r]?e[r]=rs({},t[r],n):"object"===Yo(e[r])&&null!==e[r]&&xo(e[r])===Object.prototype?rs(e[r],t[r],n):Ko(e,t,r,i);else if(No(t[r])){var o;e[r]=_o(o=t[r]).call(o)}else Ko(e,t,r,i);return e}function os(e,t){if(e.length!==t.length)return!1;for(var n=0,i=e.length;n<i;n++)if(e[n]!=t[n])return!1;return!0}function ss(e){var t=Yo(e);return"object"===t?null===e?"null":e instanceof Boolean?"Boolean":e instanceof Number?"Number":e instanceof String?"String":No(e)?"Array":e instanceof Date?"Date":"Object":"number"===t?"Number":"boolean"===t?"Boolean":"string"===t?"String":void 0===t?"undefined":t}function as(e,t){var n;return to(n=[]).call(n,fo(e),[t])}function ls(e){return _o(e).call(e)}function us(e){return e.getBoundingClientRect().left}function cs(e){return e.getBoundingClientRect().right}function ds(e){return e.getBoundingClientRect().top}function hs(e,t){var n=e.className.split(" "),i=t.split(" ");n=to(n).call(n,$r(i).call(i,(function(e){return Po(n).call(n,e)<0}))),e.className=n.join(" ")}function fs(e,t){var n=e.className.split(" "),i=t.split(" ");n=$r(n).call(n,(function(e){return Po(i).call(i,e)<0})),e.className=n.join(" ")}function ps(e,t){if(No(e))for(var n=e.length,i=0;i<n;i++)t(e[i],i,e);else for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t(e[r],r,e)}var vs=Hr;function ys(e,t,n){return e[t]!==n&&(e[t]=n,!0)}function gs(e){var t=!1;return function(){t||(t=!0,requestAnimationFrame((function(){t=!1,e()})))}}function ms(e,t,n,i){var r;e.addEventListener?(void 0===i&&(i=!1),"mousewheel"===t&&Po(r=navigator.userAgent).call(r,"Firefox")>=0&&(t="DOMMouseScroll"),e.addEventListener(t,n,i)):e.attachEvent("on"+t,n)}function bs(e,t,n,i){var r;e.removeEventListener?(void 0===i&&(i=!1),"mousewheel"===t&&Po(r=navigator.userAgent).call(r,"Firefox")>=0&&(t="DOMMouseScroll"),e.removeEventListener(t,n,i)):e.detachEvent("on"+t,n)}function ws(e){e||(e=window.event),e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)}function _s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.event,t=null;return e&&(e.target?t=e.target:e.srcElement&&(t=e.srcElement)),t instanceof Element&&(null==t.nodeType||3!=t.nodeType||(t=t.parentNode)instanceof Element)?t:null}function ks(e,t){for(var n=e;n;){if(n===t)return!0;if(!n.parentNode)return!1;n=n.parentNode}return!1}var xs={asBoolean:function(e,t){return"function"==typeof e&&(e=e()),null!=e?0!=e:t||null},asNumber:function(e,t){return"function"==typeof e&&(e=e()),null!=e?Number(e)||t||null:t||null},asString:function(e,t){return"function"==typeof e&&(e=e()),null!=e?String(e):t||null},asSize:function(e,t){return"function"==typeof e&&(e=e()),Zo(e)?e:qo(e)?e+"px":t||null},asElement:function(e,t){return"function"==typeof e&&(e=e()),e||t||null}};function Ss(e){var t;switch(e.length){case 3:case 4:return(t=Uo.exec(e))?{r:Lr(t[1]+t[1],16),g:Lr(t[2]+t[2],16),b:Lr(t[3]+t[3],16)}:null;case 6:case 7:return(t=Wo.exec(e))?{r:Lr(t[1],16),g:Lr(t[2],16),b:Lr(t[3],16)}:null;default:return null}}function Os(e,t){if(-1!==Po(e).call(e,"rgba"))return e;if(-1!==Po(e).call(e,"rgb")){var n=e.substr(Po(e).call(e,"(")+1).replace(")","").split(",");return"rgba("+n[0]+","+n[1]+","+n[2]+","+t+")"}var i=Ss(e);return null==i?e:"rgba("+i.r+","+i.g+","+i.b+","+t+")"}function Es(e,t,n){var i;return"#"+_o(i=((1<<24)+(e<<16)+(t<<8)+n).toString(16)).call(i,1)}function Ts(e,t){if(Zo(e)){var n=e;if(js(n)){var i,r=Ir(i=n.substr(4).substr(0,n.length-5).split(",")).call(i,(function(e){return Lr(e)}));n=Es(r[0],r[1],r[2])}if(!0===Rs(n)){var o=Fs(n),s={h:o.h,s:.8*o.s,v:Math.min(1,1.02*o.v)},a={h:o.h,s:Math.min(1,1.25*o.s),v:.8*o.v},l=As(a.h,a.s,a.v),u=As(s.h,s.s,s.v);return{background:n,border:l,highlight:{background:u,border:l},hover:{background:u,border:l}}}return{background:n,border:n,highlight:{background:n,border:n},hover:{background:n,border:n}}}return t?{background:e.background||t.background,border:e.border||t.border,highlight:Zo(e.highlight)?{border:e.highlight,background:e.highlight}:{background:e.highlight&&e.highlight.background||t.highlight.background,border:e.highlight&&e.highlight.border||t.highlight.border},hover:Zo(e.hover)?{border:e.hover,background:e.hover}:{border:e.hover&&e.hover.border||t.hover.border,background:e.hover&&e.hover.background||t.hover.background}}:{background:e.background||void 0,border:e.border||void 0,highlight:Zo(e.highlight)?{border:e.highlight,background:e.highlight}:{background:e.highlight&&e.highlight.background||void 0,border:e.highlight&&e.highlight.border||void 0},hover:Zo(e.hover)?{border:e.hover,background:e.hover}:{border:e.hover&&e.hover.border||void 0,background:e.hover&&e.hover.background||void 0}}}function Ms(e,t,n){e/=255,t/=255,n/=255;var i=Math.min(e,Math.min(t,n)),r=Math.max(e,Math.max(t,n));return i===r?{h:0,s:0,v:i}:{h:60*((e===i?3:n===i?1:5)-(e===i?t-n:n===i?e-t:n-e)/(r-i))/360,s:(r-i)/r,v:r}}var Ds=function(e){var t,n={};return wr(t=e.split(";")).call(t,(function(e){if(""!=or(e).call(e)){var t,i,r=e.split(":"),o=or(t=r[0]).call(t),s=or(i=r[1]).call(i);n[o]=s}})),n},Cs=function(e){var t;return Ir(t=$i(e)).call(t,(function(t){return t+": "+e[t]})).join("; ")};function Ps(e,t){var n=function(e){for(var t=1;t<arguments.length;t++){var n,i=null!=arguments[t]?arguments[t]:{};if(t%2)wr(n=Bo(Object(i),!0)).call(n,(function(t){Vi(e,t,i[t])}));else if(Qn)Un(e,Qn(i));else{var r;wr(r=Bo(Object(i))).call(r,(function(t){Wn(e,t,Jn(i,t))}))}}return e}({},Ds(e.style.cssText),{},Ds(t));e.style.cssText=Cs(n)}function Ns(e,t){var n=Ds(e.style.cssText),i=Ds(t);for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&delete n[r];e.style.cssText=Cs(n)}function Is(e,t,n){var i,r,o,s=Math.floor(6*e),a=6*e-s,l=n*(1-t),u=n*(1-a*t),c=n*(1-(1-a)*t);switch(s%6){case 0:i=n,r=c,o=l;break;case 1:i=u,r=n,o=l;break;case 2:i=l,r=n,o=c;break;case 3:i=l,r=u,o=n;break;case 4:i=c,r=l,o=n;break;case 5:i=n,r=l,o=u}return{r:Math.floor(255*i),g:Math.floor(255*r),b:Math.floor(255*o)}}function As(e,t,n){var i=Is(e,t,n);return Es(i.r,i.g,i.b)}function Fs(e){var t=Ss(e);if(!t)throw new TypeError("'".concat(e,"' is not a valid color."));return Ms(t.r,t.g,t.b)}function Rs(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e)}function js(e){return Vo.test(e)}function Ls(e){return Go.test(e)}function zs(e,t){if(null!==t&&"object"===Yo(t)){for(var n=Wi(t),i=0;i<e.length;i++)Object.prototype.hasOwnProperty.call(t,e[i])&&"object"==Yo(t[e[i]])&&(n[e[i]]=Ys(t[e[i]]));return n}return null}function Ys(e){if(null===e||"object"!==Yo(e))return null;if(e instanceof Element)return e;var t=Wi(e);for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&"object"==Yo(e[n])&&(t[n]=Ys(e[n]));return t}function Bs(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=void 0;for(r=n;r>0&&t(i,e[r-1])<0;r--)e[r]=e[r-1];e[r]=i}return e}function Hs(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=function(e){return null!=e},o=function(e){return null!==e&&"object"===Yo(e)};if(!o(e))throw new Error("Parameter mergeTarget must be an object");if(!o(t))throw new Error("Parameter options must be an object");if(!r(n))throw new Error("Parameter option must have a value");if(!o(i))throw new Error("Parameter globalOptions must be an object");var s=t[n],a=o(i)&&!function(e){for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}(i)?i[n]:void 0,l=a?a.enabled:void 0;if(void 0!==s){if("boolean"==typeof s)return o(e[n])||(e[n]={}),void(e[n].enabled=s);if(null===s&&!o(e[n])){if(!r(a))return;e[n]=Wi(a)}if(o(s)){var u=!0;void 0!==s.enabled?u=s.enabled:void 0!==l&&(u=a.enabled),function(e,t,n){o(e[n])||(e[n]={});var i=t[n],r=e[n];for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&(r[s]=i[s])}(e,t,n),e[n].enabled=u}}}function Ws(e,t,n,i){for(var r=0,o=0,s=e.length-1;o<=s&&r<1e4;){var a=Math.floor((o+s)/2),l=e[a],u=t(void 0===i?l[n]:l[n][i]);if(0==u)return a;-1==u?o=a+1:s=a-1,r++}return-1}function Us(e,t,n,i,r){var o,s,a,l,u=0,c=0,d=e.length-1;for(r=null!=r?r:function(e,t){return e==t?0:e<t?-1:1};c<=d&&u<1e4;){if(l=Math.floor(.5*(d+c)),o=e[Math.max(0,l-1)][n],s=e[l][n],a=e[Math.min(e.length-1,l+1)][n],0==r(s,t))return l;if(r(o,t)<0&&r(s,t)>0)return"before"==i?Math.max(0,l-1):l;if(r(s,t)<0&&r(a,t)>0)return"before"==i?l:Math.min(e.length-1,l+1);r(s,t)<0?c=l+1:d=l-1,u++}return-1}var Vs={linear:function(e){return e},easeInQuad:function(e){return e*e},easeOutQuad:function(e){return e*(2-e)},easeInOutQuad:function(e){return e<.5?2*e*e:(4-2*e)*e-1},easeInCubic:function(e){return e*e*e},easeOutCubic:function(e){return--e*e*e+1},easeInOutCubic:function(e){return e<.5?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},easeInQuart:function(e){return e*e*e*e},easeOutQuart:function(e){return 1- --e*e*e*e},easeInOutQuart:function(e){return e<.5?8*e*e*e*e:1-8*--e*e*e*e},easeInQuint:function(e){return e*e*e*e*e},easeOutQuint:function(e){return 1+--e*e*e*e*e},easeInOutQuint:function(e){return e<.5?16*e*e*e*e*e:1+16*--e*e*e*e*e}};function Gs(){var e=document.createElement("p");e.style.width="100%",e.style.height="200px";var t=document.createElement("div");t.style.position="absolute",t.style.top="0px",t.style.left="0px",t.style.visibility="hidden",t.style.width="200px",t.style.height="150px",t.style.overflow="hidden",t.appendChild(e),document.body.appendChild(t);var n=e.offsetWidth;t.style.overflow="scroll";var i=e.offsetWidth;return n==i&&(i=t.clientWidth),document.body.removeChild(t),n-i}function qs(e,t){var n;No(t)||(t=[t]);var i=!0,r=!1,o=void 0;try{for(var s,a=Rn(e);!(i=(s=a.next()).done);i=!0){var l=s.value;if(l){n=l[t[0]];for(var u=1;u<t.length;u++)n&&(n=n[t[u]]);if(void 0!==n)break}}}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return n}var $s=Object.freeze({__proto__:null,isNumber:qo,recursiveDOMDelete:$o,isString:Zo,isObject:Qo,isDate:Xo,fillIfDefined:Jo,extend:es,selectiveExtend:ts,selectiveDeepExtend:ns,selectiveNotDeepExtend:is,deepExtend:rs,equalArray:os,getType:ss,copyAndExtendArray:as,copyArray:ls,getAbsoluteLeft:us,getAbsoluteRight:cs,getAbsoluteTop:ds,addClassName:hs,removeClassName:fs,forEach:ps,toArray:vs,updateProperty:ys,throttle:gs,addEventListener:ms,removeEventListener:bs,preventDefault:ws,getTarget:_s,hasParent:ks,option:xs,hexToRGB:Ss,overrideOpacity:Os,RGBToHex:Es,parseColor:Ts,RGBToHSV:Ms,addCssText:Ps,removeCssText:Ns,HSVToRGB:Is,HSVToHex:As,hexToHSV:Fs,isValidHex:Rs,isValidRGB:js,isValidRGBA:Ls,selectiveBridgeObject:zs,bridgeObject:Ys,insertSort:Bs,mergeOptions:Hs,binarySearchCustom:Ws,binarySearchValue:Us,easingFunctions:Vs,getScrollBarWidth:Gs,topMost:qs}),Zs=Object.freeze({__proto__:null,default:$s,Alea:Bn,HSVToHex:As,HSVToRGB:Is,RGBToHSV:Ms,RGBToHex:Es,addClassName:hs,addCssText:Ps,addEventListener:ms,binarySearchCustom:Ws,binarySearchValue:Us,bridgeObject:Ys,copyAndExtendArray:as,copyArray:ls,deepExtend:rs,easingFunctions:Vs,equalArray:os,extend:es,fillIfDefined:Jo,forEach:ps,getAbsoluteLeft:us,getAbsoluteRight:cs,getAbsoluteTop:ds,getScrollBarWidth:Gs,getTarget:_s,getType:ss,hasParent:ks,hexToHSV:Fs,hexToRGB:Ss,insertSort:Bs,isDate:Xo,isNumber:qo,isObject:Qo,isString:Zo,isValidHex:Rs,isValidRGB:js,isValidRGBA:Ls,mergeOptions:Hs,option:xs,overrideOpacity:Os,parseColor:Ts,preventDefault:ws,recursiveDOMDelete:$o,removeClassName:fs,removeCssText:Ns,removeEventListener:bs,selectiveBridgeObject:zs,selectiveDeepExtend:ns,selectiveExtend:ts,selectiveNotDeepExtend:is,throttle:gs,toArray:vs,topMost:qs,updateProperty:ys}),Qs={},Xs=o["__core-js_shared__"]||function(e,t){try{B(o,e,t)}catch(i){o[e]=t}return t}("__core-js_shared__",{}),Ks=Function.toString;"function"!=typeof Xs.inspectSource&&(Xs.inspectSource=function(e){return Ks.call(e)});var Js,ea,ta,na=Xs.inspectSource,ia=o.WeakMap,ra="function"==typeof ia&&/native code/.test(na(ia)),oa=i((function(e){(e.exports=function(e,t){return Xs[e]||(Xs[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.4",mode:"pure",copyright:"\xa9 2020 Denis Pushkarev (zloirock.ru)"})})),sa=0,aa=Math.random(),la=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++sa+aa).toString(36)},ua=oa("keys"),ca=function(e){return ua[e]||(ua[e]=la(e))},da={},ha=o.WeakMap;if(ra){var fa=new ha,pa=fa.get,va=fa.has,ya=fa.set;Js=function(e,t){return ya.call(fa,e,t),t},ea=function(e){return pa.call(fa,e)||{}},ta=function(e){return va.call(fa,e)}}else{var ga=ca("state");da[ga]=!0,Js=function(e,t){return B(e,ga,t),t},ea=function(e){return _(e,ga)?e[ga]:{}},ta=function(e){return _(e,ga)}}var ma,ba,wa,_a={set:Js,get:ea,has:ta,enforce:function(e){return ta(e)?ea(e):Js(e,{})},getterFor:function(e){return function(t){var n;if(!m(t)||(n=ea(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},ka=function(e){return Object(y(e))},xa=!s((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Sa=ca("IE_PROTO"),Oa=Object.prototype,Ea=xa?Object.getPrototypeOf:function(e){return e=ka(e),_(e,Sa)?e[Sa]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?Oa:null},Ta=!!Object.getOwnPropertySymbols&&!s((function(){return!String(Symbol())})),Ma=Ta&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Da=oa("wks"),Ca=o.Symbol,Pa=Ma?Ca:Ca&&Ca.withoutSetter||la,Na=function(e){return _(Da,e)||(Ta&&_(Ca,e)?Da[e]=Ca[e]:Da[e]=Pa("Symbol."+e)),Da[e]},Ia=(Na("iterator"),!1);[].keys&&("next"in(wa=[].keys())?(ba=Ea(Ea(wa)))!==Object.prototype&&(ma=ba):Ia=!0),null==ma&&(ma={});var Aa,Fa={IteratorPrototype:ma,BUGGY_SAFARI_ITERATORS:Ia},Ra=Math.ceil,ja=Math.floor,La=function(e){return isNaN(e=+e)?0:(e>0?ja:Ra)(e)},za=Math.min,Ya=function(e){return e>0?za(La(e),9007199254740991):0},Ba=Math.max,Ha=Math.min,Wa=function(e,t){var n=La(e);return n<0?Ba(n+t,0):Ha(n,t)},Ua=function(e){return function(t,n,i){var r,o=g(t),s=Ya(o.length),a=Wa(i,s);if(e&&n!=n){for(;s>a;)if((r=o[a++])!=r)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===n)return e||a||0;return!e&&-1}},Va={includes:Ua(!0),indexOf:Ua(!1)},Ga=Va.indexOf,qa=function(e,t){var n,i=g(e),r=0,o=[];for(n in i)!_(da,n)&&_(i,n)&&o.push(n);for(;t.length>r;)_(i,n=t[r++])&&(~Ga(o,n)||o.push(n));return o},$a=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Za=Object.keys||function(e){return qa(e,$a)},Qa=a?Object.defineProperties:function(e,t){L(e);for(var n,i=Za(t),r=i.length,o=0;r>o;)Y.f(e,n=i[o++],t[n]);return e},Xa=function(e){return"function"==typeof e?e:void 0},Ka=function(e,t){return arguments.length<2?Xa(F[e])||Xa(o[e]):F[e]&&F[e][t]||o[e]&&o[e][t]},Ja=Ka("document","documentElement"),el=ca("IE_PROTO"),tl=function(){},nl=function(e){return"<script>"+e+"<\/script>"},il=function(){try{Aa=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;il=Aa?function(e){e.write(nl("")),e.close();var t=e.parentWindow.Object;return e=null,t}(Aa):((t=S("iframe")).style.display="none",Ja.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(nl("document.F=Object")),e.close(),e.F);for(var n=$a.length;n--;)delete il.prototype[$a[n]];return il()};da[el]=!0;var rl=Object.create||function(e,t){var n;return null!==e?(tl.prototype=L(e),n=new tl,tl.prototype=null,n[el]=e):n=il(),void 0===t?n:Qa(n,t)},ol={};ol[Na("toStringTag")]="z";var sl="[object z]"===String(ol),al=Na("toStringTag"),ll="Arguments"==f(function(){return arguments}()),ul=sl?f:function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),al))?n:ll?f(t):"Object"==(i=f(t))&&"function"==typeof t.callee?"Arguments":i},cl=sl?{}.toString:function(){return"[object "+ul(this)+"]"},dl=Y.f,hl=Na("toStringTag"),fl=function(e,t,n,i){if(e){var r=n?e:e.prototype;_(r,hl)||dl(r,hl,{configurable:!0,value:t}),i&&!sl&&B(r,"toString",cl)}},pl=Fa.IteratorPrototype,vl=function(){return this},yl=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return L(n),function(e){if(!m(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype")}(i),t?e.call(n,i):n.__proto__=i,n}}():void 0),gl=function(e,t,n,i){i&&i.enumerable?e[t]=n:B(e,t,n)},ml=Fa.IteratorPrototype,bl=Fa.BUGGY_SAFARI_ITERATORS,wl=Na("iterator"),_l=function(){return this},kl=function(e,t,n,i,r,o,s){!function(e,t,n){var i=t+" Iterator";e.prototype=rl(pl,{next:d(1,n)}),fl(e,i,!1,!0),Qs[i]=vl}(n,t,i);var a,l,u,c=function(e){if(e===r&&y)return y;if(!bl&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},h=t+" Iterator",f=!1,p=e.prototype,v=p[wl]||p["@@iterator"]||r&&p[r],y=!bl&&v||c(r),g="Array"==t&&p.entries||v;if(g&&(a=Ea(g.call(new e)),ml!==Object.prototype&&a.next&&(fl(a,h,!0,!0),Qs[h]=_l)),"values"==r&&v&&"values"!==v.name&&(f=!0,y=function(){return v.call(this)}),s&&p[wl]!==y&&B(p,wl,y),Qs[t]=y,r)if(l={values:c("values"),keys:o?y:c("keys"),entries:c("entries")},s)for(u in l)!bl&&!f&&u in p||gl(p,u,l[u]);else U({target:t,proto:!0,forced:bl||f},l);return l},xl=_a.set,Sl=_a.getterFor("Array Iterator");kl(Array,"Array",(function(e,t){xl(this,{type:"Array Iterator",target:g(e),index:0,kind:t})}),(function(){var e=Sl(this),t=e.target,n=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:i,done:!1}:"values"==n?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),Qs.Arguments=Qs.Array;var Ol=Na("toStringTag");for(var El in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var Tl=o[El],Ml=Tl&&Tl.prototype;Ml&&ul(Ml)!==Ol&&B(Ml,Ol,El),Qs[El]=Qs.Array}var Dl=Array.isArray||function(e){return"Array"==f(e)},Cl=Na("species"),Pl=function(e,t){var n;return Dl(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!Dl(n.prototype)?m(n)&&null===(n=n[Cl])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},Nl=[].push,Il=function(e){var t=1==e,n=2==e,i=3==e,r=4==e,o=6==e,s=5==e||o;return function(a,l,u,c){for(var d,h,f=ka(a),p=v(f),y=j(l,u,3),g=Ya(p.length),m=0,b=c||Pl,w=t?b(a,g):n?b(a,0):void 0;g>m;m++)if((s||m in p)&&(h=y(d=p[m],m,f),e))if(t)w[m]=h;else if(h)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:Nl.call(w,d)}else if(r)return!1;return o?-1:i||r?r:w}},Al={forEach:Il(0),map:Il(1),filter:Il(2),some:Il(3),every:Il(4),find:Il(5),findIndex:Il(6)},Fl=function(e,t){var n=[][e];return!!n&&s((function(){n.call(null,t||function(){throw 1},1)}))},Rl=Object.defineProperty,jl={},Ll=function(e){throw e},zl=function(e,t){if(_(jl,e))return jl[e];t||(t={});var n=[][e],i=!!_(t,"ACCESSORS")&&t.ACCESSORS,r=_(t,0)?t[0]:Ll,o=_(t,1)?t[1]:void 0;return jl[e]=!!n&&!s((function(){if(i&&!a)return!0;var e={length:-1};i?Rl(e,1,{enumerable:!0,get:Ll}):e[1]=1,n.call(e,r,o)}))},Yl=Al.forEach,Bl=Fl("forEach"),Hl=zl("forEach"),Wl=Bl&&Hl?[].forEach:function(e){return Yl(this,e,arguments.length>1?arguments[1]:void 0)};U({target:"Array",proto:!0,forced:[].forEach!=Wl},{forEach:Wl});var Ul=Z("Array").forEach,Vl=Array.prototype,Gl={DOMTokenList:!0,NodeList:!0},ql=function(e){var t=e.forEach;return e===Vl||e instanceof Array&&t===Vl.forEach||Gl.hasOwnProperty(ul(e))?Ul:t};U({target:"Array",stat:!0},{isArray:Dl});var $l,Zl,Ql=F.Array.isArray,Xl=Ql,Kl=function(e,t,n){var i=b(t);i in e?Y.f(e,i,d(0,n)):e[i]=n},Jl=Ka("navigator","userAgent")||"",eu=o.process,tu=eu&&eu.versions,nu=tu&&tu.v8;nu?Zl=($l=nu.split("."))[0]+$l[1]:Jl&&(!($l=Jl.match(/Edge\/(\d+)/))||$l[1]>=74)&&($l=Jl.match(/Chrome\/(\d+)/))&&(Zl=$l[1]);var iu=Zl&&+Zl,ru=Na("species"),ou=function(e){return iu>=51||!s((function(){var t=[];return(t.constructor={})[ru]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},su=ou("splice"),au=zl("splice",{ACCESSORS:!0,0:0,1:2}),lu=Math.max,uu=Math.min;U({target:"Array",proto:!0,forced:!su||!au},{splice:function(e,t){var n,i,r,o,s,a,l=ka(this),u=Ya(l.length),c=Wa(e,u),d=arguments.length;if(0===d?n=i=0:1===d?(n=0,i=u-c):(n=d-2,i=uu(lu(La(t),0),u-c)),u+n-i>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(r=Pl(l,i),o=0;o<i;o++)(s=c+o)in l&&Kl(r,o,l[s]);if(r.length=i,n<i){for(o=c;o<u-i;o++)a=o+n,(s=o+i)in l?l[a]=l[s]:delete l[a];for(o=u;o>u-i+n;o--)delete l[o-1]}else if(n>i)for(o=u-i;o>c;o--)a=o+n-1,(s=o+i-1)in l?l[a]=l[s]:delete l[a];for(o=0;o<n;o++)l[o+c]=arguments[o+2];return l.length=u-i+n,r}});var cu=Z("Array").splice,du=Array.prototype,hu=function(e){var t=e.splice;return e===du||e instanceof Array&&t===du.splice?cu:t},fu=Va.includes,pu=zl("indexOf",{ACCESSORS:!0,1:0});U({target:"Array",proto:!0,forced:!pu},{includes:function(e){return fu(this,e,arguments.length>1?arguments[1]:void 0)}});var vu=Z("Array").includes,yu=Na("match"),gu=function(e){if(function(e){var t;return m(e)&&(void 0!==(t=e[yu])?!!t:"RegExp"==f(e))}(e))throw TypeError("The method doesn't accept regular expressions");return e},mu=Na("match");U({target:"String",proto:!0,forced:!function(e){var t=/./;try{"/./"[e](t)}catch(i){try{return t[mu]=!1,"/./"[e](t)}catch(e){}}return!1}("includes")},{includes:function(e){return!!~String(y(this)).indexOf(gu(e),arguments.length>1?arguments[1]:void 0)}});var bu=Z("String").includes,wu=Array.prototype,_u=String.prototype,ku=function(e){var t=e.includes;return e===wu||e instanceof Array&&t===wu.includes?vu:"string"==typeof e||e===_u||e instanceof String&&t===_u.includes?bu:t},xu=Va.indexOf,Su=[].indexOf,Ou=!!Su&&1/[1].indexOf(1,-0)<0,Eu=Fl("indexOf"),Tu=zl("indexOf",{ACCESSORS:!0,1:0});U({target:"Array",proto:!0,forced:Ou||!Eu||!Tu},{indexOf:function(e){return Ou?Su.apply(this,arguments)||0:xu(this,e,arguments.length>1?arguments[1]:void 0)}});var Mu=Z("Array").indexOf,Du=Array.prototype,Cu=function(e){var t=e.indexOf;return e===Du||e instanceof Array&&t===Du.indexOf?Mu:t};U({target:"Object",stat:!0,sham:!a},{create:rl});var Pu=F.Object,Nu=function(e,t){return Pu.create(e,t)},Iu=Nu;function Au(e){return zu=e,function(){var e={};if(Yu=0,Bu=zu.charAt(0),Ju(),"strict"===Hu&&(e.strict=!0,Ju()),"graph"!==Hu&&"digraph"!==Hu||(e.type=Hu,Ju()),Wu===ju.IDENTIFIER&&(e.id=Hu,Ju()),"{"!=Hu)throw oc("Angle bracket { expected");if(Ju(),ec(e),"}"!=Hu)throw oc("Angle bracket } expected");if(Ju(),""!==Hu)throw oc("End of file expected");return Ju(),delete e.node,delete e.edge,delete e.graph,e}()}var Fu={fontsize:"font.size",fontcolor:"font.color",labelfontcolor:"font.color",fontname:"font.face",color:["color.border","color.background"],fillcolor:"color.background",tooltip:"title",labeltooltip:"title"},Ru=Iu(Fu);Ru.color="color.color",Ru.style="dashes";var ju={NULL:0,DELIMITER:1,IDENTIFIER:2,UNKNOWN:3},Lu={"{":!0,"}":!0,"[":!0,"]":!0,";":!0,"=":!0,",":!0,"->":!0,"--":!0},zu="",Yu=0,Bu="",Hu="",Wu=ju.NULL;function Uu(){Yu++,Bu=zu.charAt(Yu)}function Vu(){return zu.charAt(Yu+1)}var Gu=/[a-zA-Z_0-9.:#]/;function qu(e){return Gu.test(e)}function $u(e,t){if(e||(e={}),t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function Zu(e,t,n){for(var i=t.split("."),r=e;i.length;){var o=i.shift();i.length?(r[o]||(r[o]={}),r=r[o]):r[o]=n}}function Qu(e,t){for(var n,i,r=null,o=[e],s=e;s.parent;)o.push(s.parent),s=s.parent;if(s.nodes)for(n=0,i=s.nodes.length;n<i;n++)if(t.id===s.nodes[n].id){r=s.nodes[n];break}for(r||(r={id:t.id},e.node&&(r.attr=$u(r.attr,e.node))),n=o.length-1;n>=0;n--){var a,l=o[n];l.nodes||(l.nodes=[]),-1===Cu(a=l.nodes).call(a,r)&&l.nodes.push(r)}t.attr&&(r.attr=$u(r.attr,t.attr))}function Xu(e,t){if(e.edges||(e.edges=[]),e.edges.push(t),e.edge){var n=$u({},e.edge);t.attr=$u(n,t.attr)}}function Ku(e,t,n,i,r){var o={from:t,to:n,type:i};return e.edge&&(o.attr=$u({},e.edge)),o.attr=$u(o.attr||{},r),null!=r&&r.hasOwnProperty("arrows")&&null!=r.arrows&&(o.arrows={to:{enabled:!0,type:r.arrows.type}},r.arrows=null),o}function Ju(){for(Wu=ju.NULL,Hu="";" "===Bu||"\t"===Bu||"\n"===Bu||"\r"===Bu;)Uu();do{var e=!1;if("#"===Bu){for(var t=Yu-1;" "===zu.charAt(t)||"\t"===zu.charAt(t);)t--;if("\n"===zu.charAt(t)||""===zu.charAt(t)){for(;""!=Bu&&"\n"!=Bu;)Uu();e=!0}}if("/"===Bu&&"/"===Vu()){for(;""!=Bu&&"\n"!=Bu;)Uu();e=!0}if("/"===Bu&&"*"===Vu()){for(;""!=Bu;){if("*"===Bu&&"/"===Vu()){Uu(),Uu();break}Uu()}e=!0}for(;" "===Bu||"\t"===Bu||"\n"===Bu||"\r"===Bu;)Uu()}while(e);if(""!==Bu){var n=Bu+Vu();if(Lu[n])return Wu=ju.DELIMITER,Hu=n,Uu(),void Uu();if(Lu[Bu])return Wu=ju.DELIMITER,Hu=Bu,void Uu();if(qu(Bu)||"-"===Bu){for(Hu+=Bu,Uu();qu(Bu);)Hu+=Bu,Uu();return"false"===Hu?Hu=!1:"true"===Hu?Hu=!0:isNaN(Number(Hu))||(Hu=Number(Hu)),void(Wu=ju.IDENTIFIER)}if('"'===Bu){for(Uu();""!=Bu&&('"'!=Bu||'"'===Bu&&'"'===Vu());)'"'===Bu?(Hu+=Bu,Uu()):"\\"===Bu&&"n"===Vu()?(Hu+="\n",Uu()):Hu+=Bu,Uu();if('"'!=Bu)throw oc('End of string " expected');return Uu(),void(Wu=ju.IDENTIFIER)}for(Wu=ju.UNKNOWN;""!=Bu;)Hu+=Bu,Uu();throw new SyntaxError('Syntax error in part "'+sc(Hu,30)+'"')}Wu=ju.DELIMITER}function ec(e){for(;""!==Hu&&"}"!=Hu;)tc(e),";"===Hu&&Ju()}function tc(e){var t=nc(e);if(t)ic(e,t);else if(!function(e){return"node"===Hu?(Ju(),e.node=rc(),"node"):"edge"===Hu?(Ju(),e.edge=rc(),"edge"):"graph"===Hu?(Ju(),e.graph=rc(),"graph"):null}(e)){if(Wu!=ju.IDENTIFIER)throw oc("Identifier expected");var n=Hu;if(Ju(),"="===Hu){if(Ju(),Wu!=ju.IDENTIFIER)throw oc("Identifier expected");e[n]=Hu,Ju()}else!function(e,t){var n={id:t},i=rc();i&&(n.attr=i),Qu(e,n),ic(e,t)}(e,n)}}function nc(e){var t=null;if("subgraph"===Hu&&((t={}).type="subgraph",Ju(),Wu===ju.IDENTIFIER&&(t.id=Hu,Ju())),"{"===Hu){if(Ju(),t||(t={}),t.parent=e,t.node=e.node,t.edge=e.edge,t.graph=e.graph,ec(t),"}"!=Hu)throw oc("Angle bracket } expected");Ju(),delete t.node,delete t.edge,delete t.graph,delete t.parent,e.subgraphs||(e.subgraphs=[]),e.subgraphs.push(t)}return t}function ic(e,t){for(;"->"===Hu||"--"===Hu;){var n,i=Hu;Ju();var r=nc(e);if(r)n=r;else{if(Wu!=ju.IDENTIFIER)throw oc("Identifier or subgraph expected");Qu(e,{id:n=Hu}),Ju()}Xu(e,Ku(e,t,n,i,rc())),t=n}}function rc(){for(var e,t,n=null,i={dashed:!0,solid:!1,dotted:[1,5]},r={dot:"circle",box:"box",crow:"crow",curve:"curve",icurve:"inv_curve",normal:"triangle",inv:"inv_triangle",diamond:"diamond",tee:"bar",vee:"vee"},o=new Array,s=new Array;"["===Hu;){for(Ju(),n={};""!==Hu&&"]"!=Hu;){if(Wu!=ju.IDENTIFIER)throw oc("Attribute name expected");var a=Hu;if(Ju(),"="!=Hu)throw oc("Equal sign = expected");if(Ju(),Wu!=ju.IDENTIFIER)throw oc("Attribute value expected");var l=Hu;"style"===a&&(l=i[l]),"arrowhead"===a&&(a="arrows",l={to:{enabled:!0,type:r[l]}}),"arrowtail"===a&&(a="arrows",l={from:{enabled:!0,type:r[l]}}),o.push({attr:n,name:a,value:l}),s.push(a),Ju(),","==Hu&&Ju()}if("]"!=Hu)throw oc("Bracket ] expected");Ju()}if(ku(s).call(s,"dir")){var u={arrows:{}};for(e=0;e<o.length;e++)if("arrows"===o[e].name)if(null!=o[e].value.to)u.arrows.to=e;else{if(null==o[e].value.from)throw oc("Invalid value of arrows");u.arrows.from=e}else"dir"===o[e].name&&(u.dir=e);var c,d,h=o[u.dir].value;if(!ku(s).call(s,"arrows"))if("both"===h)o.push({attr:o[u.dir].attr,name:"arrows",value:{to:{enabled:!0}}}),u.arrows.to=o.length-1,o.push({attr:o[u.dir].attr,name:"arrows",value:{from:{enabled:!0}}}),u.arrows.from=o.length-1;else if("forward"===h)o.push({attr:o[u.dir].attr,name:"arrows",value:{to:{enabled:!0}}}),u.arrows.to=o.length-1;else if("back"===h)o.push({attr:o[u.dir].attr,name:"arrows",value:{from:{enabled:!0}}}),u.arrows.from=o.length-1;else{if("none"!==h)throw oc('Invalid dir type "'+h+'"');o.push({attr:o[u.dir].attr,name:"arrows",value:""}),u.arrows.to=o.length-1}if("both"===h)u.arrows.to&&u.arrows.from?(d=o[u.arrows.to].value.to.type,c=o[u.arrows.from].value.from.type,o[u.arrows.to]={attr:o[u.arrows.to].attr,name:o[u.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}},hu(o).call(o,u.arrows.from,1)):u.arrows.to?(d=o[u.arrows.to].value.to.type,c="arrow",o[u.arrows.to]={attr:o[u.arrows.to].attr,name:o[u.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}):u.arrows.from&&(d="arrow",c=o[u.arrows.from].value.from.type,o[u.arrows.from]={attr:o[u.arrows.from].attr,name:o[u.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}});else if("back"===h)u.arrows.to&&u.arrows.from?(d="",c=o[u.arrows.from].value.from.type,o[u.arrows.from]={attr:o[u.arrows.from].attr,name:o[u.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}):u.arrows.to?(d="",c="arrow",u.arrows.from=u.arrows.to,o[u.arrows.from]={attr:o[u.arrows.from].attr,name:o[u.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}):u.arrows.from&&(d="",c=o[u.arrows.from].value.from.type,o[u.arrows.to]={attr:o[u.arrows.from].attr,name:o[u.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}),o[u.arrows.from]={attr:o[u.arrows.from].attr,name:o[u.arrows.from].name,value:{from:{enabled:!0,type:o[u.arrows.from].value.from.type}}};else if("none"===h){var f;o[f=u.arrows.to?u.arrows.to:u.arrows.from]={attr:o[f].attr,name:o[f].name,value:""}}else{if("forward"!==h)throw oc('Invalid dir type "'+h+'"');u.arrows.to&&u.arrows.from?(d=o[u.arrows.to].value.to.type,c="",o[u.arrows.to]={attr:o[u.arrows.to].attr,name:o[u.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}):u.arrows.to?(d=o[u.arrows.to].value.to.type,c="",o[u.arrows.to]={attr:o[u.arrows.to].attr,name:o[u.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}):u.arrows.from&&(d="arrow",c="",u.arrows.to=u.arrows.from,o[u.arrows.to]={attr:o[u.arrows.to].attr,name:o[u.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:c}}}),o[u.arrows.to]={attr:o[u.arrows.to].attr,name:o[u.arrows.to].name,value:{to:{enabled:!0,type:o[u.arrows.to].value.to.type}}}}hu(o).call(o,u.dir,1)}if(ku(s).call(s,"penwidth")){var p=[];for(t=o.length,e=0;e<t;e++)"width"!==o[e].name&&("penwidth"===o[e].name&&(o[e].name="width"),p.push(o[e]));o=p}for(t=o.length,e=0;e<t;e++)Zu(o[e].attr,o[e].name,o[e].value);return n}function oc(e){return new SyntaxError(e+', got "'+sc(Hu,30)+'" (char '+Yu+")")}function sc(e,t){return e.length<=t?e:e.substr(0,27)+"..."}function ac(e,t,n){for(var i=t.split("."),r=i.pop(),o=e,s=0;s<i.length;s++){var a=i[s];a in o||(o[a]={}),o=o[a]}return o[r]=n,e}function lc(e,t){var n={};for(var i in e)if(e.hasOwnProperty(i)){var r=t[i];Xl(r)?ql(r).call(r,(function(t){ac(n,t,e[i])})):ac(n,"string"==typeof r?r:i,e[i])}return n}var uc=Au,cc=function(e){var t,n=Au(e),i={nodes:[],edges:[],options:{}};if(n.nodes&&ql(t=n.nodes).call(t,(function(e){var t={id:e.id,label:String(e.label||e.id)};$u(t,lc(e.attr,Fu)),t.image&&(t.shape="image"),i.nodes.push(t)})),n.edges){var r,o=function(e){var t={from:e.from,to:e.to};return $u(t,lc(e.attr,Ru)),null==t.arrows&&"->"===e.type&&(t.arrows="to"),t};ql(r=n.edges).call(r,(function(e){var t,n,r,s,a,l,u;t=e.from instanceof Object?e.from.nodes:{id:e.from},n=e.to instanceof Object?e.to.nodes:{id:e.to},e.from instanceof Object&&e.from.edges&&ql(r=e.from.edges).call(r,(function(e){var t=o(e);i.edges.push(t)})),a=n,l=function(t,n){var r=Ku(i,t.id,n.id,e.type,e.attr),s=o(r);i.edges.push(s)},Xl(s=t)?ql(s).call(s,(function(e){Xl(a)?ql(a).call(a,(function(t){l(e,t)})):l(e,a)})):Xl(a)?ql(a).call(a,(function(e){l(s,e)})):l(s,a),e.to instanceof Object&&e.to.edges&&ql(u=e.to.edges).call(u,(function(e){var t=o(e);i.edges.push(t)}))}))}return n.attr&&(i.options=n.attr),i},dc={parseDOT:uc,DOTToGraph:cc},hc=Object.freeze({__proto__:null,default:dc,__moduleExports:dc,parseDOT:uc,DOTToGraph:cc}),fc=Al.map,pc=ou("map"),vc=zl("map");U({target:"Array",proto:!0,forced:!pc||!vc},{map:function(e){return fc(this,e,arguments.length>1?arguments[1]:void 0)}});var yc=Z("Array").map,gc=Array.prototype,mc=function(e){var t=e.map;return e===gc||e instanceof Array&&t===gc.map?yc:t};function bc(e,t){var n,i={edges:{inheritColor:!1},nodes:{fixed:!1,parseColor:!1}};null!=t&&(null!=t.fixed&&(i.nodes.fixed=t.fixed),null!=t.parseColor&&(i.nodes.parseColor=t.parseColor),null!=t.inheritColor&&(i.edges.inheritColor=t.inheritColor));var r=e.edges,o=mc(r).call(r,(function(e){var t={from:e.source,id:e.id,to:e.target};return null!=e.attributes&&(t.attributes=e.attributes),null!=e.label&&(t.label=e.label),null!=e.attributes&&null!=e.attributes.title&&(t.title=e.attributes.title),"Directed"===e.type&&(t.arrows="to"),e.color&&!1===i.edges.inheritColor&&(t.color=e.color),t}));return{nodes:mc(n=e.nodes).call(n,(function(e){var t={id:e.id,fixed:i.nodes.fixed&&null!=e.x&&null!=e.y};return null!=e.attributes&&(t.attributes=e.attributes),null!=e.label&&(t.label=e.label),null!=e.size&&(t.size=e.size),null!=e.attributes&&null!=e.attributes.title&&(t.title=e.attributes.title),null!=e.title&&(t.title=e.title),null!=e.x&&(t.x=e.x),null!=e.y&&(t.y=e.y),null!=e.color&&(!0===i.nodes.parseColor?t.color=e.color:t.color={background:e.color,border:e.color,highlight:{background:e.color,border:e.color},hover:{background:e.color,border:e.color}}),t})),edges:o}}var wc=Object.freeze({__proto__:null,parseGephi:bc}),_c=Object.freeze({__proto__:null,default:void 0}),kc=i((function(e,t){e.exports=function(e){var t,n=e&&e.preventDefault||!1,i=e&&e.container||window,r={},o={keydown:{},keyup:{}},s={};for(t=97;t<=122;t++)s[String.fromCharCode(t)]={code:t-97+65,shift:!1};for(t=65;t<=90;t++)s[String.fromCharCode(t)]={code:t,shift:!0};for(t=0;t<=9;t++)s[""+t]={code:48+t,shift:!1};for(t=1;t<=12;t++)s["F"+t]={code:111+t,shift:!1};for(t=0;t<=9;t++)s["num"+t]={code:96+t,shift:!1};s["num*"]={code:106,shift:!1},s["num+"]={code:107,shift:!1},s["num-"]={code:109,shift:!1},s["num/"]={code:111,shift:!1},s["num."]={code:110,shift:!1},s.left={code:37,shift:!1},s.up={code:38,shift:!1},s.right={code:39,shift:!1},s.down={code:40,shift:!1},s.space={code:32,shift:!1},s.enter={code:13,shift:!1},s.shift={code:16,shift:void 0},s.esc={code:27,shift:!1},s.backspace={code:8,shift:!1},s.tab={code:9,shift:!1},s.ctrl={code:17,shift:!1},s.alt={code:18,shift:!1},s.delete={code:46,shift:!1},s.pageup={code:33,shift:!1},s.pagedown={code:34,shift:!1},s["="]={code:187,shift:!1},s["-"]={code:189,shift:!1},s["]"]={code:221,shift:!1},s["["]={code:219,shift:!1};var a=function(e){u(e,"keydown")},l=function(e){u(e,"keyup")},u=function(e,t){if(void 0!==o[t][e.keyCode]){for(var i=o[t][e.keyCode],r=0;r<i.length;r++)void 0===i[r].shift?i[r].fn(e):1==i[r].shift&&1==e.shiftKey?i[r].fn(e):0==i[r].shift&&0==e.shiftKey&&i[r].fn(e);1==n&&e.preventDefault()}};return r.bind=function(e,t,n){if(void 0===n&&(n="keydown"),void 0===s[e])throw new Error("unsupported key: "+e);void 0===o[n][s[e].code]&&(o[n][s[e].code]=[]),o[n][s[e].code].push({fn:t,shift:s[e].shift})},r.bindAll=function(e,t){for(var n in void 0===t&&(t="keydown"),s)s.hasOwnProperty(n)&&r.bind(n,e,t)},r.getKey=function(e){for(var t in s)if(s.hasOwnProperty(t)){if(1==e.shiftKey&&1==s[t].shift&&e.keyCode==s[t].code)return t;if(0==e.shiftKey&&0==s[t].shift&&e.keyCode==s[t].code)return t;if(e.keyCode==s[t].code&&"shift"==t)return t}return"unknown key, currently not supported"},r.unbind=function(e,t,n){if(void 0===n&&(n="keydown"),void 0===s[e])throw new Error("unsupported key: "+e);if(void 0!==t){var i=[],r=o[n][s[e].code];if(void 0!==r)for(var a=0;a<r.length;a++)r[a].fn==t&&r[a].shift==s[e].shift||i.push(o[n][s[e].code][a]);o[n][s[e].code]=i}else o[n][s[e].code]=[]},r.reset=function(){o={keydown:{},keyup:{}}},r.destroy=function(){o={keydown:{},keyup:{}},i.removeEventListener("keydown",a,!0),i.removeEventListener("keyup",l,!0)},i.addEventListener("keydown",a,!0),i.addEventListener("keyup",l,!0),r}})),xc=Object.freeze({__proto__:null,default:kc,__moduleExports:kc});function Sc(){return(Sc=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function Oc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function Ec(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var Tc,Mc="function"!=typeof Object.assign?function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var i=arguments[n];if(null!=i)for(var r in i)i.hasOwnProperty(r)&&(t[r]=i[r])}return t}:Object.assign,Dc=["","webkit","Moz","MS","ms","o"],Cc="undefined"==typeof document?{style:{}}:document.createElement("div"),Pc=Math.round,Nc=Math.abs,Ic=Date.now;function Ac(e,t){for(var n,i,r=t[0].toUpperCase()+t.slice(1),o=0;o<Dc.length;){if((i=(n=Dc[o])?n+r:t)in e)return i;o++}}Tc="undefined"==typeof window?{}:window;var Fc=Ac(Cc.style,"touchAction"),Rc=void 0!==Fc,jc="manipulation",Lc="none",zc="pan-x",Yc="pan-y",Bc=function(){if(!Rc)return!1;var e={},t=Tc.CSS&&Tc.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach((function(n){return e[n]=!t||Tc.CSS.supports("touch-action",n)})),e}(),Hc="ontouchstart"in Tc,Wc=void 0!==Ac(Tc,"PointerEvent"),Uc=Hc&&/mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),Vc="touch",Gc="mouse",qc=["x","y"],$c=["clientX","clientY"];function Zc(e,t,n){var i;if(e)if(e.forEach)e.forEach(t,n);else if(void 0!==e.length)for(i=0;i<e.length;)t.call(n,e[i],i,e),i++;else for(i in e)e.hasOwnProperty(i)&&t.call(n,e[i],i,e)}function Qc(e,t){return"function"===typeof e?e.apply(t&&t[0]||void 0,t):e}function Xc(e,t){return e.indexOf(t)>-1}var Kc=function(){function e(e,t){this.manager=e,this.set(t)}var t=e.prototype;return t.set=function(e){"compute"===e&&(e=this.compute()),Rc&&this.manager.element.style&&Bc[e]&&(this.manager.element.style[Fc]=e),this.actions=e.toLowerCase().trim()},t.update=function(){this.set(this.manager.options.touchAction)},t.compute=function(){var e=[];return Zc(this.manager.recognizers,(function(t){Qc(t.options.enable,[t])&&(e=e.concat(t.getTouchAction()))})),function(e){if(Xc(e,Lc))return Lc;var t=Xc(e,zc),n=Xc(e,Yc);return t&&n?Lc:t||n?t?zc:Yc:Xc(e,jc)?jc:"auto"}(e.join(" "))},t.preventDefaults=function(e){var t=e.srcEvent,n=e.offsetDirection;if(this.manager.session.prevented)t.preventDefault();else{var i=this.actions,r=Xc(i,Lc)&&!Bc[Lc],o=Xc(i,Yc)&&!Bc[Yc],s=Xc(i,zc)&&!Bc[zc];if(r){var a=1===e.pointers.length,l=e.distance<2,u=e.deltaTime<250;if(a&&l&&u)return}if(!s||!o)return r||o&&6&n||s&&24&n?this.preventSrc(t):void 0}},t.preventSrc=function(e){this.manager.session.prevented=!0,e.preventDefault()},e}();function Jc(e,t){for(;e;){if(e===t)return!0;e=e.parentNode}return!1}function ed(e){var t=e.length;if(1===t)return{x:Pc(e[0].clientX),y:Pc(e[0].clientY)};for(var n=0,i=0,r=0;r<t;)n+=e[r].clientX,i+=e[r].clientY,r++;return{x:Pc(n/t),y:Pc(i/t)}}function td(e){for(var t=[],n=0;n<e.pointers.length;)t[n]={clientX:Pc(e.pointers[n].clientX),clientY:Pc(e.pointers[n].clientY)},n++;return{timeStamp:Ic(),pointers:t,center:ed(t),deltaX:e.deltaX,deltaY:e.deltaY}}function nd(e,t,n){n||(n=qc);var i=t[n[0]]-e[n[0]],r=t[n[1]]-e[n[1]];return Math.sqrt(i*i+r*r)}function id(e,t,n){n||(n=qc);var i=t[n[0]]-e[n[0]],r=t[n[1]]-e[n[1]];return 180*Math.atan2(r,i)/Math.PI}function rd(e,t){return e===t?1:Nc(e)>=Nc(t)?e<0?2:4:t<0?8:16}function od(e,t,n){return{x:t/e||0,y:n/e||0}}function sd(e,t,n){var i=n.pointers.length,r=n.changedPointers.length,o=1&t&&i-r==0,s=12&t&&i-r==0;n.isFirst=!!o,n.isFinal=!!s,o&&(e.session={}),n.eventType=t,function(e,t){var n=e.session,i=t.pointers,r=i.length;n.firstInput||(n.firstInput=td(t)),r>1&&!n.firstMultiple?n.firstMultiple=td(t):1===r&&(n.firstMultiple=!1);var o=n.firstInput,s=n.firstMultiple,a=s?s.center:o.center,l=t.center=ed(i);t.timeStamp=Ic(),t.deltaTime=t.timeStamp-o.timeStamp,t.angle=id(a,l),t.distance=nd(a,l),function(e,t){var n=t.center,i=e.offsetDelta||{},r=e.prevDelta||{},o=e.prevInput||{};1!==t.eventType&&4!==o.eventType||(r=e.prevDelta={x:o.deltaX||0,y:o.deltaY||0},i=e.offsetDelta={x:n.x,y:n.y}),t.deltaX=r.x+(n.x-i.x),t.deltaY=r.y+(n.y-i.y)}(n,t),t.offsetDirection=rd(t.deltaX,t.deltaY);var u,c,d=od(t.deltaTime,t.deltaX,t.deltaY);t.overallVelocityX=d.x,t.overallVelocityY=d.y,t.overallVelocity=Nc(d.x)>Nc(d.y)?d.x:d.y,t.scale=s?(u=s.pointers,nd((c=i)[0],c[1],$c)/nd(u[0],u[1],$c)):1,t.rotation=s?function(e,t){return id(t[1],t[0],$c)+id(e[1],e[0],$c)}(s.pointers,i):0,t.maxPointers=n.prevInput?t.pointers.length>n.prevInput.maxPointers?t.pointers.length:n.prevInput.maxPointers:t.pointers.length,function(e,t){var n,i,r,o,s=e.lastInterval||t,a=t.timeStamp-s.timeStamp;if(8!==t.eventType&&(a>25||void 0===s.velocity)){var l=t.deltaX-s.deltaX,u=t.deltaY-s.deltaY,c=od(a,l,u);i=c.x,r=c.y,n=Nc(c.x)>Nc(c.y)?c.x:c.y,o=rd(l,u),e.lastInterval=t}else n=s.velocity,i=s.velocityX,r=s.velocityY,o=s.direction;t.velocity=n,t.velocityX=i,t.velocityY=r,t.direction=o}(n,t);var h,f=e.element,p=t.srcEvent;Jc(h=p.composedPath?p.composedPath()[0]:p.path?p.path[0]:p.target,f)&&(f=h),t.target=f}(e,n),e.emit("hammer.input",n),e.recognize(n),e.session.prevInput=n}function ad(e){return e.trim().split(/\s+/g)}function ld(e,t,n){Zc(ad(t),(function(t){e.addEventListener(t,n,!1)}))}function ud(e,t,n){Zc(ad(t),(function(t){e.removeEventListener(t,n,!1)}))}function cd(e){var t=e.ownerDocument||e;return t.defaultView||t.parentWindow||window}var dd=function(){function e(e,t){var n=this;this.manager=e,this.callback=t,this.element=e.element,this.target=e.options.inputTarget,this.domHandler=function(t){Qc(e.options.enable,[e])&&n.handler(t)},this.init()}var t=e.prototype;return t.handler=function(){},t.init=function(){this.evEl&&ld(this.element,this.evEl,this.domHandler),this.evTarget&&ld(this.target,this.evTarget,this.domHandler),this.evWin&&ld(cd(this.element),this.evWin,this.domHandler)},t.destroy=function(){this.evEl&&ud(this.element,this.evEl,this.domHandler),this.evTarget&&ud(this.target,this.evTarget,this.domHandler),this.evWin&&ud(cd(this.element),this.evWin,this.domHandler)},e}();function hd(e,t,n){if(e.indexOf&&!n)return e.indexOf(t);for(var i=0;i<e.length;){if(n&&e[i][n]==t||!n&&e[i]===t)return i;i++}return-1}var fd={pointerdown:1,pointermove:2,pointerup:4,pointercancel:8,pointerout:8},pd={2:Vc,3:"pen",4:Gc,5:"kinect"},vd="pointerdown",yd="pointermove pointerup pointercancel";Tc.MSPointerEvent&&!Tc.PointerEvent&&(vd="MSPointerDown",yd="MSPointerMove MSPointerUp MSPointerCancel");var gd=function(e){function t(){var n,i=t.prototype;return i.evEl=vd,i.evWin=yd,(n=e.apply(this,arguments)||this).store=n.manager.session.pointerEvents=[],n}return Oc(t,e),t.prototype.handler=function(e){var t=this.store,n=!1,i=e.type.toLowerCase().replace("ms",""),r=fd[i],o=pd[e.pointerType]||e.pointerType,s=o===Vc,a=hd(t,e.pointerId,"pointerId");1&r&&(0===e.button||s)?a<0&&(t.push(e),a=t.length-1):12&r&&(n=!0),a<0||(t[a]=e,this.callback(this.manager,r,{pointers:t,changedPointers:[e],pointerType:o,srcEvent:e}),n&&t.splice(a,1))},t}(dd);function md(e){return Array.prototype.slice.call(e,0)}function bd(e,t,n){for(var i=[],r=[],o=0;o<e.length;){var s=t?e[o][t]:e[o];hd(r,s)<0&&i.push(e[o]),r[o]=s,o++}return n&&(i=t?i.sort((function(e,n){return e[t]>n[t]})):i.sort()),i}var wd={touchstart:1,touchmove:2,touchend:4,touchcancel:8},_d="touchstart touchmove touchend touchcancel",kd=function(e){function t(){var n;return t.prototype.evTarget=_d,(n=e.apply(this,arguments)||this).targetIds={},n}return Oc(t,e),t.prototype.handler=function(e){var t=wd[e.type],n=xd.call(this,e,t);n&&this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:Vc,srcEvent:e})},t}(dd);function xd(e,t){var n,i,r=md(e.touches),o=this.targetIds;if(3&t&&1===r.length)return o[r[0].identifier]=!0,[r,r];var s=md(e.changedTouches),a=[],l=this.target;if(i=r.filter((function(e){return Jc(e.target,l)})),1===t)for(n=0;n<i.length;)o[i[n].identifier]=!0,n++;for(n=0;n<s.length;)o[s[n].identifier]&&a.push(s[n]),12&t&&delete o[s[n].identifier],n++;return a.length?[bd(i.concat(a),"identifier",!0),a]:void 0}var Sd={mousedown:1,mousemove:2,mouseup:4},Od="mousedown",Ed="mousemove mouseup",Td=function(e){function t(){var n,i=t.prototype;return i.evEl=Od,i.evWin=Ed,(n=e.apply(this,arguments)||this).pressed=!1,n}return Oc(t,e),t.prototype.handler=function(e){var t=Sd[e.type];1&t&&0===e.button&&(this.pressed=!0),2&t&&1!==e.which&&(t=4),this.pressed&&(4&t&&(this.pressed=!1),this.callback(this.manager,t,{pointers:[e],changedPointers:[e],pointerType:Gc,srcEvent:e}))},t}(dd);function Md(e){var t=e.changedPointers[0];if(t.identifier===this.primaryTouch){var n={x:t.clientX,y:t.clientY},i=this.lastTouches;this.lastTouches.push(n),setTimeout((function(){var e=i.indexOf(n);e>-1&&i.splice(e,1)}),2500)}}function Dd(e,t){1&e?(this.primaryTouch=t.changedPointers[0].identifier,Md.call(this,t)):12&e&&Md.call(this,t)}function Cd(e){for(var t=e.srcEvent.clientX,n=e.srcEvent.clientY,i=0;i<this.lastTouches.length;i++){var r=this.lastTouches[i],o=Math.abs(t-r.x),s=Math.abs(n-r.y);if(o<=25&&s<=25)return!0}return!1}var Pd=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).handler=function(e,t,n){var r=n.pointerType===Vc,o=n.pointerType===Gc;if(!(o&&n.sourceCapabilities&&n.sourceCapabilities.firesTouchEvents)){if(r)Dd.call(Ec(Ec(i)),t,n);else if(o&&Cd.call(Ec(Ec(i)),n))return;i.callback(e,t,n)}},i.touch=new kd(i.manager,i.handler),i.mouse=new Td(i.manager,i.handler),i.primaryTouch=null,i.lastTouches=[],i}return Oc(t,e),t.prototype.destroy=function(){this.touch.destroy(),this.mouse.destroy()},t}(dd);function Nd(e,t,n){return!!Array.isArray(e)&&(Zc(e,n[t],n),!0)}var Id=1;function Ad(e,t){var n=t.manager;return n?n.get(e):e}function Fd(e){return 16&e?"cancel":8&e?"end":4&e?"move":2&e?"start":""}var Rd=function(){function e(e){void 0===e&&(e={}),this.options=Sc({enable:!0},e),this.id=Id++,this.manager=null,this.state=1,this.simultaneous={},this.requireFail=[]}var t=e.prototype;return t.set=function(e){return Mc(this.options,e),this.manager&&this.manager.touchAction.update(),this},t.recognizeWith=function(e){if(Nd(e,"recognizeWith",this))return this;var t=this.simultaneous;return t[(e=Ad(e,this)).id]||(t[e.id]=e,e.recognizeWith(this)),this},t.dropRecognizeWith=function(e){return Nd(e,"dropRecognizeWith",this)?this:(e=Ad(e,this),delete this.simultaneous[e.id],this)},t.requireFailure=function(e){if(Nd(e,"requireFailure",this))return this;var t=this.requireFail;return-1===hd(t,e=Ad(e,this))&&(t.push(e),e.requireFailure(this)),this},t.dropRequireFailure=function(e){if(Nd(e,"dropRequireFailure",this))return this;e=Ad(e,this);var t=hd(this.requireFail,e);return t>-1&&this.requireFail.splice(t,1),this},t.hasRequireFailures=function(){return this.requireFail.length>0},t.canRecognizeWith=function(e){return!!this.simultaneous[e.id]},t.emit=function(e){var t=this,n=this.state;function i(n){t.manager.emit(n,e)}n<8&&i(t.options.event+Fd(n)),i(t.options.event),e.additionalEvent&&i(e.additionalEvent),n>=8&&i(t.options.event+Fd(n))},t.tryEmit=function(e){if(this.canEmit())return this.emit(e);this.state=32},t.canEmit=function(){for(var e=0;e<this.requireFail.length;){if(!(33&this.requireFail[e].state))return!1;e++}return!0},t.recognize=function(e){var t=Mc({},e);if(!Qc(this.options.enable,[this,t]))return this.reset(),void(this.state=32);56&this.state&&(this.state=1),this.state=this.process(t),30&this.state&&this.tryEmit(t)},t.process=function(e){},t.getTouchAction=function(){},t.reset=function(){},e}(),jd=function(e){function t(t){var n;return void 0===t&&(t={}),(n=e.call(this,Sc({event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},t))||this).pTime=!1,n.pCenter=!1,n._timer=null,n._input=null,n.count=0,n}Oc(t,e);var n=t.prototype;return n.getTouchAction=function(){return[jc]},n.process=function(e){var t=this,n=this.options,i=e.pointers.length===n.pointers,r=e.distance<n.threshold,o=e.deltaTime<n.time;if(this.reset(),1&e.eventType&&0===this.count)return this.failTimeout();if(r&&o&&i){if(4!==e.eventType)return this.failTimeout();var s=!this.pTime||e.timeStamp-this.pTime<n.interval,a=!this.pCenter||nd(this.pCenter,e.center)<n.posThreshold;if(this.pTime=e.timeStamp,this.pCenter=e.center,a&&s?this.count+=1:this.count=1,this._input=e,0===this.count%n.taps)return this.hasRequireFailures()?(this._timer=setTimeout((function(){t.state=8,t.tryEmit()}),n.interval),2):8}return 32},n.failTimeout=function(){var e=this;return this._timer=setTimeout((function(){e.state=32}),this.options.interval),32},n.reset=function(){clearTimeout(this._timer)},n.emit=function(){8===this.state&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))},t}(Rd),Ld=function(e){function t(t){return void 0===t&&(t={}),e.call(this,Sc({pointers:1},t))||this}Oc(t,e);var n=t.prototype;return n.attrTest=function(e){var t=this.options.pointers;return 0===t||e.pointers.length===t},n.process=function(e){var t=this.state,n=e.eventType,i=6&t,r=this.attrTest(e);return i&&(8&n||!r)?16|t:i||r?4&n?8|t:2&t?4|t:2:32},t}(Rd);function zd(e){return 16===e?"down":8===e?"up":2===e?"left":4===e?"right":""}var Yd=function(e){function t(t){var n;return void 0===t&&(t={}),(n=e.call(this,Sc({event:"pan",threshold:10,pointers:1,direction:30},t))||this).pX=null,n.pY=null,n}Oc(t,e);var n=t.prototype;return n.getTouchAction=function(){var e=this.options.direction,t=[];return 6&e&&t.push(Yc),24&e&&t.push(zc),t},n.directionTest=function(e){var t=this.options,n=!0,i=e.distance,r=e.direction,o=e.deltaX,s=e.deltaY;return r&t.direction||(6&t.direction?(r=0===o?1:o<0?2:4,n=o!==this.pX,i=Math.abs(e.deltaX)):(r=0===s?1:s<0?8:16,n=s!==this.pY,i=Math.abs(e.deltaY))),e.direction=r,n&&i>t.threshold&&r&t.direction},n.attrTest=function(e){return Ld.prototype.attrTest.call(this,e)&&(2&this.state||!(2&this.state)&&this.directionTest(e))},n.emit=function(t){this.pX=t.deltaX,this.pY=t.deltaY;var n=zd(t.direction);n&&(t.additionalEvent=this.options.event+n),e.prototype.emit.call(this,t)},t}(Ld),Bd=function(e){function t(t){return void 0===t&&(t={}),e.call(this,Sc({event:"swipe",threshold:10,velocity:.3,direction:30,pointers:1},t))||this}Oc(t,e);var n=t.prototype;return n.getTouchAction=function(){return Yd.prototype.getTouchAction.call(this)},n.attrTest=function(t){var n,i=this.options.direction;return 30&i?n=t.overallVelocity:6&i?n=t.overallVelocityX:24&i&&(n=t.overallVelocityY),e.prototype.attrTest.call(this,t)&&i&t.offsetDirection&&t.distance>this.options.threshold&&t.maxPointers===this.options.pointers&&Nc(n)>this.options.velocity&&4&t.eventType},n.emit=function(e){var t=zd(e.offsetDirection);t&&this.manager.emit(this.options.event+t,e),this.manager.emit(this.options.event,e)},t}(Ld),Hd=function(e){function t(t){return void 0===t&&(t={}),e.call(this,Sc({event:"pinch",threshold:0,pointers:2},t))||this}Oc(t,e);var n=t.prototype;return n.getTouchAction=function(){return[Lc]},n.attrTest=function(t){return e.prototype.attrTest.call(this,t)&&(Math.abs(t.scale-1)>this.options.threshold||2&this.state)},n.emit=function(t){if(1!==t.scale){var n=t.scale<1?"in":"out";t.additionalEvent=this.options.event+n}e.prototype.emit.call(this,t)},t}(Ld),Wd=function(e){function t(t){return void 0===t&&(t={}),e.call(this,Sc({event:"rotate",threshold:0,pointers:2},t))||this}Oc(t,e);var n=t.prototype;return n.getTouchAction=function(){return[Lc]},n.attrTest=function(t){return e.prototype.attrTest.call(this,t)&&(Math.abs(t.rotation)>this.options.threshold||2&this.state)},t}(Ld),Ud=function(e){function t(t){var n;return void 0===t&&(t={}),(n=e.call(this,Sc({event:"press",pointers:1,time:251,threshold:9},t))||this)._timer=null,n._input=null,n}Oc(t,e);var n=t.prototype;return n.getTouchAction=function(){return["auto"]},n.process=function(e){var t=this,n=this.options,i=e.pointers.length===n.pointers,r=e.distance<n.threshold,o=e.deltaTime>n.time;if(this._input=e,!r||!i||12&e.eventType&&!o)this.reset();else if(1&e.eventType)this.reset(),this._timer=setTimeout((function(){t.state=8,t.tryEmit()}),n.time);else if(4&e.eventType)return 8;return 32},n.reset=function(){clearTimeout(this._timer)},n.emit=function(e){8===this.state&&(e&&4&e.eventType?this.manager.emit(this.options.event+"up",e):(this._input.timeStamp=Ic(),this.manager.emit(this.options.event,this._input)))},t}(Rd),Vd={domEvents:!1,touchAction:"compute",enable:!0,inputTarget:null,inputClass:null,cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}},Gd=[[Wd,{enable:!1}],[Hd,{enable:!1},["rotate"]],[Bd,{direction:6}],[Yd,{direction:6},["swipe"]],[jd],[jd,{event:"doubletap",taps:2},["tap"]],[Ud]];function qd(e,t){var n,i=e.element;i.style&&(Zc(e.options.cssProps,(function(r,o){n=Ac(i.style,o),t?(e.oldCssProps[n]=i.style[n],i.style[n]=r):i.style[n]=e.oldCssProps[n]||""})),t||(e.oldCssProps={}))}var $d=function(){function e(e,t){var n,i=this;this.options=Mc({},Vd,t||{}),this.options.inputTarget=this.options.inputTarget||e,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=e,this.input=new((n=this).options.inputClass||(Wc?gd:Uc?kd:Hc?Pd:Td))(n,sd),this.touchAction=new Kc(this,this.options.touchAction),qd(this,!0),Zc(this.options.recognizers,(function(e){var t=i.add(new e[0](e[1]));e[2]&&t.recognizeWith(e[2]),e[3]&&t.requireFailure(e[3])}),this)}var t=e.prototype;return t.set=function(e){return Mc(this.options,e),e.touchAction&&this.touchAction.update(),e.inputTarget&&(this.input.destroy(),this.input.target=e.inputTarget,this.input.init()),this},t.stop=function(e){this.session.stopped=e?2:1},t.recognize=function(e){var t=this.session;if(!t.stopped){var n;this.touchAction.preventDefaults(e);var i=this.recognizers,r=t.curRecognizer;(!r||r&&8&r.state)&&(t.curRecognizer=null,r=null);for(var o=0;o<i.length;)n=i[o],2===t.stopped||r&&n!==r&&!n.canRecognizeWith(r)?n.reset():n.recognize(e),!r&&14&n.state&&(t.curRecognizer=n,r=n),o++}},t.get=function(e){if(e instanceof Rd)return e;for(var t=this.recognizers,n=0;n<t.length;n++)if(t[n].options.event===e)return t[n];return null},t.add=function(e){if(Nd(e,"add",this))return this;var t=this.get(e.options.event);return t&&this.remove(t),this.recognizers.push(e),e.manager=this,this.touchAction.update(),e},t.remove=function(e){if(Nd(e,"remove",this))return this;var t=this.get(e);if(e){var n=this.recognizers,i=hd(n,t);-1!==i&&(n.splice(i,1),this.touchAction.update())}return this},t.on=function(e,t){if(void 0===e||void 0===t)return this;var n=this.handlers;return Zc(ad(e),(function(e){n[e]=n[e]||[],n[e].push(t)})),this},t.off=function(e,t){if(void 0===e)return this;var n=this.handlers;return Zc(ad(e),(function(e){t?n[e]&&n[e].splice(hd(n[e],t),1):delete n[e]})),this},t.emit=function(e,t){this.options.domEvents&&function(e,t){var n=document.createEvent("Event");n.initEvent(e,!0,!0),n.gesture=t,t.target.dispatchEvent(n)}(e,t);var n=this.handlers[e]&&this.handlers[e].slice();if(n&&n.length){t.type=e,t.preventDefault=function(){t.srcEvent.preventDefault()};for(var i=0;i<n.length;)n[i](t),i++}},t.destroy=function(){this.element&&qd(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null},e}(),Zd={touchstart:1,touchmove:2,touchend:4,touchcancel:8},Qd="touchstart",Xd="touchstart touchmove touchend touchcancel",Kd=function(e){function t(){var n,i=t.prototype;return i.evTarget=Qd,i.evWin=Xd,(n=e.apply(this,arguments)||this).started=!1,n}return Oc(t,e),t.prototype.handler=function(e){var t=Zd[e.type];if(1===t&&(this.started=!0),this.started){var n=Jd.call(this,e,t);12&t&&n[0].length-n[1].length==0&&(this.started=!1),this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:Vc,srcEvent:e})}},t}(dd);function Jd(e,t){var n=md(e.touches),i=md(e.changedTouches);return 12&t&&(n=bd(n.concat(i),"identifier",!0)),[n,i]}function eh(e,t,n){var i="DEPRECATED METHOD: "+t+"\n"+n+" AT \n";return function(){var t=new Error("get-stack-trace"),n=t&&t.stack?t.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",r=window.console&&(window.console.warn||window.console.log);return r&&r.call(window.console,i,n),e.apply(this,arguments)}}var th=eh((function(e,t,n){for(var i=Object.keys(t),r=0;r<i.length;)(!n||n&&void 0===e[i[r]])&&(e[i[r]]=t[i[r]]),r++;return e}),"extend","Use `assign`."),nh=eh((function(e,t){return th(e,t,!0)}),"merge","Use `assign`.");function ih(e,t,n){var i,r=t.prototype;(i=e.prototype=Object.create(r)).constructor=e,i._super=r,n&&Mc(i,n)}function rh(e,t){return function(){return e.apply(t,arguments)}}var oh,sh=function(){var e=function(e,t){return void 0===t&&(t={}),new $d(e,Sc({recognizers:Gd.concat()},t))};return e.VERSION="2.0.17-rc",e.DIRECTION_ALL=30,e.DIRECTION_DOWN=16,e.DIRECTION_LEFT=2,e.DIRECTION_RIGHT=4,e.DIRECTION_UP=8,e.DIRECTION_HORIZONTAL=6,e.DIRECTION_VERTICAL=24,e.DIRECTION_NONE=1,e.DIRECTION_DOWN=16,e.INPUT_START=1,e.INPUT_MOVE=2,e.INPUT_END=4,e.INPUT_CANCEL=8,e.STATE_POSSIBLE=1,e.STATE_BEGAN=2,e.STATE_CHANGED=4,e.STATE_ENDED=8,e.STATE_RECOGNIZED=8,e.STATE_CANCELLED=16,e.STATE_FAILED=32,e.Manager=$d,e.Input=dd,e.TouchAction=Kc,e.TouchInput=kd,e.MouseInput=Td,e.PointerEventInput=gd,e.TouchMouseInput=Pd,e.SingleTouchInput=Kd,e.Recognizer=Rd,e.AttrRecognizer=Ld,e.Tap=jd,e.Pan=Yd,e.Swipe=Bd,e.Pinch=Hd,e.Rotate=Wd,e.Press=Ud,e.on=ld,e.off=ud,e.each=Zc,e.merge=nh,e.extend=th,e.bindFn=rh,e.assign=Mc,e.inherit=ih,e.bindFn=rh,e.prefixed=Ac,e.toArray=md,e.inArray=hd,e.uniqueArray=bd,e.splitStr=ad,e.boolOrFn=Qc,e.hasParent=Jc,e.addEventListeners=ld,e.removeEventListeners=ud,e.defaults=Mc({},Vd,{preset:Gd}),e}(),ah=i((function(e){if("undefined"!=typeof window){var t=window.Hammer||sh;e.exports=t}else e.exports=function(){return{on:e=function(){},off:e,destroy:e,emit:e,get:function(t){return{set:e}}};var e}})),lh=Object.freeze({__proto__:null,default:ah,__moduleExports:ah});function uh(e){var t,n,i=this;this.active=!1,this.dom={container:e},this.dom.overlay=document.createElement("div"),this.dom.overlay.className="vis-overlay",this.dom.container.appendChild(this.dom.overlay),this.hammer=ah(this.dom.overlay),this.hammer.on("tap",K(t=this._onTapOverlay).call(t,this));var r=["tap","doubletap","press","pinch","pan","panstart","panmove","panend"];ql(r).call(r,(function(e){i.hammer.on(e,(function(e){e.srcEvent.stopPropagation()}))})),document&&document.body&&(this.onClick=function(t){(function(e,t){for(;e;){if(e===t)return!0;e=e.parentNode}return!1})(t.target,e)||i.deactivate()},document.body.addEventListener("click",this.onClick)),void 0!==this.keycharm&&this.keycharm.destroy(),this.keycharm=kc(),this.escListener=K(n=this.deactivate).call(n,this)}(oh=_c)&&oh.default,oe(uh.prototype),uh.current=null,uh.prototype.destroy=function(){this.deactivate(),this.dom.overlay.parentNode.removeChild(this.dom.overlay),this.onClick&&document.body.removeEventListener("click",this.onClick),void 0!==this.keycharm&&this.keycharm.destroy(),this.keycharm=null,this.hammer.destroy(),this.hammer=null},uh.prototype.activate=function(){var e;uh.current&&uh.current.deactivate(),uh.current=this,this.active=!0,this.dom.overlay.style.display="none",$s.addClassName(this.dom.container,"vis-active"),this.emit("change"),this.emit("activate"),K(e=this.keycharm).call(e,"esc",this.escListener)},uh.prototype.deactivate=function(){this.active=!1,this.dom.overlay.style.display="block",$s.removeClassName(this.dom.container,"vis-active"),this.keycharm.unbind("esc",this.escListener),this.emit("change"),this.emit("deactivate")},uh.prototype._onTapOverlay=function(e){this.activate(),e.srcEvent.stopPropagation()};var ch=uh,dh=i((function(e,t){t.en={edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Node",addEdge:"Add Edge",editNode:"Edit Node",editEdge:"Edit Edge",addDescription:"Click in an empty space to place a new node.",edgeDescription:"Click on a node and drag the edge to another node to connect them.",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},t.en_EN=t.en,t.en_US=t.en,t.de={edit:"Editieren",del:"L\xf6sche Auswahl",back:"Zur\xfcck",addNode:"Knoten hinzuf\xfcgen",addEdge:"Kante hinzuf\xfcgen",editNode:"Knoten editieren",editEdge:"Kante editieren",addDescription:"Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.",edgeDescription:"Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.",editEdgeDescription:"Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.",createEdgeError:"Es ist nicht m\xf6glich, Kanten mit Clustern zu verbinden.",deleteClusterError:"Cluster k\xf6nnen nicht gel\xf6scht werden.",editClusterError:"Cluster k\xf6nnen nicht editiert werden."},t.de_DE=t.de,t.es={edit:"Editar",del:"Eliminar selecci\xf3n",back:"Atr\xe1s",addNode:"A\xf1adir nodo",addEdge:"A\xf1adir arista",editNode:"Editar nodo",editEdge:"Editar arista",addDescription:"Haga clic en un lugar vac\xedo para colocar un nuevo nodo.",edgeDescription:"Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.",editEdgeDescription:"Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.",createEdgeError:"No se puede conectar una arista a un grupo.",deleteClusterError:"No es posible eliminar grupos.",editClusterError:"No es posible editar grupos."},t.es_ES=t.es,t.it={edit:"Modifica",del:"Cancella la selezione",back:"Indietro",addNode:"Aggiungi un nodo",addEdge:"Aggiungi un vertice",editNode:"Modifica il nodo",editEdge:"Modifica il vertice",addDescription:"Clicca per aggiungere un nuovo nodo",edgeDescription:"Clicca su un nodo e trascinalo ad un altro nodo per connetterli.",editEdgeDescription:"Clicca sui Punti di controllo e trascinali ad un nodo per connetterli.",createEdgeError:"Non si possono collegare vertici ad un cluster",deleteClusterError:"I cluster non possono essere cancellati",editClusterError:"I clusters non possono essere modificati."},t.it_IT=t.it,t.nl={edit:"Wijzigen",del:"Selectie verwijderen",back:"Terug",addNode:"Node toevoegen",addEdge:"Link toevoegen",editNode:"Node wijzigen",editEdge:"Link wijzigen",addDescription:"Klik op een leeg gebied om een nieuwe node te maken.",edgeDescription:"Klik op een node en sleep de link naar een andere node om ze te verbinden.",editEdgeDescription:"Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.",createEdgeError:"Kan geen link maken naar een cluster.",deleteClusterError:"Clusters kunnen niet worden verwijderd.",editClusterError:"Clusters kunnen niet worden aangepast."},t.nl_NL=t.nl,t.nl_BE=t.nl,t["pt-br"]={edit:"Editar",del:"Remover selecionado",back:"Voltar",addNode:"Adicionar n\xf3",addEdge:"Adicionar aresta",editNode:"Editar n\xf3",editEdge:"Editar aresta",addDescription:"Clique em um espa\xe7o em branco para adicionar um novo n\xf3",edgeDescription:"Clique em um n\xf3 e arraste a aresta at\xe9 outro n\xf3 para conect\xe1-los",editEdgeDescription:"Clique nos pontos de controle e os arraste para um n\xf3 para conect\xe1-los",createEdgeError:"N\xe3o foi poss\xedvel linkar arestas a um cluster.",deleteClusterError:"Clusters n\xe3o puderam ser removidos.",editClusterError:"Clusters n\xe3o puderam ser editados."},t["pt-BR"]=t["pt-br"],t.pt_BR=t["pt-br"],t.pt_br=t["pt-br"],t.ru={edit:"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c",del:"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435",back:"\u041d\u0430\u0437\u0430\u0434",addNode:"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0437\u0435\u043b",addEdge:"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0431\u0440\u043e",editNode:"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0437\u0435\u043b",editEdge:"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0431\u0440\u043e",addDescription:"\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u0432 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0443\u0437\u0435\u043b.",edgeDescription:"\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u0443\u0437\u0435\u043b \u0438 \u043f\u0440\u043e\u0442\u044f\u043d\u0438\u0442\u0435 \u0440\u0435\u0431\u0440\u043e \u043a \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0443\u0437\u043b\u0443, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0438\u0445.",editEdgeDescription:"\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0438 \u043f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0438\u0445 \u0432 \u0443\u0437\u0435\u043b, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u043d\u0435\u043c\u0443.",createEdgeError:"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0440\u0435\u0431\u0440\u0430 \u0432 \u043a\u043b\u0430\u0441\u0442\u0435\u0440.",deleteClusterError:"\u041a\u043b\u0430\u0441\u0442\u0435\u0440\u044b \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u044b",editClusterError:"\u041a\u043b\u0430\u0441\u0442\u0435\u0440\u044b \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f."},t.ru_RU=t.ru,t.cn={edit:"\u7f16\u8f91",del:"\u5220\u9664\u9009\u5b9a",back:"\u8fd4\u56de",addNode:"\u6dfb\u52a0\u8282\u70b9",addEdge:"\u6dfb\u52a0\u8fde\u63a5\u7ebf",editNode:"\u7f16\u8f91\u8282\u70b9",editEdge:"\u7f16\u8f91\u8fde\u63a5\u7ebf",addDescription:"\u5355\u51fb\u7a7a\u767d\u5904\u653e\u7f6e\u65b0\u8282\u70b9\u3002",edgeDescription:"\u5355\u51fb\u67d0\u4e2a\u8282\u70b9\u5e76\u5c06\u8be5\u8fde\u63a5\u7ebf\u62d6\u52a8\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u4ee5\u8fde\u63a5\u5b83\u4eec\u3002",editEdgeDescription:"\u5355\u51fb\u63a7\u5236\u8282\u70b9\u5e76\u5c06\u5b83\u4eec\u62d6\u5230\u8282\u70b9\u4e0a\u8fde\u63a5\u3002",createEdgeError:"\u65e0\u6cd5\u5c06\u8fde\u63a5\u7ebf\u8fde\u63a5\u5230\u7fa4\u96c6\u3002",deleteClusterError:"\u65e0\u6cd5\u5220\u9664\u7fa4\u96c6\u3002",editClusterError:"\u65e0\u6cd5\u7f16\u8f91\u7fa4\u96c6\u3002"},t.zh_CN=t.cn,t.uk={edit:"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438",del:"\u0412\u0438\u0434\u0430\u043b\u0438\u0442\u0438 \u043e\u0431\u0440\u0430\u043d\u0435",back:"\u041d\u0430\u0437\u0430\u0434",addNode:"\u0414\u043e\u0434\u0430\u0442\u0438 \u0432\u0443\u0437\u043e\u043b",addEdge:"\u0414\u043e\u0434\u0430\u0442\u0438 \u043a\u0440\u0430\u0439",editNode:"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u0432\u0443\u0437\u043e\u043b",editEdge:"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u043a\u0440\u0430\u0439",addDescription:"K\u043b\u0456\u043a\u043d\u0456\u0442\u044c \u043d\u0430 \u0432\u0456\u043b\u044c\u043d\u0435 \u043c\u0456\u0441\u0446\u0435, \u0449\u043e\u0431 \u0434\u043e\u0434\u0430\u0442\u0438 \u043d\u043e\u0432\u0438\u0439 \u0432\u0443\u0437\u043e\u043b.",edgeDescription:"\u041a\u043b\u0456\u043a\u043d\u0456\u0442\u044c \u043d\u0430 \u0432\u0443\u0437\u043e\u043b \u0456 \u043f\u0435\u0440\u0435\u0442\u044f\u0433\u043d\u0456\u0442\u044c \u043a\u0440\u0430\u0439 \u0434\u043e \u0456\u043d\u0448\u043e\u0433\u043e \u0432\u0443\u0437\u043b\u0430, \u0449\u043e\u0431 \u0457\u0445 \u0437'\u0454\u0434\u043d\u0430\u0442\u0438.",editEdgeDescription:"\u041a\u043b\u0456\u043a\u043d\u0456\u0442\u044c \u043d\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0456 \u0442\u043e\u0447\u043a\u0438 \u0456 \u043f\u0435\u0440\u0435\u0442\u044f\u0433\u043d\u0456\u0442\u044c \u0457\u0445 \u0443 \u0432\u0443\u0437\u043e\u043b, \u0449\u043e\u0431 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0438\u0441\u044f \u0434\u043e \u043d\u044c\u043e\u0433\u043e.",createEdgeError:"\u041d\u0435 \u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043e\u0431'\u0454\u0434\u043d\u0430\u0442\u0438 \u043a\u0440\u0430\u0457 \u0432 \u0433\u0440\u0443\u043f\u0443.",deleteClusterError:"\u0413\u0440\u0443\u043f\u0438 \u043d\u0435 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0432\u0438\u0434\u0430\u043b\u0435\u043d\u0456.",editClusterError:"\u0413\u0440\u0443\u043f\u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0456 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043d\u043d\u044f."},t.uk_UA=t.uk,t.fr={edit:"\xc9diter",del:"Effacer la s\xe9lection",back:"Retour",addNode:"Ajouter un n\u0153ud",addEdge:"Ajouter un lien",editNode:"\xc9diter le n\u0153ud",editEdge:"\xc9diter le lien",addDescription:"Cliquez dans un endroit vide pour placer un n\u0153ud.",edgeDescription:"Cliquez sur un n\u0153ud et glissez le lien vers un autre n\u0153ud pour les connecter.",editEdgeDescription:"Cliquez sur les points de contr\xf4le et glissez-les pour connecter un n\u0153ud.",createEdgeError:"Impossible de cr\xe9er un lien vers un cluster.",deleteClusterError:"Les clusters ne peuvent pas \xeatre effac\xe9s.",editClusterError:"Les clusters ne peuvent pas \xeatre \xe9dit\xe9s."},t.fr_FR=t.fr,t.cs={edit:"Upravit",del:"Smazat v\xfdb\u011br",back:"Zp\u011bt",addNode:"P\u0159idat vrchol",addEdge:"P\u0159idat hranu",editNode:"Upravit vrchol",editEdge:"Upravit hranu",addDescription:"Kluknut\xedm do pr\xe1zdn\xe9ho prostoru m\u016f\u017eete p\u0159idat nov\xfd vrchol.",edgeDescription:"P\u0159eta\u017een\xedm z jednoho vrcholu do druh\xe9ho m\u016f\u017eete spojit tyto vrcholy novou hranou.",editEdgeDescription:"P\u0159eta\u017een\xedm kontroln\xedho vrcholu hrany ji m\u016f\u017eete p\u0159ipojit k jin\xe9mu vrcholu.",createEdgeError:"Nelze p\u0159ipojit hranu ke shluku.",deleteClusterError:"Nelze mazat shluky.",editClusterError:"Nelze upravovat shluky."},t.cs_CZ=t.cs})),hh=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};U({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperty:Y.f});var fh=i((function(e){var t=F.Object,n=e.exports=function(e,n,i){return t.defineProperty(e,n,i)};t.defineProperty.sham&&(n.sham=!0)})),ph=fh;function vh(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),ph(e,i.key,i)}}var yh=function(e,t,n){return t&&vh(e.prototype,t),n&&vh(e,n),e},gh=function(){function e(){hh(this,e),this.NUM_ITERATIONS=4,this.image=new Image,this.canvas=document.createElement("canvas")}return yh(e,[{key:"init",value:function(){if(!this.initialized()){this.src=this.image.src;var e=this.image.width,t=this.image.height;this.width=e,this.height=t;var n=Math.floor(t/2),i=Math.floor(t/4),r=Math.floor(t/8),o=Math.floor(t/16),s=Math.floor(e/2),a=Math.floor(e/4),l=Math.floor(e/8),u=Math.floor(e/16);this.canvas.width=3*a,this.canvas.height=n,this.coordinates=[[0,0,s,n],[s,0,a,i],[s,i,l,r],[5*l,i,u,o]],this._fillMipMap()}}},{key:"initialized",value:function(){return void 0!==this.coordinates}},{key:"_fillMipMap",value:function(){var e=this.canvas.getContext("2d"),t=this.coordinates[0];e.drawImage(this.image,t[0],t[1],t[2],t[3]);for(var n=1;n<this.NUM_ITERATIONS;n++){var i=this.coordinates[n-1],r=this.coordinates[n];e.drawImage(this.canvas,i[0],i[1],i[2],i[3],r[0],r[1],r[2],r[3])}}},{key:"drawImageAtPosition",value:function(e,t,n,i,r,o){if(this.initialized())if(t>2){t*=.5;for(var s=0;t>2&&s<this.NUM_ITERATIONS;)t*=.5,s+=1;s>=this.NUM_ITERATIONS&&(s=this.NUM_ITERATIONS-1);var a=this.coordinates[s];e.drawImage(this.canvas,a[0],a[1],a[2],a[3],n,i,r,o)}else e.drawImage(this.image,n,i,r,o)}}]),e}(),mh=function(){function e(t){hh(this,e),this.images={},this.imageBroken={},this.callback=t}return yh(e,[{key:"_tryloadBrokenUrl",value:function(e,t,n){void 0!==e&&void 0!==n&&(void 0!==t?(n.image.onerror=function(){console.error("Could not load brokenImage:",t)},n.image.src=t):console.warn("No broken url image defined"))}},{key:"_redrawWithImage",value:function(e){this.callback&&this.callback(e)}},{key:"load",value:function(e,t){var n=this,i=this.images[e];if(i)return i;var r=new gh;return this.images[e]=r,r.image.onload=function(){n._fixImageCoordinates(r.image),r.init(),n._redrawWithImage(r)},r.image.onerror=function(){console.error("Could not load image:",e),n._tryloadBrokenUrl(e,t,r)},r.image.src=e,r}},{key:"_fixImageCoordinates",value:function(e){0===e.width&&(document.body.appendChild(e),e.width=e.offsetWidth,e.height=e.offsetHeight,document.body.removeChild(e))}}]),e}(),bh=function(){function e(){hh(this,e),this.clear(),this.defaultIndex=0,this.groupsArray=[],this.groupIndex=0,this.defaultGroups=[{border:"#2B7CE9",background:"#97C2FC",highlight:{border:"#2B7CE9",background:"#D2E5FF"},hover:{border:"#2B7CE9",background:"#D2E5FF"}},{border:"#FFA500",background:"#FFFF00",highlight:{border:"#FFA500",background:"#FFFFA3"},hover:{border:"#FFA500",background:"#FFFFA3"}},{border:"#FA0A10",background:"#FB7E81",highlight:{border:"#FA0A10",background:"#FFAFB1"},hover:{border:"#FA0A10",background:"#FFAFB1"}},{border:"#41A906",background:"#7BE141",highlight:{border:"#41A906",background:"#A1EC76"},hover:{border:"#41A906",background:"#A1EC76"}},{border:"#E129F0",background:"#EB7DF4",highlight:{border:"#E129F0",background:"#F0B3F5"},hover:{border:"#E129F0",background:"#F0B3F5"}},{border:"#7C29F0",background:"#AD85E4",highlight:{border:"#7C29F0",background:"#D3BDF0"},hover:{border:"#7C29F0",background:"#D3BDF0"}},{border:"#C37F00",background:"#FFA807",highlight:{border:"#C37F00",background:"#FFCA66"},hover:{border:"#C37F00",background:"#FFCA66"}},{border:"#4220FB",background:"#6E6EFD",highlight:{border:"#4220FB",background:"#9B9BFD"},hover:{border:"#4220FB",background:"#9B9BFD"}},{border:"#FD5A77",background:"#FFC0CB",highlight:{border:"#FD5A77",background:"#FFD1D9"},hover:{border:"#FD5A77",background:"#FFD1D9"}},{border:"#4AD63A",background:"#C2FABC",highlight:{border:"#4AD63A",background:"#E6FFE3"},hover:{border:"#4AD63A",background:"#E6FFE3"}},{border:"#990000",background:"#EE0000",highlight:{border:"#BB0000",background:"#FF3333"},hover:{border:"#BB0000",background:"#FF3333"}},{border:"#FF6000",background:"#FF6000",highlight:{border:"#FF6000",background:"#FF6000"},hover:{border:"#FF6000",background:"#FF6000"}},{border:"#97C2FC",background:"#2B7CE9",highlight:{border:"#D2E5FF",background:"#2B7CE9"},hover:{border:"#D2E5FF",background:"#2B7CE9"}},{border:"#399605",background:"#255C03",highlight:{border:"#399605",background:"#255C03"},hover:{border:"#399605",background:"#255C03"}},{border:"#B70054",background:"#FF007E",highlight:{border:"#B70054",background:"#FF007E"},hover:{border:"#B70054",background:"#FF007E"}},{border:"#AD85E4",background:"#7C29F0",highlight:{border:"#D3BDF0",background:"#7C29F0"},hover:{border:"#D3BDF0",background:"#7C29F0"}},{border:"#4557FA",background:"#000EA1",highlight:{border:"#6E6EFD",background:"#000EA1"},hover:{border:"#6E6EFD",background:"#000EA1"}},{border:"#FFC0CB",background:"#FD5A77",highlight:{border:"#FFD1D9",background:"#FD5A77"},hover:{border:"#FFD1D9",background:"#FD5A77"}},{border:"#C2FABC",background:"#74D66A",highlight:{border:"#E6FFE3",background:"#74D66A"},hover:{border:"#E6FFE3",background:"#74D66A"}},{border:"#EE0000",background:"#990000",highlight:{border:"#FF3333",background:"#BB0000"},hover:{border:"#FF3333",background:"#BB0000"}}],this.options={},this.defaultOptions={useDefaultGroups:!0},es(this.options,this.defaultOptions)}return yh(e,[{key:"setOptions",value:function(e){var t=["useDefaultGroups"];if(void 0!==e)for(var n in e)if(e.hasOwnProperty(n)&&-1===Cu(t).call(t,n)){var i=e[n];this.add(n,i)}}},{key:"clear",value:function(){this.groups={},this.groupsArray=[]}},{key:"get",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this.groups[e];if(void 0===n&&t)if(!1===this.options.useDefaultGroups&&this.groupsArray.length>0){var i=this.groupIndex%this.groupsArray.length;this.groupIndex++,(n={}).color=this.groups[this.groupsArray[i]],this.groups[e]=n}else{var r=this.defaultIndex%this.defaultGroups.length;this.defaultIndex++,(n={}).color=this.defaultGroups[r],this.groups[e]=n}return n}},{key:"add",value:function(e,t){return this.groups[e]=t,this.groupsArray.push(e),t}}]),e}(),wh=[].slice,_h=/MSIE .\./.test(Jl),kh=function(e){return function(t,n){var i=arguments.length>2,r=i?wh.call(arguments,2):void 0;return e(i?function(){("function"==typeof t?t:Function(t)).apply(this,r)}:t,n)}};U({global:!0,bind:!0,forced:_h},{setTimeout:kh(o.setTimeout),setInterval:kh(o.setInterval)});var xh=F.setTimeout,Sh=function(e){return function(t,n){var i,r,o=String(y(t)),s=La(n),a=o.length;return s<0||s>=a?e?"":void 0:(i=o.charCodeAt(s))<55296||i>56319||s+1===a||(r=o.charCodeAt(s+1))<56320||r>57343?e?o.charAt(s):i:e?o.slice(s,s+2):r-56320+(i-55296<<10)+65536}},Oh=(Sh(!1),Sh(!0)),Eh=_a.set,Th=_a.getterFor("String Iterator");kl(String,"String",(function(e){Eh(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=Th(this),n=t.string,i=t.index;return i>=n.length?{value:void 0,done:!0}:(e=Oh(n,i),t.index+=e.length,{value:e,done:!1})}));var Mh=Na("iterator"),Dh=function(e){if(null!=e)return e[Mh]||e["@@iterator"]||Qs[ul(e)]},Ch=function(e){var t=Dh(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return L(t.call(e))},Ph=Al.some,Nh=Fl("some"),Ih=zl("some");U({target:"Array",proto:!0,forced:!Nh||!Ih},{some:function(e){return Ph(this,e,arguments.length>1?arguments[1]:void 0)}});var Ah=Z("Array").some,Fh=Array.prototype,Rh=s((function(){Za(1)}));U({target:"Object",stat:!0,forced:Rh},{keys:function(e){return Za(ka(e))}});var jh=F.Object.keys,Lh="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof e?e:"undefined"!=typeof self?self:{};function zh(e,t){return e(t={exports:{}},t.exports),t.exports}var Yh=function(e){return e&&e.Math==Math&&e},Bh=Yh("object"==typeof globalThis&&globalThis)||Yh("object"==typeof window&&window)||Yh("object"==typeof self&&self)||Yh("object"==typeof Lh&&Lh)||Function("return this")(),Hh=function(e){try{return!!e()}catch(e){return!0}},Wh=!Hh((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Uh={}.propertyIsEnumerable,Vh=Object.getOwnPropertyDescriptor,Gh={f:Vh&&!Uh.call({1:2},1)?function(e){var t=Vh(this,e);return!!t&&t.enumerable}:Uh},qh=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},$h={}.toString,Zh=function(e){return $h.call(e).slice(8,-1)},Qh="".split,Xh=Hh((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==Zh(e)?Qh.call(e,""):Object(e)}:Object,Kh=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},Jh=function(e){return Xh(Kh(e))},ef=function(e){return"object"==typeof e?null!==e:"function"==typeof e},tf=function(e,t){if(!ef(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!ef(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!ef(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!ef(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")},nf={}.hasOwnProperty,rf=function(e,t){return nf.call(e,t)},of=Bh.document,sf=ef(of)&&ef(of.createElement),af=function(e){return sf?of.createElement(e):{}},lf=!Wh&&!Hh((function(){return 7!=Object.defineProperty(af("div"),"a",{get:function(){return 7}}).a})),uf=Object.getOwnPropertyDescriptor,cf={f:Wh?uf:function(e,t){if(e=Jh(e),t=tf(t,!0),lf)try{return uf(e,t)}catch(e){}if(rf(e,t))return qh(!Gh.f.call(e,t),e[t])}},df=/#|\.prototype\./,hf=function(e,t){var n=pf[ff(e)];return n==yf||n!=vf&&("function"==typeof t?Hh(t):!!t)},ff=hf.normalize=function(e){return String(e).replace(df,".").toLowerCase()},pf=hf.data={},vf=hf.NATIVE="N",yf=hf.POLYFILL="P",gf=hf,mf={},bf=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},wf=function(e,t,n){if(bf(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}},_f=function(e){if(!ef(e))throw TypeError(String(e)+" is not an object");return e},kf=Object.defineProperty,xf={f:Wh?kf:function(e,t,n){if(_f(e),t=tf(t,!0),_f(n),lf)try{return kf(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},Sf=Wh?function(e,t,n){return xf.f(e,t,qh(1,n))}:function(e,t,n){return e[t]=n,e},Of=cf.f,Ef=function(e){var t=function(t,n,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,i)}return e.apply(this,arguments)};return t.prototype=e.prototype,t},Tf=function(e,t){var n,i,r,o,s,a,l,u,c=e.target,d=e.global,h=e.stat,f=e.proto,p=d?Bh:h?Bh[c]:(Bh[c]||{}).prototype,v=d?mf:mf[c]||(mf[c]={}),y=v.prototype;for(r in t)n=!gf(d?r:c+(h?".":"#")+r,e.forced)&&p&&rf(p,r),s=v[r],n&&(a=e.noTargetGet?(u=Of(p,r))&&u.value:p[r]),o=n&&a?a:t[r],n&&typeof s==typeof o||(l=e.bind&&n?wf(o,Bh):e.wrap&&n?Ef(o):f&&"function"==typeof o?wf(Function.call,o):o,(e.sham||o&&o.sham||s&&s.sham)&&Sf(l,"sham",!0),v[r]=l,f&&(rf(mf,i=c+"Prototype")||Sf(mf,i,{}),mf[i][r]=o,e.real&&y&&!y[r]&&Sf(y,r,o)))};Tf({target:"Object",stat:!0,forced:!Wh,sham:!Wh},{defineProperty:xf.f});var Mf=zh((function(e){var t=mf.Object,n=e.exports=function(e,n,i){return t.defineProperty(e,n,i)};t.defineProperty.sham&&(n.sham=!0)})),Df=Mf,Cf=Math.ceil,Pf=Math.floor,Nf=function(e){return isNaN(e=+e)?0:(e>0?Pf:Cf)(e)},If=Math.min,Af=function(e){return e>0?If(Nf(e),9007199254740991):0},Ff=Math.max,Rf=Math.min,jf=function(e,t){var n=Nf(e);return n<0?Ff(n+t,0):Rf(n,t)},Lf=function(e){return function(t,n,i){var r,o=Jh(t),s=Af(o.length),a=jf(i,s);if(e&&n!=n){for(;s>a;)if((r=o[a++])!=r)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===n)return e||a||0;return!e&&-1}},zf={includes:Lf(!0),indexOf:Lf(!1)},Yf={},Bf=zf.indexOf,Hf=function(e,t){var n,i=Jh(e),r=0,o=[];for(n in i)!rf(Yf,n)&&rf(i,n)&&o.push(n);for(;t.length>r;)rf(i,n=t[r++])&&(~Bf(o,n)||o.push(n));return o},Wf=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Uf=Object.keys||function(e){return Hf(e,Wf)},Vf=Wh?Object.defineProperties:function(e,t){_f(e);for(var n,i=Uf(t),r=i.length,o=0;r>o;)xf.f(e,n=i[o++],t[n]);return e};Tf({target:"Object",stat:!0,forced:!Wh,sham:!Wh},{defineProperties:Vf});var Gf=zh((function(e){var t=mf.Object,n=e.exports=function(e,n){return t.defineProperties(e,n)};t.defineProperties.sham&&(n.sham=!0)})),qf=function(e){return"function"==typeof e?e:void 0},$f=function(e,t){return arguments.length<2?qf(mf[e])||qf(Bh[e]):mf[e]&&mf[e][t]||Bh[e]&&Bh[e][t]},Zf=Wf.concat("length","prototype"),Qf={f:Object.getOwnPropertyNames||function(e){return Hf(e,Zf)}},Xf={f:Object.getOwnPropertySymbols},Kf=$f("Reflect","ownKeys")||function(e){var t=Qf.f(_f(e)),n=Xf.f;return n?t.concat(n(e)):t},Jf=function(e,t,n){var i=tf(t);i in e?xf.f(e,i,qh(0,n)):e[i]=n};Tf({target:"Object",stat:!0,sham:!Wh},{getOwnPropertyDescriptors:function(e){for(var t,n,i=Jh(e),r=cf.f,o=Kf(i),s={},a=0;o.length>a;)void 0!==(n=r(i,t=o[a++]))&&Jf(s,t,n);return s}});var ep=mf.Object.getOwnPropertyDescriptors,tp={},np=Bh["__core-js_shared__"]||function(e,t){try{Sf(Bh,e,t)}catch(i){Bh[e]=t}return t}("__core-js_shared__",{}),ip=Function.toString;"function"!=typeof np.inspectSource&&(np.inspectSource=function(e){return ip.call(e)});var rp,op,sp,ap=np.inspectSource,lp=Bh.WeakMap,up="function"==typeof lp&&/native code/.test(ap(lp)),cp=zh((function(e){(e.exports=function(e,t){return np[e]||(np[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.3",mode:"pure",copyright:"\xa9 2020 Denis Pushkarev (zloirock.ru)"})})),dp=0,hp=Math.random(),fp=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++dp+hp).toString(36)},pp=cp("keys"),vp=function(e){return pp[e]||(pp[e]=fp(e))},yp=Bh.WeakMap;if(up){var gp=new yp,mp=gp.get,bp=gp.has,wp=gp.set;rp=function(e,t){return wp.call(gp,e,t),t},op=function(e){return mp.call(gp,e)||{}},sp=function(e){return bp.call(gp,e)}}else{var _p=vp("state");Yf[_p]=!0,rp=function(e,t){return Sf(e,_p,t),t},op=function(e){return rf(e,_p)?e[_p]:{}},sp=function(e){return rf(e,_p)}}var kp,xp,Sp,Op={set:rp,get:op,has:sp,enforce:function(e){return sp(e)?op(e):rp(e,{})},getterFor:function(e){return function(t){var n;if(!ef(t)||(n=op(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},Ep=function(e){return Object(Kh(e))},Tp=!Hh((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Mp=vp("IE_PROTO"),Dp=Object.prototype,Cp=Tp?Object.getPrototypeOf:function(e){return e=Ep(e),rf(e,Mp)?e[Mp]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?Dp:null},Pp=!!Object.getOwnPropertySymbols&&!Hh((function(){return!String(Symbol())})),Np=Pp&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Ip=cp("wks"),Ap=Bh.Symbol,Fp=Np?Ap:Ap&&Ap.withoutSetter||fp,Rp=function(e){return rf(Ip,e)||(Pp&&rf(Ap,e)?Ip[e]=Ap[e]:Ip[e]=Fp("Symbol."+e)),Ip[e]},jp=(Rp("iterator"),!1);[].keys&&("next"in(Sp=[].keys())?(xp=Cp(Cp(Sp)))!==Object.prototype&&(kp=xp):jp=!0),null==kp&&(kp={});var Lp,zp={IteratorPrototype:kp,BUGGY_SAFARI_ITERATORS:jp},Yp=$f("document","documentElement"),Bp=vp("IE_PROTO"),Hp=function(){},Wp=function(e){return"<script>"+e+"<\/script>"},Up=function(){try{Lp=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;Up=Lp?function(e){e.write(Wp("")),e.close();var t=e.parentWindow.Object;return e=null,t}(Lp):((t=af("iframe")).style.display="none",Yp.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Wp("document.F=Object")),e.close(),e.F);for(var n=Wf.length;n--;)delete Up.prototype[Wf[n]];return Up()};Yf[Bp]=!0;var Vp=Object.create||function(e,t){var n;return null!==e?(Hp.prototype=_f(e),n=new Hp,Hp.prototype=null,n[Bp]=e):n=Up(),void 0===t?n:Vf(n,t)},Gp={};Gp[Rp("toStringTag")]="z";var qp="[object z]"===String(Gp),$p=Rp("toStringTag"),Zp="Arguments"==Zh(function(){return arguments}()),Qp=qp?Zh:function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),$p))?n:Zp?Zh(t):"Object"==(i=Zh(t))&&"function"==typeof t.callee?"Arguments":i},Xp=qp?{}.toString:function(){return"[object "+Qp(this)+"]"},Kp=xf.f,Jp=Rp("toStringTag"),ev=function(e,t,n,i){if(e){var r=n?e:e.prototype;rf(r,Jp)||Kp(r,Jp,{configurable:!0,value:t}),i&&!qp&&Sf(r,"toString",Xp)}},tv=zp.IteratorPrototype,nv=function(){return this},iv=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return _f(n),function(e){if(!ef(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype")}(i),t?e.call(n,i):n.__proto__=i,n}}():void 0),rv=function(e,t,n,i){i&&i.enumerable?e[t]=n:Sf(e,t,n)},ov=zp.IteratorPrototype,sv=zp.BUGGY_SAFARI_ITERATORS,av=Rp("iterator"),lv=function(){return this},uv=function(e,t,n,i,r,o,s){!function(e,t,n){var i=t+" Iterator";e.prototype=Vp(tv,{next:qh(1,n)}),ev(e,i,!1,!0),tp[i]=nv}(n,t,i);var a,l,u,c=function(e){if(e===r&&v)return v;if(!sv&&e in f)return f[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},d=t+" Iterator",h=!1,f=e.prototype,p=f[av]||f["@@iterator"]||r&&f[r],v=!sv&&p||c(r),y="Array"==t&&f.entries||p;if(y&&(a=Cp(y.call(new e)),ov!==Object.prototype&&a.next&&(ev(a,d,!0,!0),tp[d]=lv)),"values"==r&&p&&"values"!==p.name&&(h=!0,v=function(){return p.call(this)}),s&&f[av]!==v&&Sf(f,av,v),tp[t]=v,r)if(l={values:c("values"),keys:o?v:c("keys"),entries:c("entries")},s)for(u in l)!sv&&!h&&u in f||rv(f,u,l[u]);else Tf({target:t,proto:!0,forced:sv||h},l);return l},cv=Op.set,dv=Op.getterFor("Array Iterator");uv(Array,"Array",(function(e,t){cv(this,{type:"Array Iterator",target:Jh(e),index:0,kind:t})}),(function(){var e=dv(this),t=e.target,n=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:i,done:!1}:"values"==n?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),tp.Arguments=tp.Array;var hv=Rp("toStringTag");for(var fv in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var pv=Bh[fv],vv=pv&&pv.prototype;vv&&Qp(vv)!==hv&&Sf(vv,hv,fv),tp[fv]=tp.Array}var yv=Array.isArray||function(e){return"Array"==Zh(e)},gv=Rp("species"),mv=function(e,t){var n;return yv(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!yv(n.prototype)?ef(n)&&null===(n=n[gv])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},bv=[].push,wv=function(e){var t=1==e,n=2==e,i=3==e,r=4==e,o=6==e,s=5==e||o;return function(a,l,u,c){for(var d,h,f=Ep(a),p=Xh(f),v=wf(l,u,3),y=Af(p.length),g=0,m=c||mv,b=t?m(a,y):n?m(a,0):void 0;y>g;g++)if((s||g in p)&&(h=v(d=p[g],g,f),e))if(t)b[g]=h;else if(h)switch(e){case 3:return!0;case 5:return d;case 6:return g;case 2:bv.call(b,d)}else if(r)return!1;return o?-1:i||r?r:b}},_v={forEach:wv(0),map:wv(1),filter:wv(2),some:wv(3),every:wv(4),find:wv(5),findIndex:wv(6)},kv=function(e,t){var n=[][e];return!!n&&Hh((function(){n.call(null,t||function(){throw 1},1)}))},xv=Object.defineProperty,Sv=function(e){throw e},Ov=function(e,t){t||(t={});var n=[][e],i=!!rf(t,"ACCESSORS")&&t.ACCESSORS,r=rf(t,0)?t[0]:Sv,o=rf(t,1)?t[1]:void 0;return!!n&&!Hh((function(){if(i&&!Wh)return!0;var e={length:-1},t=function(t){i?xv(e,t,{enumerable:!0,get:Sv}):e[t]=1};t(1),t(2147483646),t(4294967294),n.call(e,r,o)}))},Ev=_v.forEach,Tv=kv("forEach"),Mv=Ov("forEach"),Dv=Tv&&Mv?[].forEach:function(e){return Ev(this,e,arguments.length>1?arguments[1]:void 0)};Tf({target:"Array",proto:!0,forced:[].forEach!=Dv},{forEach:Dv});var Cv=function(e){return mf[e+"Prototype"]},Pv=Cv("Array").forEach,Nv=Array.prototype,Iv={DOMTokenList:!0,NodeList:!0},Av=function(e){var t=e.forEach;return e===Nv||e instanceof Array&&t===Nv.forEach||Iv.hasOwnProperty(Qp(e))?Pv:t},Fv=cf.f,Rv=Hh((function(){Fv(1)}));Tf({target:"Object",stat:!0,forced:!Wh||Rv,sham:!Wh},{getOwnPropertyDescriptor:function(e,t){return Fv(Jh(e),t)}});var jv=zh((function(e){var t=mf.Object,n=e.exports=function(e,n){return t.getOwnPropertyDescriptor(e,n)};t.getOwnPropertyDescriptor.sham&&(n.sham=!0)})),Lv=Qf.f,zv={}.toString,Yv="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Bv={f:function(e){return Yv&&"[object Window]"==zv.call(e)?function(e){try{return Lv(e)}catch(e){return Yv.slice()}}(e):Lv(Jh(e))}},Hv={f:Rp},Wv=xf.f,Uv=function(e){var t=mf.Symbol||(mf.Symbol={});rf(t,e)||Wv(t,e,{value:Hv.f(e)})},Vv=_v.forEach,Gv=vp("hidden"),qv=Rp("toPrimitive"),$v=Op.set,Zv=Op.getterFor("Symbol"),Qv=Object.prototype,Xv=Bh.Symbol,Kv=$f("JSON","stringify"),Jv=cf.f,ey=xf.f,ty=Bv.f,ny=Gh.f,iy=cp("symbols"),ry=cp("op-symbols"),oy=cp("string-to-symbol-registry"),sy=cp("symbol-to-string-registry"),ay=cp("wks"),ly=Bh.QObject,uy=!ly||!ly.prototype||!ly.prototype.findChild,cy=Wh&&Hh((function(){return 7!=Vp(ey({},"a",{get:function(){return ey(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=Jv(Qv,t);i&&delete Qv[t],ey(e,t,n),i&&e!==Qv&&ey(Qv,t,i)}:ey,dy=function(e,t){var n=iy[e]=Vp(Xv.prototype);return $v(n,{type:"Symbol",tag:e,description:t}),Wh||(n.description=t),n},hy=Np?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof Xv},fy=function e(t,n,i){t===Qv&&e(ry,n,i),_f(t);var r=tf(n,!0);return _f(i),rf(iy,r)?(i.enumerable?(rf(t,Gv)&&t[Gv][r]&&(t[Gv][r]=!1),i=Vp(i,{enumerable:qh(0,!1)})):(rf(t,Gv)||ey(t,Gv,qh(1,{})),t[Gv][r]=!0),cy(t,r,i)):ey(t,r,i)},py=function(e,t){_f(e);var n=Jh(t),i=Uf(n).concat(my(n));return Vv(i,(function(t){Wh&&!vy.call(n,t)||fy(e,t,n[t])})),e},vy=function(e){var t=tf(e,!0),n=ny.call(this,t);return!(this===Qv&&rf(iy,t)&&!rf(ry,t))&&(!(n||!rf(this,t)||!rf(iy,t)||rf(this,Gv)&&this[Gv][t])||n)},yy=function(e,t){var n=Jh(e),i=tf(t,!0);if(n!==Qv||!rf(iy,i)||rf(ry,i)){var r=Jv(n,i);return!r||!rf(iy,i)||rf(n,Gv)&&n[Gv][i]||(r.enumerable=!0),r}},gy=function(e){var t=ty(Jh(e)),n=[];return Vv(t,(function(e){rf(iy,e)||rf(Yf,e)||n.push(e)})),n},my=function(e){var t=e===Qv,n=ty(t?ry:Jh(e)),i=[];return Vv(n,(function(e){!rf(iy,e)||t&&!rf(Qv,e)||i.push(iy[e])})),i};if(Pp||(rv((Xv=function(){if(this instanceof Xv)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=fp(e),n=function e(n){this===Qv&&e.call(ry,n),rf(this,Gv)&&rf(this[Gv],t)&&(this[Gv][t]=!1),cy(this,t,qh(1,n))};return Wh&&uy&&cy(Qv,t,{configurable:!0,set:n}),dy(t,e)}).prototype,"toString",(function(){return Zv(this).tag})),rv(Xv,"withoutSetter",(function(e){return dy(fp(e),e)})),Gh.f=vy,xf.f=fy,cf.f=yy,Qf.f=Bv.f=gy,Xf.f=my,Hv.f=function(e){return dy(Rp(e),e)},Wh&&ey(Xv.prototype,"description",{configurable:!0,get:function(){return Zv(this).description}})),Tf({global:!0,wrap:!0,forced:!Pp,sham:!Pp},{Symbol:Xv}),Vv(Uf(ay),(function(e){Uv(e)})),Tf({target:"Symbol",stat:!0,forced:!Pp},{for:function(e){var t=String(e);if(rf(oy,t))return oy[t];var n=Xv(t);return oy[t]=n,sy[n]=t,n},keyFor:function(e){if(!hy(e))throw TypeError(e+" is not a symbol");if(rf(sy,e))return sy[e]},useSetter:function(){uy=!0},useSimple:function(){uy=!1}}),Tf({target:"Object",stat:!0,forced:!Pp,sham:!Wh},{create:function(e,t){return void 0===t?Vp(e):py(Vp(e),t)},defineProperty:fy,defineProperties:py,getOwnPropertyDescriptor:yy}),Tf({target:"Object",stat:!0,forced:!Pp},{getOwnPropertyNames:gy,getOwnPropertySymbols:my}),Tf({target:"Object",stat:!0,forced:Hh((function(){Xf.f(1)}))},{getOwnPropertySymbols:function(e){return Xf.f(Ep(e))}}),Kv){var by=!Pp||Hh((function(){var e=Xv();return"[null]"!=Kv([e])||"{}"!=Kv({a:e})||"{}"!=Kv(Object(e))}));Tf({target:"JSON",stat:!0,forced:by},{stringify:function(e,t,n){for(var i,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(i=t,(ef(t)||void 0!==e)&&!hy(e))return yv(t)||(t=function(e,t){if("function"==typeof i&&(t=i.call(this,e,t)),!hy(t))return t}),r[1]=t,Kv.apply(null,r)}})}Xv.prototype[qv]||Sf(Xv.prototype,qv,Xv.prototype.valueOf),ev(Xv,"Symbol"),Yf[Gv]=!0;var wy=mf.Object.getOwnPropertySymbols,_y=Cv("Array").entries,ky=Array.prototype,xy={DOMTokenList:!0,NodeList:!0},Sy=[].slice,Oy={},Ey=function(e,t,n){if(!(t in Oy)){for(var i=[],r=0;r<t;r++)i[r]="a["+r+"]";Oy[t]=Function("C,a","return new C("+i.join(",")+")")}return Oy[t](e,n)},Ty=Function.bind||function(e){var t=bf(this),n=Sy.call(arguments,1),i=function i(){var r=n.concat(Sy.call(arguments));return this instanceof i?Ey(t,r.length,r):t.apply(e,r)};return ef(t.prototype)&&(i.prototype=t.prototype),i};Tf({target:"Function",proto:!0},{bind:Ty});var My=Cv("Function").bind,Dy=Function.prototype,Cy=function(e){var t=e.bind;return e===Dy||e instanceof Function&&t===Dy.bind?My:t},Py=zh((function(e){var t=function(e){var t,n=Object.prototype,i=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function l(e,t,n,i){var r=t&&t.prototype instanceof v?t:v,o=Object.create(r.prototype),s=new T(i||[]);return o._invoke=function(e,t,n){var i=c;return function(r,o){if(i===h)throw new Error("Generator is already running");if(i===f){if("throw"===r)throw o;return D()}for(n.method=r,n.arg=o;;){var s=n.delegate;if(s){var a=S(s,n);if(a){if(a===p)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===c)throw i=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=h;var l=u(e,t,n);if("normal"===l.type){if(i=n.done?f:d,l.arg===p)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i=f,n.method="throw",n.arg=l.arg)}}}(e,n,s),o}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var c="suspendedStart",d="suspendedYield",h="executing",f="completed",p={};function v(){}function y(){}function g(){}var m={};m[o]=function(){return this};var b=Object.getPrototypeOf,w=b&&b(b(M([])));w&&w!==n&&i.call(w,o)&&(m=w);var _=g.prototype=v.prototype=Object.create(m);function k(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function x(e){var t;this._invoke=function(n,r){function o(){return new Promise((function(t,o){!function t(n,r,o,s){var a=u(e[n],e,r);if("throw"!==a.type){var l=a.arg,c=l.value;return c&&"object"==typeof c&&i.call(c,"__await")?Promise.resolve(c.__await).then((function(e){t("next",e,o,s)}),(function(e){t("throw",e,o,s)})):Promise.resolve(c).then((function(e){l.value=e,o(l)}),(function(e){return t("throw",e,o,s)}))}s(a.arg)}(n,r,t,o)}))}return t=t?t.then(o,o):o()}}function S(e,n){var i=e.iterator[n.method];if(i===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,S(e,n),"throw"===n.method))return p;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=u(i,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,p;var o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,p):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,p)}function O(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(O,this),this.reset(!0)}function M(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,s=function n(){for(;++r<e.length;)if(i.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=t,n.done=!0,n};return s.next=s}}return{next:D}}function D(){return{value:t,done:!0}}return y.prototype=_.constructor=g,g.constructor=y,g[a]=y.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,a in e||(e[a]="GeneratorFunction")),e.prototype=Object.create(_),e},e.awrap=function(e){return{__await:e}},k(x.prototype),x.prototype[s]=function(){return this},e.AsyncIterator=x,e.async=function(t,n,i,r){var o=new x(l(t,n,i,r));return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},k(_),_[a]="Generator",_[o]=function(){return this},_.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},e.values=M,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(E),!e)for(var n in this)"t"===n.charAt(0)&&i.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(i,r){return a.type="throw",a.arg=e,n.next=i,r&&(n.method="next",n.arg=t),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o],a=s.completion;if("root"===s.tryLoc)return r("end");if(s.tryLoc<=this.prev){var l=i.call(s,"catchLoc"),u=i.call(s,"finallyLoc");if(l&&u){if(this.prev<s.catchLoc)return r(s.catchLoc,!0);if(this.prev<s.finallyLoc)return r(s.finallyLoc)}else if(l){if(this.prev<s.catchLoc)return r(s.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return r(s.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&i.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var r=i.arg;E(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,i){return this.delegate={iterator:M(e),resultName:n,nextLoc:i},"next"===this.method&&(this.arg=t),p}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}}));Uv("iterator");var Ny=function(e){return function(t,n){var i,r,o=String(Kh(t)),s=Nf(n),a=o.length;return s<0||s>=a?e?"":void 0:(i=o.charCodeAt(s))<55296||i>56319||s+1===a||(r=o.charCodeAt(s+1))<56320||r>57343?e?o.charAt(s):i:e?o.slice(s,s+2):r-56320+(i-55296<<10)+65536}},Iy=(Ny(!1),Ny(!0)),Ay=Op.set,Fy=Op.getterFor("String Iterator");uv(String,"String",(function(e){Ay(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=Fy(this),n=t.string,i=t.index;return i>=n.length?{value:void 0,done:!0}:(e=Iy(n,i),t.index+=e.length,{value:e,done:!1})}));var Ry=Hv.f("iterator"),jy=Ry,Ly=$f("JSON","stringify"),zy=/[\uD800-\uDFFF]/g,Yy=/^[\uD800-\uDBFF]$/,By=/^[\uDC00-\uDFFF]$/,Hy=function(e,t,n){var i=n.charAt(t-1),r=n.charAt(t+1);return Yy.test(e)&&!By.test(r)||By.test(e)&&!Yy.test(i)?"\\u"+e.charCodeAt(0).toString(16):e},Wy=Hh((function(){return'"\\udf06\\ud834"'!==Ly("\udf06\ud834")||'"\\udead"'!==Ly("\udead")}));Ly&&Tf({target:"JSON",stat:!0,forced:Wy},{stringify:function(e,t,n){var i=Ly.apply(null,arguments);return"string"==typeof i?i.replace(zy,Hy):i}}),mf.JSON||(mf.JSON={stringify:JSON.stringify});var Uy=Mf,Vy=function(e,t,n){return t in e?Uy(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},Gy=Cv("Array").values,qy=Array.prototype,$y={DOMTokenList:!0,NodeList:!0},Zy=function(e){var t=e.values;return e===qy||e instanceof Array&&t===qy.values||$y.hasOwnProperty(Qp(e))?Gy:t},Qy=Rp("iterator"),Xy=function(e){if(null!=e)return e[Qy]||e["@@iterator"]||tp[Qp(e)]},Ky=function(e){var t=Xy(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return _f(t.call(e))},Jy=[],eg=Jy.sort,tg=Hh((function(){Jy.sort(void 0)})),ng=Hh((function(){Jy.sort(null)})),ig=kv("sort");Tf({target:"Array",proto:!0,forced:tg||!ng||!ig},{sort:function(e){return void 0===e?eg.call(Ep(this)):eg.call(Ep(this),bf(e))}});var rg=Cv("Array").sort,og=Array.prototype,sg=function(e){var t=e.sort;return e===og||e instanceof Array&&t===og.sort?rg:t},ag=function(e){return function(t,n,i,r){bf(n);var o=Ep(t),s=Xh(o),a=Af(o.length),l=e?a-1:0,u=e?-1:1;if(i<2)for(;;){if(l in s){r=s[l],l+=u;break}if(l+=u,e?l<0:a<=l)throw TypeError("Reduce of empty array with no initial value")}for(;e?l>=0:a>l;l+=u)l in s&&(r=n(r,s[l],l,o));return r}},lg=[ag(!1),ag(!0)][0],ug=kv("reduce"),cg=Ov("reduce",{1:0});Tf({target:"Array",proto:!0,forced:!ug||!cg},{reduce:function(e){return lg(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}});var dg=Cv("Array").reduce,hg=Array.prototype,fg=Cv("Array").keys,pg=Array.prototype,vg={DOMTokenList:!0,NodeList:!0},yg=function(e){var t=e.keys;return e===pg||e instanceof Array&&t===pg.keys||vg.hasOwnProperty(Qp(e))?fg:t};Tf({target:"Array",stat:!0},{isArray:yv});var gg=mf.Array.isArray,mg=gg,bg=function(e,t,n,i){try{return i?t(_f(n)[0],n[1]):t(n)}catch(t){var r=e.return;throw void 0!==r&&_f(r.call(e)),t}},wg=Rp("iterator"),_g=Array.prototype,kg=function(e){return void 0!==e&&(tp.Array===e||_g[wg]===e)},xg=Rp("iterator"),Sg=!1;try{var Og=0,Eg={next:function(){return{done:!!Og++}},return:function(){Sg=!0}};Eg[xg]=function(){return this},Array.from(Eg,(function(){throw 2}))}catch(n){}var Tg=!function(e,t){if(!Sg)return!1;var n=!1;try{var i={};i[xg]=function(){return{next:function(){return{done:n=!0}}}},function(e){Array.from(e)}(i)}catch(e){}return n}();Tf({target:"Array",stat:!0,forced:Tg},{from:function(e){var t,n,i,r,o,s,a=Ep(e),l="function"==typeof this?this:Array,u=arguments.length,c=u>1?arguments[1]:void 0,d=void 0!==c,h=Xy(a),f=0;if(d&&(c=wf(c,u>2?arguments[2]:void 0,2)),null==h||l==Array&&kg(h))for(n=new l(t=Af(a.length));t>f;f++)s=d?c(a[f],f):a[f],Jf(n,f,s);else for(o=(r=h.call(a)).next,n=new l;!(i=o.call(r)).done;f++)s=d?bg(r,c,[i.value,f],!0):i.value,Jf(n,f,s);return n.length=f,n}});var Mg,Dg,Cg=mf.Array.from,Pg=Rp("iterator"),Ng=function(e){var t=Object(e);return void 0!==t[Pg]||"@@iterator"in t||tp.hasOwnProperty(Qp(t))},Ig=function(e){return function(e){if(mg(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Ng(Object(e))||"[object Arguments]"===Object.prototype.toString.call(e))return Cg(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()},Ag=$f("navigator","userAgent")||"",Fg=Bh.process,Rg=Fg&&Fg.versions,jg=Rg&&Rg.v8;jg?Dg=(Mg=jg.split("."))[0]+Mg[1]:Ag&&(!(Mg=Ag.match(/Edge\/(\d+)/))||Mg[1]>=74)&&(Mg=Ag.match(/Chrome\/(\d+)/))&&(Dg=Mg[1]);var Lg=Dg&&+Dg,zg=Rp("species"),Yg=function(e){return Lg>=51||!Hh((function(){var t=[];return(t.constructor={})[zg]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Bg=_v.filter,Hg=Yg("filter"),Wg=Ov("filter");Tf({target:"Array",proto:!0,forced:!Hg||!Wg},{filter:function(e){return Bg(this,e,arguments.length>1?arguments[1]:void 0)}});var Ug=Cv("Array").filter,Vg=Array.prototype,Gg=function(e){var t=e.filter;return e===Vg||e instanceof Array&&t===Vg.filter?Ug:t},qg=Rp("isConcatSpreadable"),$g=Lg>=51||!Hh((function(){var e=[];return e[qg]=!1,e.concat()[0]!==e})),Zg=Yg("concat"),Qg=function(e){if(!ef(e))return!1;var t=e[qg];return void 0!==t?!!t:yv(e)};Tf({target:"Array",proto:!0,forced:!$g||!Zg},{concat:function(e){var t,n,i,r,o,s=Ep(this),a=mv(s,0),l=0;for(t=-1,i=arguments.length;t<i;t++)if(o=-1===t?s:arguments[t],Qg(o)){if(l+(r=Af(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<r;n++,l++)n in o&&Jf(a,l,o[n])}else{if(l>=9007199254740991)throw TypeError("Maximum allowed index exceeded");Jf(a,l++,o)}return a.length=l,a}});var Xg=Cv("Array").concat,Kg=Array.prototype,Jg=function(e){var t=e.concat;return e===Kg||e instanceof Array&&t===Kg.concat?Xg:t},em=Object.assign,tm=Object.defineProperty,nm=!em||Hh((function(){if(Wh&&1!==em({b:1},em(tm({},"a",{enumerable:!0,get:function(){tm(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=em({},e)[n]||"abcdefghijklmnopqrst"!=Uf(em({},t)).join("")}))?function(e,t){for(var n=Ep(e),i=arguments.length,r=1,o=Xf.f,s=Gh.f;i>r;)for(var a,l=Xh(arguments[r++]),u=o?Uf(l).concat(o(l)):Uf(l),c=u.length,d=0;c>d;)a=u[d++],Wh&&!s.call(l,a)||(n[a]=l[a]);return n}:em;Tf({target:"Object",stat:!0,forced:Object.assign!==nm},{assign:nm});var im=mf.Object.assign,rm=_v.some,om=kv("some"),sm=Ov("some");Tf({target:"Array",proto:!0,forced:!om||!sm},{some:function(e){return rm(this,e,arguments.length>1?arguments[1]:void 0)}});var am=Cv("Array").some,lm=Array.prototype,um=_v.map,cm=Yg("map"),dm=Ov("map");Tf({target:"Array",proto:!0,forced:!cm||!dm},{map:function(e){return um(this,e,arguments.length>1?arguments[1]:void 0)}});var hm=Cv("Array").map,fm=Array.prototype,pm=function(e){var t=e.map;return e===fm||e instanceof Array&&t===fm.map?hm:t},vm=Ry;Uv("asyncIterator"),Uv("hasInstance"),Uv("isConcatSpreadable"),Uv("match"),Uv("matchAll"),Uv("replace"),Uv("search"),Uv("species"),Uv("split"),Uv("toPrimitive"),Uv("toStringTag"),Uv("unscopables"),ev(Math,"Math",!0),ev(Bh.JSON,"JSON",!0);var ym=mf.Symbol;Uv("asyncDispose"),Uv("dispose"),Uv("observable"),Uv("patternMatch"),Uv("replaceAll");var gm=ym,mm=zh((function(e){function t(n){return e.exports=t="function"==typeof gm&&"symbol"==typeof vm?function(e){return typeof e}:function(e){return e&&"function"==typeof gm&&e.constructor===gm&&e!==gm.prototype?"symbol":typeof e},t(n)}e.exports=t})),bm=Hh((function(){Uf(1)}));Tf({target:"Object",stat:!0,forced:bm},{keys:function(e){return Uf(Ep(e))}});var wm=mf.Object.keys,_m=!Hh((function(){return Object.isExtensible(Object.preventExtensions({}))})),km=zh((function(e){var t=xf.f,n=fp("meta"),i=0,r=Object.isExtensible||function(){return!0},o=function(e){t(e,n,{value:{objectID:"O"+ ++i,weakData:{}}})},s=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!ef(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!rf(e,n)){if(!r(e))return"F";if(!t)return"E";o(e)}return e[n].objectID},getWeakData:function(e,t){if(!rf(e,n)){if(!r(e))return!0;if(!t)return!1;o(e)}return e[n].weakData},onFreeze:function(e){return _m&&s.REQUIRED&&r(e)&&!rf(e,n)&&o(e),e}};Yf[n]=!0})),xm=(km.REQUIRED,km.fastKey,km.getWeakData,km.onFreeze,zh((function(e){var t=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,n,i,r,o){var s,a,l,u,c,d,h,f=wf(n,i,r?2:1);if(o)s=e;else{if("function"!=typeof(a=Xy(e)))throw TypeError("Target is not iterable");if(kg(a)){for(l=0,u=Af(e.length);u>l;l++)if((c=r?f(_f(h=e[l])[0],h[1]):f(e[l]))&&c instanceof t)return c;return new t(!1)}s=a.call(e)}for(d=s.next;!(h=d.call(s)).done;)if("object"==typeof(c=bg(s,f,h.value,r))&&c&&c instanceof t)return c;return new t(!1)}).stop=function(e){return new t(!0,e)}}))),Sm=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e},Om=xf.f,Em=_v.forEach,Tm=Op.set,Mm=Op.getterFor,Dm=function(e,t,n){var i,r=-1!==e.indexOf("Map"),o=-1!==e.indexOf("Weak"),s=r?"set":"add",a=Bh[e],l=a&&a.prototype,u={};if(Wh&&"function"==typeof a&&(o||l.forEach&&!Hh((function(){(new a).entries().next()})))){i=t((function(t,n){Tm(Sm(t,i,e),{type:e,collection:new a}),null!=n&&xm(n,t[s],t,r)}));var c=Mm(e);Em(["add","clear","delete","forEach","get","has","set","keys","values","entries"],(function(e){var t="add"==e||"set"==e;e in l&&(!o||"clear"!=e)&&Sf(i.prototype,e,(function(n,i){var r=c(this).collection;if(!t&&o&&!ef(n))return"get"==e&&void 0;var s=r[e](0===n?0:n,i);return t?this:s}))})),o||Om(i.prototype,"size",{configurable:!0,get:function(){return c(this).collection.size}})}else i=n.getConstructor(t,e,r,s),km.REQUIRED=!0;return ev(i,e,!1,!0),u[e]=i,Tf({global:!0,forced:!0},u),o||n.setStrong(i,e,r),i},Cm=function(e,t,n){for(var i in t)n&&n.unsafe&&e[i]?e[i]=t[i]:rv(e,i,t[i],n);return e},Pm=Rp("species"),Nm=xf.f,Im=km.fastKey,Am=Op.set,Fm=Op.getterFor,Rm={getConstructor:function(e,t,n,i){var r=e((function(e,o){Sm(e,r,t),Am(e,{type:t,index:Vp(null),first:void 0,last:void 0,size:0}),Wh||(e.size=0),null!=o&&xm(o,e[i],e,n)})),o=Fm(t),s=function(e,t,n){var i,r,s=o(e),l=a(e,t);return l?l.value=n:(s.last=l={index:r=Im(t,!0),key:t,value:n,previous:i=s.last,next:void 0,removed:!1},s.first||(s.first=l),i&&(i.next=l),Wh?s.size++:e.size++,"F"!==r&&(s.index[r]=l)),e},a=function(e,t){var n,i=o(e),r=Im(t);if("F"!==r)return i.index[r];for(n=i.first;n;n=n.next)if(n.key==t)return n};return Cm(r.prototype,{clear:function(){for(var e=o(this),t=e.index,n=e.first;n;)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete t[n.index],n=n.next;e.first=e.last=void 0,Wh?e.size=0:this.size=0},delete:function(e){var t=o(this),n=a(this,e);if(n){var i=n.next,r=n.previous;delete t.index[n.index],n.removed=!0,r&&(r.next=i),i&&(i.previous=r),t.first==n&&(t.first=i),t.last==n&&(t.last=r),Wh?t.size--:this.size--}return!!n},forEach:function(e){for(var t,n=o(this),i=wf(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:n.first;)for(i(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!a(this,e)}}),Cm(r.prototype,n?{get:function(e){var t=a(this,e);return t&&t.value},set:function(e,t){return s(this,0===e?0:e,t)}}:{add:function(e){return s(this,e=0===e?0:e,e)}}),Wh&&Nm(r.prototype,"size",{get:function(){return o(this).size}}),r},setStrong:function(e,t,n){var i=t+" Iterator",r=Fm(t),o=Fm(i);uv(e,t,(function(e,t){Am(this,{type:i,target:e,state:r(e),kind:t,last:void 0})}),(function(){for(var e=o(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?"keys"==t?{value:n.key,done:!1}:"values"==t?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),n?"entries":"values",!n,!0),function(e){var t=$f(e),n=xf.f;Wh&&t&&!t[Pm]&&n(t,Pm,{configurable:!0,get:function(){return this}})}(t)}},jm=(Dm("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),Rm),mf.Map),Lm=gg,zm=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};function Ym(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Uy(e,i.key,i)}}var Bm=function(e,t,n){return t&&Ym(e.prototype,t),n&&Ym(e,n),e},Hm=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e},Wm=function(e,t){return!t||"object"!==mm(t)&&"function"!=typeof t?Hm(e):t},Um=Hh((function(){Cp(1)}));Tf({target:"Object",stat:!0,forced:Um,sham:!Tp},{getPrototypeOf:function(e){return Cp(Ep(e))}});var Vm=mf.Object.getPrototypeOf;Tf({target:"Object",stat:!0},{setPrototypeOf:iv});var Gm=mf.Object.setPrototypeOf,qm=zh((function(e){function t(n){return e.exports=t=Gm?Vm:function(e){return e.__proto__||Vm(e)},t(n)}e.exports=t}));Tf({target:"Object",stat:!0,sham:!Wh},{create:Vp});for(var $m=mf.Object,Zm=function(e,t){return $m.create(e,t)},Qm=Zm,Xm=zh((function(e){function t(n,i){return e.exports=t=Gm||function(e,t){return e.__proto__=t,e},t(n,i)}e.exports=t})),Km=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Qm(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Xm(e,t)},Jm=[],eb=0;eb<256;eb++)Jm[eb]=(eb+256).toString(16).substr(1);for(var tb=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e}}var t=new Array(16);return function(){for(var e,n=0;n<16;n++)0==(3&n)&&(e=4294967296*Math.random()),t[n]=e>>>((3&n)<<3)&255;return t}}(),nb=[],ib=0;ib<256;ib++)nb[ib]=(ib+256).toString(16).substr(1);var rb=tb();rb[0],rb[1],rb[2],rb[3],rb[4],rb[5],rb[6],rb[7];var ob="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof e?e:"undefined"!=typeof self?self:{};function sb(e,t){return e(t={exports:{}},t.exports),t.exports}var ab=function(e){return e&&e.Math==Math&&e},lb=ab("object"==typeof globalThis&&globalThis)||ab("object"==typeof window&&window)||ab("object"==typeof self&&self)||ab("object"==typeof ob&&ob)||Function("return this")(),ub=function(e){try{return!!e()}catch(e){return!0}},cb=!ub((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})),db={}.propertyIsEnumerable,hb=Object.getOwnPropertyDescriptor,fb={f:hb&&!db.call({1:2},1)?function(e){var t=hb(this,e);return!!t&&t.enumerable}:db},pb=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},vb={}.toString,yb=function(e){return vb.call(e).slice(8,-1)},gb="".split,mb=ub((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==yb(e)?gb.call(e,""):Object(e)}:Object,bb=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},wb=function(e){return mb(bb(e))},_b=function(e){return"object"==typeof e?null!==e:"function"==typeof e},kb=function(e,t){if(!_b(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!_b(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!_b(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!_b(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")},xb={}.hasOwnProperty,Sb=function(e,t){return xb.call(e,t)},Ob=lb.document,Eb=_b(Ob)&&_b(Ob.createElement),Tb=function(e){return Eb?Ob.createElement(e):{}},Mb=!cb&&!ub((function(){return 7!=Object.defineProperty(Tb("div"),"a",{get:function(){return 7}}).a})),Db=Object.getOwnPropertyDescriptor,Cb={f:cb?Db:function(e,t){if(e=wb(e),t=kb(t,!0),Mb)try{return Db(e,t)}catch(e){}if(Sb(e,t))return pb(!fb.f.call(e,t),e[t])}},Pb=/#|\.prototype\./,Nb=function(e,t){var n=Ab[Ib(e)];return n==Rb||n!=Fb&&("function"==typeof t?ub(t):!!t)},Ib=Nb.normalize=function(e){return String(e).replace(Pb,".").toLowerCase()},Ab=Nb.data={},Fb=Nb.NATIVE="N",Rb=Nb.POLYFILL="P",jb=Nb,Lb={},zb=function(e,t,n){if(function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function")}(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}},Yb=function(e){if(!_b(e))throw TypeError(String(e)+" is not an object");return e},Bb=Object.defineProperty,Hb={f:cb?Bb:function(e,t,n){if(Yb(e),t=kb(t,!0),Yb(n),Mb)try{return Bb(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},Wb=cb?function(e,t,n){return Hb.f(e,t,pb(1,n))}:function(e,t,n){return e[t]=n,e},Ub=Cb.f,Vb=function(e){var t=function(t,n,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,i)}return e.apply(this,arguments)};return t.prototype=e.prototype,t},Gb=function(e,t){var n,i,r,o,s,a,l,u,c=e.target,d=e.global,h=e.stat,f=e.proto,p=d?lb:h?lb[c]:(lb[c]||{}).prototype,v=d?Lb:Lb[c]||(Lb[c]={}),y=v.prototype;for(r in t)n=!jb(d?r:c+(h?".":"#")+r,e.forced)&&p&&Sb(p,r),s=v[r],n&&(a=e.noTargetGet?(u=Ub(p,r))&&u.value:p[r]),o=n&&a?a:t[r],n&&typeof s==typeof o||(l=e.bind&&n?zb(o,lb):e.wrap&&n?Vb(o):f&&"function"==typeof o?zb(Function.call,o):o,(e.sham||o&&o.sham||s&&s.sham)&&Wb(l,"sham",!0),v[r]=l,f&&(Sb(Lb,i=c+"Prototype")||Wb(Lb,i,{}),Lb[i][r]=o,e.real&&y&&!y[r]&&Wb(y,r,o)))};Gb({target:"Object",stat:!0,forced:!cb,sham:!cb},{defineProperty:Hb.f}),sb((function(e){var t=Lb.Object,n=e.exports=function(e,n,i){return t.defineProperty(e,n,i)};t.defineProperty.sham&&(n.sham=!0)}));var qb=Math.ceil,$b=Math.floor,Zb=function(e){return isNaN(e=+e)?0:(e>0?$b:qb)(e)},Qb=Math.min,Xb=function(e){return e>0?Qb(Zb(e),9007199254740991):0},Kb=Math.max,Jb=Math.min,ew=function(e,t){var n=Zb(e);return n<0?Kb(n+t,0):Jb(n,t)},tw=function(e){return function(t,n,i){var r,o=wb(t),s=Xb(o.length),a=ew(i,s);if(e&&n!=n){for(;s>a;)if((r=o[a++])!=r)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===n)return e||a||0;return!e&&-1}},nw={includes:tw(!0),indexOf:tw(!1)},iw={},rw=nw.indexOf,ow=function(e,t){var n,i=wb(e),r=0,o=[];for(n in i)!Sb(iw,n)&&Sb(i,n)&&o.push(n);for(;t.length>r;)Sb(i,n=t[r++])&&(~rw(o,n)||o.push(n));return o},sw=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],aw=Object.keys||function(e){return ow(e,sw)},lw=cb?Object.defineProperties:function(e,t){Yb(e);for(var n,i=aw(t),r=i.length,o=0;r>o;)Hb.f(e,n=i[o++],t[n]);return e};Gb({target:"Object",stat:!0,forced:!cb,sham:!cb},{defineProperties:lw}),sb((function(e){var t=Lb.Object,n=e.exports=function(e,n){return t.defineProperties(e,n)};t.defineProperties.sham&&(n.sham=!0)}));var uw=function(e){return"function"==typeof e?e:void 0},cw=function(e,t){return arguments.length<2?uw(Lb[e])||uw(lb[e]):Lb[e]&&Lb[e][t]||lb[e]&&lb[e][t]},dw=sw.concat("length","prototype"),hw={f:Object.getOwnPropertyNames||function(e){return ow(e,dw)}},fw={f:Object.getOwnPropertySymbols},pw=cw("Reflect","ownKeys")||function(e){var t=hw.f(Yb(e)),n=fw.f;return n?t.concat(n(e)):t},vw=function(e,t,n){var i=kb(t);i in e?Hb.f(e,i,pb(0,n)):e[i]=n};Gb({target:"Object",stat:!0,sham:!cb},{getOwnPropertyDescriptors:function(e){for(var t,n,i=wb(e),r=Cb.f,o=pw(i),s={},a=0;o.length>a;)void 0!==(n=r(i,t=o[a++]))&&vw(s,t,n);return s}}),Lb.Object.getOwnPropertyDescriptors;var yw=Cb.f,gw=ub((function(){yw(1)}));Gb({target:"Object",stat:!0,forced:!cb||gw,sham:!cb},{getOwnPropertyDescriptor:function(e,t){return yw(wb(e),t)}}),sb((function(e){var t=Lb.Object,n=e.exports=function(e,n){return t.getOwnPropertyDescriptor(e,n)};t.getOwnPropertyDescriptor.sham&&(n.sham=!0)}));var mw=!!Object.getOwnPropertySymbols&&!ub((function(){return!String(Symbol())})),bw=Array.isArray||function(e){return"Array"==yb(e)},ww=function(e){return Object(bb(e))},_w=cw("document","documentElement"),kw=lb["__core-js_shared__"]||function(e,t){try{Wb(lb,e,t)}catch(i){lb[e]=t}return t}("__core-js_shared__",{}),xw=sb((function(e){(e.exports=function(e,t){return kw[e]||(kw[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.4.1",mode:"pure",copyright:"\xa9 2019 Denis Pushkarev (zloirock.ru)"})})),Sw=0,Ow=Math.random(),Ew=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++Sw+Ow).toString(36)},Tw=xw("keys"),Mw=function(e){return Tw[e]||(Tw[e]=Ew(e))},Dw=Mw("IE_PROTO"),Cw=function(){},Pw=function(){var e,t=Tb("iframe"),n=sw.length;for(t.style.display="none",_w.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),Pw=e.F;n--;)delete Pw.prototype[sw[n]];return Pw()},Nw=Object.create||function(e,t){var n;return null!==e?(Cw.prototype=Yb(e),n=new Cw,Cw.prototype=null,n[Dw]=e):n=Pw(),void 0===t?n:lw(n,t)};iw[Dw]=!0;var Iw=hw.f,Aw={}.toString,Fw="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Rw={f:function(e){return Fw&&"[object Window]"==Aw.call(e)?function(e){try{return Iw(e)}catch(e){return Fw.slice()}}(e):Iw(wb(e))}},jw=function(e,t,n,i){i&&i.enumerable?e[t]=n:Wb(e,t,n)},Lw=lb.Symbol,zw=xw("wks"),Yw=function(e){return zw[e]||(zw[e]=mw&&Lw[e]||(mw?Lw:Ew)("Symbol."+e))},Bw={f:Yw},Hw=Hb.f,Ww=function(e){var t=Lb.Symbol||(Lb.Symbol={});Sb(t,e)||Hw(t,e,{value:Bw.f(e)})},Uw=Yw("toStringTag"),Vw="Arguments"==yb(function(){return arguments}()),Gw=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),Uw))?n:Vw?yb(t):"Object"==(i=yb(t))&&"function"==typeof t.callee?"Arguments":i},qw={};qw[Yw("toStringTag")]="z";var $w,Zw,Qw,Xw="[object z]"!==String(qw)?function(){return"[object "+Gw(this)+"]"}:qw.toString,Kw=Hb.f,Jw=Yw("toStringTag"),e_=Xw!=={}.toString,t_=function(e,t,n,i){if(e){var r=n?e:e.prototype;Sb(r,Jw)||Kw(r,Jw,{configurable:!0,value:t}),i&&e_&&Wb(r,"toString",Xw)}},n_=xw("native-function-to-string",Function.toString),i_=lb.WeakMap,r_="function"==typeof i_&&/native code/.test(n_.call(i_)),o_=lb.WeakMap;if(r_){var s_=new o_,a_=s_.get,l_=s_.has,u_=s_.set;$w=function(e,t){return u_.call(s_,e,t),t},Zw=function(e){return a_.call(s_,e)||{}},Qw=function(e){return l_.call(s_,e)}}else{var c_=Mw("state");iw[c_]=!0,$w=function(e,t){return Wb(e,c_,t),t},Zw=function(e){return Sb(e,c_)?e[c_]:{}},Qw=function(e){return Sb(e,c_)}}var d_={set:$w,get:Zw,has:Qw,enforce:function(e){return Qw(e)?Zw(e):$w(e,{})},getterFor:function(e){return function(t){var n;if(!_b(t)||(n=Zw(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},h_=Yw("species"),f_=function(e,t){var n;return bw(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!bw(n.prototype)?_b(n)&&null===(n=n[h_])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},p_=[].push,v_=function(e){var t=1==e,n=2==e,i=3==e,r=4==e,o=6==e,s=5==e||o;return function(a,l,u,c){for(var d,h,f=ww(a),p=mb(f),v=zb(l,u,3),y=Xb(p.length),g=0,m=c||f_,b=t?m(a,y):n?m(a,0):void 0;y>g;g++)if((s||g in p)&&(h=v(d=p[g],g,f),e))if(t)b[g]=h;else if(h)switch(e){case 3:return!0;case 5:return d;case 6:return g;case 2:p_.call(b,d)}else if(r)return!1;return o?-1:i||r?r:b}},y_={forEach:v_(0),map:v_(1),filter:v_(2),some:v_(3),every:v_(4),find:v_(5),findIndex:v_(6)},g_=y_.forEach,m_=Mw("hidden"),b_=Yw("toPrimitive"),w_=d_.set,__=d_.getterFor("Symbol"),k_=Object.prototype,x_=lb.Symbol,S_=cw("JSON","stringify"),O_=Cb.f,E_=Hb.f,T_=Rw.f,M_=fb.f,D_=xw("symbols"),C_=xw("op-symbols"),P_=xw("string-to-symbol-registry"),N_=xw("symbol-to-string-registry"),I_=xw("wks"),A_=lb.QObject,F_=!A_||!A_.prototype||!A_.prototype.findChild,R_=cb&&ub((function(){return 7!=Nw(E_({},"a",{get:function(){return E_(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=O_(k_,t);i&&delete k_[t],E_(e,t,n),i&&e!==k_&&E_(k_,t,i)}:E_,j_=function(e,t){var n=D_[e]=Nw(x_.prototype);return w_(n,{type:"Symbol",tag:e,description:t}),cb||(n.description=t),n},L_=mw&&"symbol"==typeof x_.iterator?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof x_},z_=function e(t,n,i){t===k_&&e(C_,n,i),Yb(t);var r=kb(n,!0);return Yb(i),Sb(D_,r)?(i.enumerable?(Sb(t,m_)&&t[m_][r]&&(t[m_][r]=!1),i=Nw(i,{enumerable:pb(0,!1)})):(Sb(t,m_)||E_(t,m_,pb(1,{})),t[m_][r]=!0),R_(t,r,i)):E_(t,r,i)},Y_=function(e,t){Yb(e);var n=wb(t),i=aw(n).concat(U_(n));return g_(i,(function(t){cb&&!B_.call(n,t)||z_(e,t,n[t])})),e},B_=function(e){var t=kb(e,!0),n=M_.call(this,t);return!(this===k_&&Sb(D_,t)&&!Sb(C_,t))&&(!(n||!Sb(this,t)||!Sb(D_,t)||Sb(this,m_)&&this[m_][t])||n)},H_=function(e,t){var n=wb(e),i=kb(t,!0);if(n!==k_||!Sb(D_,i)||Sb(C_,i)){var r=O_(n,i);return!r||!Sb(D_,i)||Sb(n,m_)&&n[m_][i]||(r.enumerable=!0),r}},W_=function(e){var t=T_(wb(e)),n=[];return g_(t,(function(e){Sb(D_,e)||Sb(iw,e)||n.push(e)})),n},U_=function(e){var t=e===k_,n=T_(t?C_:wb(e)),i=[];return g_(n,(function(e){!Sb(D_,e)||t&&!Sb(k_,e)||i.push(D_[e])})),i};if(mw||(jw((x_=function(){if(this instanceof x_)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=Ew(e),n=function e(n){this===k_&&e.call(C_,n),Sb(this,m_)&&Sb(this[m_],t)&&(this[m_][t]=!1),R_(this,t,pb(1,n))};return cb&&F_&&R_(k_,t,{configurable:!0,set:n}),j_(t,e)}).prototype,"toString",(function(){return __(this).tag})),fb.f=B_,Hb.f=z_,Cb.f=H_,hw.f=Rw.f=W_,fw.f=U_,cb&&E_(x_.prototype,"description",{configurable:!0,get:function(){return __(this).description}}),Bw.f=function(e){return j_(Yw(e),e)}),Gb({global:!0,wrap:!0,forced:!mw,sham:!mw},{Symbol:x_}),g_(aw(I_),(function(e){Ww(e)})),Gb({target:"Symbol",stat:!0,forced:!mw},{for:function(e){var t=String(e);if(Sb(P_,t))return P_[t];var n=x_(t);return P_[t]=n,N_[n]=t,n},keyFor:function(e){if(!L_(e))throw TypeError(e+" is not a symbol");if(Sb(N_,e))return N_[e]},useSetter:function(){F_=!0},useSimple:function(){F_=!1}}),Gb({target:"Object",stat:!0,forced:!mw,sham:!cb},{create:function(e,t){return void 0===t?Nw(e):Y_(Nw(e),t)},defineProperty:z_,defineProperties:Y_,getOwnPropertyDescriptor:H_}),Gb({target:"Object",stat:!0,forced:!mw},{getOwnPropertyNames:W_,getOwnPropertySymbols:U_}),Gb({target:"Object",stat:!0,forced:ub((function(){fw.f(1)}))},{getOwnPropertySymbols:function(e){return fw.f(ww(e))}}),S_){var V_=!mw||ub((function(){var e=x_();return"[null]"!=S_([e])||"{}"!=S_({a:e})||"{}"!=S_(Object(e))}));Gb({target:"JSON",stat:!0,forced:V_},{stringify:function(e,t,n){for(var i,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(i=t,(_b(t)||void 0!==e)&&!L_(e))return bw(t)||(t=function(e,t){if("function"==typeof i&&(t=i.call(this,e,t)),!L_(t))return t}),r[1]=t,S_.apply(null,r)}})}x_.prototype[b_]||Wb(x_.prototype,b_,x_.prototype.valueOf),t_(x_,"Symbol"),iw[m_]=!0,Lb.Object.getOwnPropertySymbols;var G_,q_,$_,Z_={},Q_=!ub((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),X_=Mw("IE_PROTO"),K_=Object.prototype,J_=Q_?Object.getPrototypeOf:function(e){return e=ww(e),Sb(e,X_)?e[X_]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?K_:null},ek=(Yw("iterator"),!1);[].keys&&("next"in($_=[].keys())?(q_=J_(J_($_)))!==Object.prototype&&(G_=q_):ek=!0),null==G_&&(G_={});var tk={IteratorPrototype:G_,BUGGY_SAFARI_ITERATORS:ek},nk=tk.IteratorPrototype,ik=function(){return this},rk=(Object.setPrototypeOf||"__proto__"in{}&&function(){var e={};try{Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set.call(e,[]),e instanceof Array}catch(n){}}(),tk.IteratorPrototype),ok=tk.BUGGY_SAFARI_ITERATORS,sk=Yw("iterator"),ak=function(){return this},lk=function(e,t,n,i,r,o,s){!function(e,t,n){var i=t+" Iterator";e.prototype=Nw(nk,{next:pb(1,n)}),t_(e,i,!1,!0),Z_[i]=ik}(n,t,i);var a,l,u,c=function(e){if(e===r&&v)return v;if(!ok&&e in f)return f[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},d=t+" Iterator",h=!1,f=e.prototype,p=f[sk]||f["@@iterator"]||r&&f[r],v=!ok&&p||c(r),y="Array"==t&&f.entries||p;if(y&&(a=J_(y.call(new e)),rk!==Object.prototype&&a.next&&(t_(a,d,!0,!0),Z_[d]=ak)),"values"==r&&p&&"values"!==p.name&&(h=!0,v=function(){return p.call(this)}),s&&f[sk]!==v&&Wb(f,sk,v),Z_[t]=v,r)if(l={values:c("values"),keys:o?v:c("keys"),entries:c("entries")},s)for(u in l)!ok&&!h&&u in f||jw(f,u,l[u]);else Gb({target:t,proto:!0,forced:ok||h},l);return l},uk=d_.set,ck=d_.getterFor("Array Iterator");lk(Array,"Array",(function(e,t){uk(this,{type:"Array Iterator",target:wb(e),index:0,kind:t})}),(function(){var e=ck(this),t=e.target,n=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:i,done:!1}:"values"==n?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),Z_.Arguments=Z_.Array;var dk=Yw("toStringTag");for(var hk in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var fk=lb[hk],pk=fk&&fk.prototype;pk&&!pk[dk]&&Wb(pk,dk,hk),Z_[hk]=Z_.Array}var vk=function(e){return function(t,n){var i,r,o=String(bb(t)),s=Zb(n),a=o.length;return s<0||s>=a?e?"":void 0:(i=o.charCodeAt(s))<55296||i>56319||s+1===a||(r=o.charCodeAt(s+1))<56320||r>57343?e?o.charAt(s):i:e?o.slice(s,s+2):r-56320+(i-55296<<10)+65536}},yk=(vk(!1),vk(!0)),gk=d_.set,mk=d_.getterFor("String Iterator");lk(String,"String",(function(e){gk(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=mk(this),n=t.string,i=t.index;return i>=n.length?{value:void 0,done:!0}:(e=yk(n,i),t.index+=e.length,{value:e,done:!1})}));var bk=Yw("iterator"),wk=function(e){if(null!=e)return e[bk]||e["@@iterator"]||Z_[Gw(e)]};Gb({target:"Object",stat:!0,sham:!cb},{create:Nw});var _k=ub((function(){aw(1)}));Gb({target:"Object",stat:!0,forced:_k},{keys:function(e){return aw(ww(e))}}),Lb.Object.keys;var kk="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff",xk="["+kk+"]",Sk=RegExp("^"+xk+xk+"*"),Ok=RegExp(xk+xk+"*$"),Ek=function(e){return function(t){var n=String(bb(t));return 1&e&&(n=n.replace(Sk,"")),2&e&&(n=n.replace(Ok,"")),n}},Tk={start:Ek(1),end:Ek(2),trim:Ek(3)},Mk=Tk.trim;Gb({target:"String",proto:!0,forced:function(e){return ub((function(){return!!kk[e]()||"\u200b\x85\u180e"!="\u200b\x85\u180e"[e]()||kk[e].name!==e}))}("trim")},{trim:function(){return Mk(this)}});var Dk=function(e){return Lb[e+"Prototype"]},Ck=(Dk("String").trim,function(e,t){var n=[][e];return!n||!ub((function(){n.call(null,t||function(){throw 1},1)}))}),Pk=y_.forEach,Nk=Ck("forEach")?function(e){return Pk(this,e,arguments.length>1?arguments[1]:void 0)}:[].forEach;Gb({target:"Array",proto:!0,forced:[].forEach!=Nk},{forEach:Nk}),Dk("Array").forEach;var Ik,Ak,Fk=cw("navigator","userAgent")||"",Rk=lb.process,jk=Rk&&Rk.versions,Lk=jk&&jk.v8;Lk?Ak=(Ik=Lk.split("."))[0]+Ik[1]:Fk&&(!(Ik=Fk.match(/Edge\/(\d+)/))||Ik[1]>=74)&&(Ik=Fk.match(/Chrome\/(\d+)/))&&(Ak=Ik[1]);var zk=Ak&&+Ak,Yk=Yw("species"),Bk=function(e){return zk>=51||!ub((function(){var t=[];return(t.constructor={})[Yk]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Hk=y_.map;Gb({target:"Array",proto:!0,forced:!Bk("map")},{map:function(e){return Hk(this,e,arguments.length>1?arguments[1]:void 0)}}),Dk("Array").map;var Wk=Tk.trim,Uk=lb.parseInt,Vk=/^[+-]?0[Xx]/,Gk=8!==Uk(kk+"08")||22!==Uk(kk+"0x16")?function(e,t){var n=Wk(String(e));return Uk(n,t>>>0||(Vk.test(n)?16:10))}:Uk;Gb({global:!0,forced:parseInt!=Gk},{parseInt:Gk});var qk=fb.f,$k=function(e){return function(t){for(var n,i=wb(t),r=aw(i),o=r.length,s=0,a=[];o>s;)n=r[s++],cb&&!qk.call(i,n)||a.push(e?[n,i[n]]:i[n]);return a}},Zk=($k(!0),$k(!1));Gb({target:"Object",stat:!0},{values:function(e){return Zk(e)}}),Lb.Object.values;var Qk=y_.filter;Gb({target:"Array",proto:!0,forced:!Bk("filter")},{filter:function(e){return Qk(this,e,arguments.length>1?arguments[1]:void 0)}}),Dk("Array").filter;var Xk=Yw("isConcatSpreadable"),Kk=zk>=51||!ub((function(){var e=[];return e[Xk]=!1,e.concat()[0]!==e})),Jk=Bk("concat"),ex=function(e){if(!_b(e))return!1;var t=e[Xk];return void 0!==t?!!t:bw(e)};Gb({target:"Array",proto:!0,forced:!Kk||!Jk},{concat:function(e){var t,n,i,r,o,s=ww(this),a=f_(s,0),l=0;for(t=-1,i=arguments.length;t<i;t++)if(o=-1===t?s:arguments[t],ex(o)){if(l+(r=Xb(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<r;n++,l++)n in o&&vw(a,l,o[n])}else{if(l>=9007199254740991)throw TypeError("Maximum allowed index exceeded");vw(a,l++,o)}return a.length=l,a}}),Dk("Array").concat,Gb({target:"Array",stat:!0},{isArray:bw});var tx=Lb.Array.isArray,nx=function(e,t,n,i){try{return i?t(Yb(n)[0],n[1]):t(n)}catch(t){var r=e.return;throw void 0!==r&&Yb(r.call(e)),t}},ix=Yw("iterator"),rx=Array.prototype,ox=function(e){return void 0!==e&&(Z_.Array===e||rx[ix]===e)},sx=Yw("iterator"),ax=!1;try{var lx=0,ux={next:function(){return{done:!!lx++}},return:function(){ax=!0}};ux[sx]=function(){return this},Array.from(ux,(function(){throw 2}))}catch(n){}var cx=!function(e,t){if(!ax)return!1;var n=!1;try{var i={};i[sx]=function(){return{next:function(){return{done:n=!0}}}},function(e){Array.from(e)}(i)}catch(e){}return n}();Gb({target:"Array",stat:!0,forced:cx},{from:function(e){var t,n,i,r,o,s=ww(e),a="function"==typeof this?this:Array,l=arguments.length,u=l>1?arguments[1]:void 0,c=void 0!==u,d=0,h=wk(s);if(c&&(u=zb(u,l>2?arguments[2]:void 0,2)),null==h||a==Array&&ox(h))for(n=new a(t=Xb(s.length));t>d;d++)vw(n,d,c?u(s[d],d):s[d]);else for(o=(r=h.call(s)).next,n=new a;!(i=o.call(r)).done;d++)vw(n,d,c?nx(r,u,[i.value,d],!0):i.value);return n.length=d,n}}),Lb.Array.from,Yw("iterator");var dx=Yw("species"),hx=[].slice,fx=Math.max;Gb({target:"Array",proto:!0,forced:!Bk("slice")},{slice:function(e,t){var n,i,r,o=wb(this),s=Xb(o.length),a=ew(e,s),l=ew(void 0===t?s:t,s);if(bw(o)&&("function"!=typeof(n=o.constructor)||n!==Array&&!bw(n.prototype)?_b(n)&&null===(n=n[dx])&&(n=void 0):n=void 0,n===Array||void 0===n))return hx.call(o,a,l);for(i=new(void 0===n?Array:n)(fx(l-a,0)),r=0;a<l;a++,r++)a in o&&vw(i,r,o[a]);return i.length=r,i}});var px=Dk("Array").slice,vx=Array.prototype,yx=function(e){var t=e.slice;return e===vx||e instanceof Array&&t===vx.slice?px:t},gx=ub((function(){J_(1)}));Gb({target:"Object",stat:!0,forced:gx,sham:!Q_},{getPrototypeOf:function(e){return J_(ww(e))}});var mx=Lb.Object.getPrototypeOf,bx=nw.indexOf,wx=[].indexOf,_x=!!wx&&1/[1].indexOf(1,-0)<0,kx=Ck("indexOf");Gb({target:"Array",proto:!0,forced:_x||kx},{indexOf:function(e){return _x?wx.apply(this,arguments)||0:bx(this,e,arguments.length>1?arguments[1]:void 0)}}),Dk("Array").indexOf;var xx=tx,Sx=Object.assign,Ox=!Sx||ub((function(){var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=Sx({},e)[n]||"abcdefghijklmnopqrst"!=aw(Sx({},t)).join("")}))?function(e,t){for(var n=ww(e),i=arguments.length,r=1,o=fw.f,s=fb.f;i>r;)for(var a,l=mb(arguments[r++]),u=o?aw(l).concat(o(l)):aw(l),c=u.length,d=0;c>d;)a=u[d++],cb&&!s.call(l,a)||(n[a]=l[a]);return n}:Sx;Gb({target:"Object",stat:!0,forced:Object.assign!==Ox},{assign:Ox}),Lb.Object.assign,Ww("iterator");var Ex=Bw.f("iterator");Ww("asyncIterator"),Ww("hasInstance"),Ww("isConcatSpreadable"),Ww("match"),Ww("matchAll"),Ww("replace"),Ww("search"),Ww("species"),Ww("split"),Ww("toPrimitive"),Ww("toStringTag"),Ww("unscopables"),t_(Math,"Math",!0),t_(lb.JSON,"JSON",!0);var Tx=Lb.Symbol;Ww("asyncDispose"),Ww("dispose"),Ww("observable"),Ww("patternMatch"),Ww("replaceAll");for(var Mx=Tx,Dx=sb((function(e){function t(e){return(t="function"==typeof Mx&&"symbol"==typeof Ex?function(e){return typeof e}:function(e){return e&&"function"==typeof Mx&&e.constructor===Mx&&e!==Mx.prototype?"symbol":typeof e})(e)}function n(i){return"function"==typeof Mx&&"symbol"===t(Ex)?e.exports=n=function(e){return t(e)}:e.exports=n=function(e){return e&&"function"==typeof Mx&&e.constructor===Mx&&e!==Mx.prototype?"symbol":t(e)},n(i)}e.exports=n})),Cx=[],Px=0;Px<256;Px++)Cx[Px]=(Px+256).toString(16).substr(1);for(var Nx=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e}}var t=new Array(16);return function(){for(var e,n=0;n<16;n++)0==(3&n)&&(e=4294967296*Math.random()),t[n]=e>>>((3&n)<<3)&255;return t}}(),Ix=[],Ax=0;Ax<256;Ax++)Ix[Ax]=(Ax+256).toString(16).substr(1);var Fx=Nx();function Rx(e){return e instanceof Number||"number"==typeof e}function jx(e){return e instanceof String||"string"==typeof e}function Lx(e,t,n,i){var r=!1;!0===i&&(r=null===t[n]&&void 0!==e[n]),r?delete e[n]:e[n]=t[n]}function zx(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)||!0===n)if("object"===Dx(t[r])&&null!==t[r]&&mx(t[r])===Object.prototype)void 0===e[r]?e[r]=zx({},t[r],n):"object"===Dx(e[r])&&null!==e[r]&&mx(e[r])===Object.prototype?zx(e[r],t[r],n):Lx(e,t,r,i);else if(xx(t[r])){var o;e[r]=yx(o=t[r]).call(o)}else Lx(e,t,r,i);return e}function Yx(e){var t=Dx(e);return"object"===t?null===e?"null":e instanceof Boolean?"Boolean":e instanceof Number?"Number":e instanceof String?"String":xx(e)?"Array":e instanceof Date?"Date":"Object":"number"===t?"Number":"boolean"===t?"Boolean":"string"===t?"String":void 0===t?"undefined":t}Fx[0],Fx[1],Fx[2],Fx[3],Fx[4],Fx[5],Fx[6],Fx[7];var Bx=zh((function(e,t){e.exports=function(){var t,n;function i(){return t.apply(null,arguments)}function r(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function o(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function s(e){return void 0===e}function a(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function l(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function u(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function c(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var n in t)c(t,n)&&(e[n]=t[n]);return c(t,"toString")&&(e.toString=t.toString),c(t,"valueOf")&&(e.valueOf=t.valueOf),e}function h(e,t,n,i){return xt(e,t,n,i,!0).utc()}function f(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function p(e){if(null==e._isValid){var t=f(e),i=n.call(t.parsedDateParts,(function(e){return null!=e})),r=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&i);if(e._strict&&(r=r&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return r;e._isValid=r}return e._isValid}function v(e){var t=h(NaN);return null!=e?d(f(t),e):f(t).userInvalidated=!0,t}n=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var y=i.momentProperties=[];function g(e,t){var n,i,r;if(s(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),s(t._i)||(e._i=t._i),s(t._f)||(e._f=t._f),s(t._l)||(e._l=t._l),s(t._strict)||(e._strict=t._strict),s(t._tzm)||(e._tzm=t._tzm),s(t._isUTC)||(e._isUTC=t._isUTC),s(t._offset)||(e._offset=t._offset),s(t._pf)||(e._pf=f(t)),s(t._locale)||(e._locale=t._locale),y.length>0)for(n=0;n<y.length;n++)s(r=t[i=y[n]])||(e[i]=r);return e}var m=!1;function b(e){g(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===m&&(m=!0,i.updateOffset(this),m=!1)}function w(e){return e instanceof b||null!=e&&null!=e._isAMomentObject}function _(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function k(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=_(t)),n}function x(e,t,n){var i,r=Math.min(e.length,t.length),o=Math.abs(e.length-t.length),s=0;for(i=0;i<r;i++)(n&&e[i]!==t[i]||!n&&k(e[i])!==k(t[i]))&&s++;return s+o}function S(e){!1===i.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function O(e,t){var n=!0;return d((function(){if(null!=i.deprecationHandler&&i.deprecationHandler(null,e),n){for(var r,o=[],s=0;s<arguments.length;s++){if(r="","object"==typeof arguments[s]){for(var a in r+="\n["+s+"] ",arguments[0])r+=a+": "+arguments[0][a]+", ";r=r.slice(0,-2)}else r=arguments[s];o.push(r)}S(e+"\nArguments: "+Array.prototype.slice.call(o).join("")+"\n"+(new Error).stack),n=!1}return t.apply(this,arguments)}),t)}var E,T={};function M(e,t){null!=i.deprecationHandler&&i.deprecationHandler(e,t),T[e]||(S(t),T[e]=!0)}function D(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function C(e,t){var n,i=d({},e);for(n in t)c(t,n)&&(o(e[n])&&o(t[n])?(i[n]={},d(i[n],e[n]),d(i[n],t[n])):null!=t[n]?i[n]=t[n]:delete i[n]);for(n in e)c(e,n)&&!c(t,n)&&o(e[n])&&(i[n]=d({},i[n]));return i}function P(e){null!=e&&this.set(e)}i.suppressDeprecationWarnings=!1,i.deprecationHandler=null,E=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)c(e,t)&&n.push(t);return n};var N={};function I(e,t){var n=e.toLowerCase();N[n]=N[n+"s"]=N[t]=e}function A(e){return"string"==typeof e?N[e]||N[e.toLowerCase()]:void 0}function F(e){var t,n,i={};for(n in e)c(e,n)&&(t=A(n))&&(i[t]=e[n]);return i}var R={};function j(e,t){R[e]=t}function L(e,t,n){var i=""+Math.abs(e),r=t-i.length;return(e>=0?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}var z=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Y=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,B={},H={};function W(e,t,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),e&&(H[e]=r),t&&(H[t[0]]=function(){return L(r.apply(this,arguments),t[1],t[2])}),n&&(H[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function U(e,t){return e.isValid()?(t=V(t,e.localeData()),B[t]=B[t]||function(e){var t,n,i,r=e.match(z);for(t=0,n=r.length;t<n;t++)H[r[t]]?r[t]=H[r[t]]:r[t]=(i=r[t]).match(/\[[\s\S]/)?i.replace(/^\[|\]$/g,""):i.replace(/\\/g,"");return function(t){var i,o="";for(i=0;i<n;i++)o+=D(r[i])?r[i].call(t,e):r[i];return o}}(t),B[t](e)):e.localeData().invalidDate()}function V(e,t){var n=5;function i(e){return t.longDateFormat(e)||e}for(Y.lastIndex=0;n>=0&&Y.test(e);)e=e.replace(Y,i),Y.lastIndex=0,n-=1;return e}var G=/\d/,q=/\d\d/,$=/\d{3}/,Z=/\d{4}/,Q=/[+-]?\d{6}/,X=/\d\d?/,K=/\d\d\d\d?/,J=/\d\d\d\d\d\d?/,ee=/\d{1,3}/,te=/\d{1,4}/,ne=/[+-]?\d{1,6}/,ie=/\d+/,re=/[+-]?\d+/,oe=/Z|[+-]\d\d:?\d\d/gi,se=/Z|[+-]\d\d(?::?\d\d)?/gi,ae=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,le={};function ue(e,t,n){le[e]=D(t)?t:function(e,i){return e&&n?n:t}}function ce(e,t){return c(le,e)?le[e](t._strict,t._locale):new RegExp(de(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,n,i,r){return t||n||i||r}))))}function de(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var he={};function fe(e,t){var n,i=t;for("string"==typeof e&&(e=[e]),a(t)&&(i=function(e,n){n[t]=k(e)}),n=0;n<e.length;n++)he[e[n]]=i}function pe(e,t){fe(e,(function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)}))}function ve(e,t,n){null!=t&&c(he,e)&&he[e](t,n._a,n,e)}function ye(e){return ge(e)?366:365}function ge(e){return e%4==0&&e%100!=0||e%400==0}W("Y",0,0,(function(){var e=this.year();return e<=9999?""+e:"+"+e})),W(0,["YY",2],0,(function(){return this.year()%100})),W(0,["YYYY",4],0,"year"),W(0,["YYYYY",5],0,"year"),W(0,["YYYYYY",6,!0],0,"year"),I("year","y"),j("year",1),ue("Y",re),ue("YY",X,q),ue("YYYY",te,Z),ue("YYYYY",ne,Q),ue("YYYYYY",ne,Q),fe(["YYYYY","YYYYYY"],0),fe("YYYY",(function(e,t){t[0]=2===e.length?i.parseTwoDigitYear(e):k(e)})),fe("YY",(function(e,t){t[0]=i.parseTwoDigitYear(e)})),fe("Y",(function(e,t){t[0]=parseInt(e,10)})),i.parseTwoDigitYear=function(e){return k(e)+(k(e)>68?1900:2e3)};var me,be=we("FullYear",!0);function we(e,t){return function(n){return null!=n?(ke(this,e,n),i.updateOffset(this,t),this):_e(this,e)}}function _e(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function ke(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&ge(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),xe(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function xe(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=function(e,t){return(e%12+12)%12}(t);return e+=(t-n)/12,1===n?ge(e)?29:28:31-n%7%2}me=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},W("M",["MM",2],"Mo",(function(){return this.month()+1})),W("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),W("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),I("month","M"),j("month",8),ue("M",X),ue("MM",X,q),ue("MMM",(function(e,t){return t.monthsShortRegex(e)})),ue("MMMM",(function(e,t){return t.monthsRegex(e)})),fe(["M","MM"],(function(e,t){t[1]=k(e)-1})),fe(["MMM","MMMM"],(function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null!=r?t[1]=r:f(n).invalidMonth=e}));var Se=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Oe="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Ee="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function Te(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=h([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?-1!==(r=me.call(this._shortMonthsParse,s))?r:null:-1!==(r=me.call(this._longMonthsParse,s))?r:null:"MMM"===t?-1!==(r=me.call(this._shortMonthsParse,s))?r:-1!==(r=me.call(this._longMonthsParse,s))?r:null:-1!==(r=me.call(this._longMonthsParse,s))?r:-1!==(r=me.call(this._shortMonthsParse,s))?r:null}function Me(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=k(t);else if(!a(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),xe(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function De(e){return null!=e?(Me(this,e),i.updateOffset(this,!0),this):_e(this,"Month")}var Ce=ae,Pe=ae;function Ne(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;t<12;t++)n=h([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;t<12;t++)i[t]=de(i[t]),r[t]=de(r[t]);for(t=0;t<24;t++)o[t]=de(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function Ie(e,t,n,i,r,o,s){var a;return e<100&&e>=0?(a=new Date(e+400,t,n,i,r,o,s),isFinite(a.getFullYear())&&a.setFullYear(e)):a=new Date(e,t,n,i,r,o,s),a}function Ae(e){var t;if(e<100&&e>=0){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function Fe(e,t,n){var i=7+t-n;return-(7+Ae(e,0,i).getUTCDay()-t)%7+i-1}function Re(e,t,n,i,r){var o,s,a=1+7*(t-1)+(7+n-i)%7+Fe(e,i,r);return a<=0?s=ye(o=e-1)+a:a>ye(e)?(o=e+1,s=a-ye(e)):(o=e,s=a),{year:o,dayOfYear:s}}function je(e,t,n){var i,r,o=Fe(e.year(),t,n),s=Math.floor((e.dayOfYear()-o-1)/7)+1;return s<1?i=s+Le(r=e.year()-1,t,n):s>Le(e.year(),t,n)?(i=s-Le(e.year(),t,n),r=e.year()+1):(r=e.year(),i=s),{week:i,year:r}}function Le(e,t,n){var i=Fe(e,t,n),r=Fe(e+1,t,n);return(ye(e)-i+r)/7}function ze(e,t){return e.slice(t,7).concat(e.slice(0,t))}W("w",["ww",2],"wo","week"),W("W",["WW",2],"Wo","isoWeek"),I("week","w"),I("isoWeek","W"),j("week",5),j("isoWeek",5),ue("w",X),ue("ww",X,q),ue("W",X),ue("WW",X,q),pe(["w","ww","W","WW"],(function(e,t,n,i){t[i.substr(0,1)]=k(e)})),W("d",0,"do","day"),W("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),W("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),W("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),W("e",0,0,"weekday"),W("E",0,0,"isoWeekday"),I("day","d"),I("weekday","e"),I("isoWeekday","E"),j("day",11),j("weekday",11),j("isoWeekday",11),ue("d",X),ue("e",X),ue("E",X),ue("dd",(function(e,t){return t.weekdaysMinRegex(e)})),ue("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),ue("dddd",(function(e,t){return t.weekdaysRegex(e)})),pe(["dd","ddd","dddd"],(function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null!=r?t.d=r:f(n).invalidWeekday=e})),pe(["d","e","E"],(function(e,t,n,i){t[i]=k(e)}));var Ye="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Be="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),He="Su_Mo_Tu_We_Th_Fr_Sa".split("_");function We(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=h([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?-1!==(r=me.call(this._weekdaysParse,s))?r:null:"ddd"===t?-1!==(r=me.call(this._shortWeekdaysParse,s))?r:null:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:"dddd"===t?-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._shortWeekdaysParse,s))?r:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:"ddd"===t?-1!==(r=me.call(this._shortWeekdaysParse,s))?r:-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:-1!==(r=me.call(this._minWeekdaysParse,s))?r:-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._shortWeekdaysParse,s))?r:null}var Ue=ae,Ve=ae,Ge=ae;function qe(){function e(e,t){return t.length-e.length}var t,n,i,r,o,s=[],a=[],l=[],u=[];for(t=0;t<7;t++)n=h([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),s.push(i),a.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(s.sort(e),a.sort(e),l.sort(e),u.sort(e),t=0;t<7;t++)a[t]=de(a[t]),l[t]=de(l[t]),u[t]=de(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+s.join("|")+")","i")}function $e(){return this.hours()%12||12}function Ze(e,t){W(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function Qe(e,t){return t._meridiemParse}W("H",["HH",2],0,"hour"),W("h",["hh",2],0,$e),W("k",["kk",2],0,(function(){return this.hours()||24})),W("hmm",0,0,(function(){return""+$e.apply(this)+L(this.minutes(),2)})),W("hmmss",0,0,(function(){return""+$e.apply(this)+L(this.minutes(),2)+L(this.seconds(),2)})),W("Hmm",0,0,(function(){return""+this.hours()+L(this.minutes(),2)})),W("Hmmss",0,0,(function(){return""+this.hours()+L(this.minutes(),2)+L(this.seconds(),2)})),Ze("a",!0),Ze("A",!1),I("hour","h"),j("hour",13),ue("a",Qe),ue("A",Qe),ue("H",X),ue("h",X),ue("k",X),ue("HH",X,q),ue("hh",X,q),ue("kk",X,q),ue("hmm",K),ue("hmmss",J),ue("Hmm",K),ue("Hmmss",J),fe(["H","HH"],3),fe(["k","kk"],(function(e,t,n){var i=k(e);t[3]=24===i?0:i})),fe(["a","A"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),fe(["h","hh"],(function(e,t,n){t[3]=k(e),f(n).bigHour=!0})),fe("hmm",(function(e,t,n){var i=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i)),f(n).bigHour=!0})),fe("hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i,2)),t[5]=k(e.substr(r)),f(n).bigHour=!0})),fe("Hmm",(function(e,t,n){var i=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i))})),fe("Hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i,2)),t[5]=k(e.substr(r))}));var Xe,Ke=we("Hours",!0),Je={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:Oe,monthsShort:Ee,week:{dow:0,doy:6},weekdays:Ye,weekdaysMin:He,weekdaysShort:Be,meridiemParse:/[ap]\.?m?\.?/i},et={},tt={};function nt(e){return e?e.toLowerCase().replace("_","-"):e}function it(t){var n=null;if(!et[t]&&e&&e.exports)try{n=Xe._abbr,function(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}(),rt(n)}catch(e){}return et[t]}function rt(e,t){var n;return e&&((n=s(t)?st(e):ot(e,t))?Xe=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Xe._abbr}function ot(e,t){if(null!==t){var n,i=Je;if(t.abbr=e,null!=et[e])M("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=et[e]._config;else if(null!=t.parentLocale)if(null!=et[t.parentLocale])i=et[t.parentLocale]._config;else{if(null==(n=it(t.parentLocale)))return tt[t.parentLocale]||(tt[t.parentLocale]=[]),tt[t.parentLocale].push({name:e,config:t}),null;i=n._config}return et[e]=new P(C(i,t)),tt[e]&&tt[e].forEach((function(e){ot(e.name,e.config)})),rt(e),et[e]}return delete et[e],null}function st(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Xe;if(!r(e)){if(t=it(e))return t;e=[e]}return function(e){for(var t,n,i,r,o=0;o<e.length;){for(t=(r=nt(e[o]).split("-")).length,n=(n=nt(e[o+1]))?n.split("-"):null;t>0;){if(i=it(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&x(r,n,!0)>=t-1)break;t--}o++}return Xe}(e)}function at(e){var t,n=e._a;return n&&-2===f(e).overflow&&(t=n[1]<0||n[1]>11?1:n[2]<1||n[2]>xe(n[0],n[1])?2:n[3]<0||n[3]>24||24===n[3]&&(0!==n[4]||0!==n[5]||0!==n[6])?3:n[4]<0||n[4]>59?4:n[5]<0||n[5]>59?5:n[6]<0||n[6]>999?6:-1,f(e)._overflowDayOfYear&&(t<0||t>2)&&(t=2),f(e)._overflowWeeks&&-1===t&&(t=7),f(e)._overflowWeekday&&-1===t&&(t=8),f(e).overflow=t),e}function lt(e,t,n){return null!=e?e:null!=t?t:n}function ut(e){var t,n,r,o,s,a=[];if(!e._d){for(r=function(e){var t=new Date(i.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var t,n,i,r,o,s,a,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)o=1,s=4,n=lt(t.GG,e._a[0],je(St(),1,4).year),i=lt(t.W,1),((r=lt(t.E,1))<1||r>7)&&(l=!0);else{o=e._locale._week.dow,s=e._locale._week.doy;var u=je(St(),o,s);n=lt(t.gg,e._a[0],u.year),i=lt(t.w,u.week),null!=t.d?((r=t.d)<0||r>6)&&(l=!0):null!=t.e?(r=t.e+o,(t.e<0||t.e>6)&&(l=!0)):r=o}i<1||i>Le(n,o,s)?f(e)._overflowWeeks=!0:null!=l?f(e)._overflowWeekday=!0:(a=Re(n,i,r,o,s),e._a[0]=a.year,e._dayOfYear=a.dayOfYear)}(e),null!=e._dayOfYear&&(s=lt(e._a[0],r[0]),(e._dayOfYear>ye(s)||0===e._dayOfYear)&&(f(e)._overflowDayOfYear=!0),n=Ae(s,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=a[t]=r[t];for(;t<7;t++)e._a[t]=a[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?Ae:Ie).apply(null,a),o=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&void 0!==e._w.d&&e._w.d!==o&&(f(e).weekdayMismatch=!0)}}var ct=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,dt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,ht=/Z|[+-]\d\d(?::?\d\d)?/,ft=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],pt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],vt=/^\/?Date\((\-?\d+)/i;function yt(e){var t,n,i,r,o,s,a=e._i,l=ct.exec(a)||dt.exec(a);if(l){for(f(e).iso=!0,t=0,n=ft.length;t<n;t++)if(ft[t][1].exec(l[1])){r=ft[t][0],i=!1!==ft[t][2];break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=pt.length;t<n;t++)if(pt[t][1].exec(l[3])){o=(l[2]||" ")+pt[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!ht.exec(l[4]))return void(e._isValid=!1);s="Z"}e._f=r+(o||"")+(s||""),_t(e)}else e._isValid=!1}var gt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function mt(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}var bt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function wt(e){var t,n,i,r,o,s,a,l=gt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(l){var u=(t=l[4],n=l[3],i=l[2],r=l[5],o=l[6],s=l[7],a=[mt(t),Ee.indexOf(n),parseInt(i,10),parseInt(r,10),parseInt(o,10)],s&&a.push(parseInt(s,10)),a);if(!function(e,t,n){return!e||Be.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(f(n).weekdayMismatch=!0,n._isValid=!1,!1)}(l[1],u,e))return;e._a=u,e._tzm=function(e,t,n){if(e)return bt[e];if(t)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(l[8],l[9],l[10]),e._d=Ae.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),f(e).rfc2822=!0}else e._isValid=!1}function _t(e){if(e._f!==i.ISO_8601)if(e._f!==i.RFC_2822){e._a=[],f(e).empty=!0;var t,n,r,o,s,a=""+e._i,l=a.length,u=0;for(r=V(e._f,e._locale).match(z)||[],t=0;t<r.length;t++)o=r[t],(n=(a.match(ce(o,e))||[])[0])&&((s=a.substr(0,a.indexOf(n))).length>0&&f(e).unusedInput.push(s),a=a.slice(a.indexOf(n)+n.length),u+=n.length),H[o]?(n?f(e).empty=!1:f(e).unusedTokens.push(o),ve(o,n,e)):e._strict&&!n&&f(e).unusedTokens.push(o);f(e).charsLeftOver=l-u,a.length>0&&f(e).unusedInput.push(a),e._a[3]<=12&&!0===f(e).bigHour&&e._a[3]>0&&(f(e).bigHour=void 0),f(e).parsedDateParts=e._a.slice(0),f(e).meridiem=e._meridiem,e._a[3]=function(e,t,n){var i;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?((i=e.isPM(n))&&t<12&&(t+=12),i||12!==t||(t=0),t):t}(e._locale,e._a[3],e._meridiem),ut(e),at(e)}else wt(e);else yt(e)}function kt(e){var t=e._i,n=e._f;return e._locale=e._locale||st(e._l),null===t||void 0===n&&""===t?v({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),w(t)?new b(at(t)):(l(t)?e._d=t:r(n)?function(e){var t,n,i,r,o;if(0===e._f.length)return f(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=g({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],_t(t),p(t)&&(o+=f(t).charsLeftOver,o+=10*f(t).unusedTokens.length,f(t).score=o,(null==i||o<i)&&(i=o,n=t));d(e,n||t)}(e):n?_t(e):function(e){var t=e._i;s(t)?e._d=new Date(i.now()):l(t)?e._d=new Date(t.valueOf()):"string"==typeof t?function(e){var t=vt.exec(e._i);null===t?(yt(e),!1===e._isValid&&(delete e._isValid,wt(e),!1===e._isValid&&(delete e._isValid,i.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):r(t)?(e._a=u(t.slice(0),(function(e){return parseInt(e,10)})),ut(e)):o(t)?function(e){if(!e._d){var t=F(e._i);e._a=u([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),ut(e)}}(e):a(t)?e._d=new Date(t):i.createFromInputFallback(e)}(e),p(e)||(e._d=null),e))}function xt(e,t,n,i,s){var a,l={};return!0!==n&&!1!==n||(i=n,n=void 0),(o(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||r(e)&&0===e.length)&&(e=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=s,l._l=n,l._i=e,l._f=t,l._strict=i,(a=new b(at(kt(l))))._nextDay&&(a.add(1,"d"),a._nextDay=void 0),a}function St(e,t,n,i){return xt(e,t,n,i,!1)}i.createFromInputFallback=O("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),i.ISO_8601=function(){},i.RFC_2822=function(){};var Ot=O("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:v()})),Et=O("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:v()}));function Tt(e,t){var n,i;if(1===t.length&&r(t[0])&&(t=t[0]),!t.length)return St();for(n=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](n)||(n=t[i]);return n}var Mt=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Dt(e){var t=F(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||t.isoWeek||0,s=t.day||0,a=t.hour||0,l=t.minute||0,u=t.second||0,c=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===me.call(Mt,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,i=0;i<Mt.length;++i)if(e[Mt[i]]){if(n)return!1;parseFloat(e[Mt[i]])!==k(e[Mt[i]])&&(n=!0)}return!0}(t),this._milliseconds=+c+1e3*u+6e4*l+1e3*a*60*60,this._days=+s+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=st(),this._bubble()}function Ct(e){return e instanceof Dt}function Pt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Nt(e,t){W(e,0,0,(function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+L(~~(e/60),2)+t+L(~~e%60,2)}))}Nt("Z",":"),Nt("ZZ",""),ue("Z",se),ue("ZZ",se),fe(["Z","ZZ"],(function(e,t,n){n._useUTC=!0,n._tzm=At(se,e)}));var It=/([\+\-]|\d\d)/gi;function At(e,t){var n=(t||"").match(e);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(It)||["-",0,0],r=60*i[1]+k(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ft(e,t){var n,r;return t._isUTC?(n=t.clone(),r=(w(e)||l(e)?e.valueOf():St(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+r),i.updateOffset(n,!1),n):St(e).local()}function Rt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function jt(){return!!this.isValid()&&this._isUTC&&0===this._offset}i.updateOffset=function(){};var Lt=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,zt=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Yt(e,t){var n,i,r,o,s,l,u=e,d=null;return Ct(e)?u={ms:e._milliseconds,d:e._days,M:e._months}:a(e)?(u={},t?u[t]=e:u.milliseconds=e):(d=Lt.exec(e))?(n="-"===d[1]?-1:1,u={y:0,d:k(d[2])*n,h:k(d[3])*n,m:k(d[4])*n,s:k(d[5])*n,ms:k(Pt(1e3*d[6]))*n}):(d=zt.exec(e))?(n="-"===d[1]?-1:1,u={y:Bt(d[2],n),M:Bt(d[3],n),w:Bt(d[4],n),d:Bt(d[5],n),h:Bt(d[6],n),m:Bt(d[7],n),s:Bt(d[8],n)}):null==u?u={}:"object"==typeof u&&("from"in u||"to"in u)&&(o=St(u.from),s=St(u.to),r=o.isValid()&&s.isValid()?(s=Ft(s,o),o.isBefore(s)?l=Ht(o,s):((l=Ht(s,o)).milliseconds=-l.milliseconds,l.months=-l.months),l):{milliseconds:0,months:0},(u={}).ms=r.milliseconds,u.M=r.months),i=new Dt(u),Ct(e)&&c(e,"_locale")&&(i._locale=e._locale),i}function Bt(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function Ht(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function Wt(e,t){return function(n,i){var r;return null===i||isNaN(+i)||(M(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),Ut(this,Yt(n="string"==typeof n?+n:n,i),e),this}}function Ut(e,t,n,r){var o=t._milliseconds,s=Pt(t._days),a=Pt(t._months);e.isValid()&&(r=null==r||r,a&&Me(e,_e(e,"Month")+a*n),s&&ke(e,"Date",_e(e,"Date")+s*n),o&&e._d.setTime(e._d.valueOf()+o*n),r&&i.updateOffset(e,s||a))}Yt.fn=Dt.prototype,Yt.invalid=function(){return Yt(NaN)};var Vt=Wt(1,"add"),Gt=Wt(-1,"subtract");function qt(e,t){var n=12*(t.year()-e.year())+(t.month()-e.month()),i=e.clone().add(n,"months");return-(n+(t-i<0?(t-i)/(i-e.clone().add(n-1,"months")):(t-i)/(e.clone().add(n+1,"months")-i)))||0}function $t(e){var t;return void 0===e?this._locale._abbr:(null!=(t=st(e))&&(this._locale=t),this)}i.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",i.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Zt=O("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));function Qt(){return this._locale}var Xt=126227808e5;function Kt(e,t){return(e%t+t)%t}function Jt(e,t,n){return e<100&&e>=0?new Date(e+400,t,n)-Xt:new Date(e,t,n).valueOf()}function en(e,t,n){return e<100&&e>=0?Date.UTC(e+400,t,n)-Xt:Date.UTC(e,t,n)}function tn(e,t){W(0,[e,e.length],0,t)}function nn(e,t,n,i,r){var o;return null==e?je(this,i,r).year:(t>(o=Le(e,i,r))&&(t=o),rn.call(this,e,t,n,i,r))}function rn(e,t,n,i,r){var o=Re(e,t,n,i,r),s=Ae(o.year,0,o.dayOfYear);return this.year(s.getUTCFullYear()),this.month(s.getUTCMonth()),this.date(s.getUTCDate()),this}W(0,["gg",2],0,(function(){return this.weekYear()%100})),W(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),tn("gggg","weekYear"),tn("ggggg","weekYear"),tn("GGGG","isoWeekYear"),tn("GGGGG","isoWeekYear"),I("weekYear","gg"),I("isoWeekYear","GG"),j("weekYear",1),j("isoWeekYear",1),ue("G",re),ue("g",re),ue("GG",X,q),ue("gg",X,q),ue("GGGG",te,Z),ue("gggg",te,Z),ue("GGGGG",ne,Q),ue("ggggg",ne,Q),pe(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,n,i){t[i.substr(0,2)]=k(e)})),pe(["gg","GG"],(function(e,t,n,r){t[r]=i.parseTwoDigitYear(e)})),W("Q",0,"Qo","quarter"),I("quarter","Q"),j("quarter",7),ue("Q",G),fe("Q",(function(e,t){t[1]=3*(k(e)-1)})),W("D",["DD",2],"Do","date"),I("date","D"),j("date",9),ue("D",X),ue("DD",X,q),ue("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),fe(["D","DD"],2),fe("Do",(function(e,t){t[2]=k(e.match(X)[0])}));var on=we("Date",!0);W("DDD",["DDDD",3],"DDDo","dayOfYear"),I("dayOfYear","DDD"),j("dayOfYear",4),ue("DDD",ee),ue("DDDD",$),fe(["DDD","DDDD"],(function(e,t,n){n._dayOfYear=k(e)})),W("m",["mm",2],0,"minute"),I("minute","m"),j("minute",14),ue("m",X),ue("mm",X,q),fe(["m","mm"],4);var sn=we("Minutes",!1);W("s",["ss",2],0,"second"),I("second","s"),j("second",15),ue("s",X),ue("ss",X,q),fe(["s","ss"],5);var an,ln=we("Seconds",!1);for(W("S",0,0,(function(){return~~(this.millisecond()/100)})),W(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),W(0,["SSS",3],0,"millisecond"),W(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),W(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),W(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),W(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),W(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),W(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),I("millisecond","ms"),j("millisecond",16),ue("S",ee,G),ue("SS",ee,q),ue("SSS",ee,$),an="SSSS";an.length<=9;an+="S")ue(an,ie);function un(e,t){t[6]=k(1e3*("0."+e))}for(an="S";an.length<=9;an+="S")fe(an,un);var cn=we("Milliseconds",!1);W("z",0,0,"zoneAbbr"),W("zz",0,0,"zoneName");var dn=b.prototype;function hn(e){return e}dn.add=Vt,dn.calendar=function(e,t){var n=e||St(),r=Ft(n,this).startOf("day"),o=i.calendarFormat(this,r)||"sameElse",s=t&&(D(t[o])?t[o].call(this,n):t[o]);return this.format(s||this.localeData().calendar(o,this,St(n)))},dn.clone=function(){return new b(this)},dn.diff=function(e,t,n){var i,r,o;if(!this.isValid())return NaN;if(!(i=Ft(e,this)).isValid())return NaN;switch(r=6e4*(i.utcOffset()-this.utcOffset()),t=A(t)){case"year":o=qt(this,i)/12;break;case"month":o=qt(this,i);break;case"quarter":o=qt(this,i)/3;break;case"second":o=(this-i)/1e3;break;case"minute":o=(this-i)/6e4;break;case"hour":o=(this-i)/36e5;break;case"day":o=(this-i-r)/864e5;break;case"week":o=(this-i-r)/6048e5;break;default:o=this-i}return n?o:_(o)},dn.endOf=function(e){var t;if(void 0===(e=A(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?en:Jt;switch(e){case"year":t=n(this.year()+1,0,1)-1;break;case"quarter":t=n(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=n(this.year(),this.month()+1,1)-1;break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=n(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=36e5-Kt(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1;break;case"minute":t=this._d.valueOf(),t+=6e4-Kt(t,6e4)-1;break;case"second":t=this._d.valueOf(),t+=1e3-Kt(t,1e3)-1}return this._d.setTime(t),i.updateOffset(this,!0),this},dn.format=function(e){e||(e=this.isUtc()?i.defaultFormatUtc:i.defaultFormat);var t=U(this,e);return this.localeData().postformat(t)},dn.from=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||St(e).isValid())?Yt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},dn.fromNow=function(e){return this.from(St(),e)},dn.to=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||St(e).isValid())?Yt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},dn.toNow=function(e){return this.to(St(),e)},dn.get=function(e){return D(this[e=A(e)])?this[e]():this},dn.invalidAt=function(){return f(this).overflow},dn.isAfter=function(e,t){var n=w(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},dn.isBefore=function(e,t){var n=w(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},dn.isBetween=function(e,t,n,i){var r=w(e)?e:St(e),o=w(t)?t:St(t);return!!(this.isValid()&&r.isValid()&&o.isValid())&&("("===(i=i||"()")[0]?this.isAfter(r,n):!this.isBefore(r,n))&&(")"===i[1]?this.isBefore(o,n):!this.isAfter(o,n))},dn.isSame=function(e,t){var n,i=w(e)?e:St(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},dn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},dn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},dn.isValid=function(){return p(this)},dn.lang=Zt,dn.locale=$t,dn.localeData=Qt,dn.max=Et,dn.min=Ot,dn.parsingFlags=function(){return d({},f(this))},dn.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:R[n]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=F(e)),i=0;i<n.length;i++)this[n[i].unit](e[n[i].unit]);else if(D(this[e=A(e)]))return this[e](t);return this},dn.startOf=function(e){var t;if(void 0===(e=A(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?en:Jt;switch(e){case"year":t=n(this.year(),0,1);break;case"quarter":t=n(this.year(),this.month()-this.month()%3,1);break;case"month":t=n(this.year(),this.month(),1);break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=n(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=Kt(t+(this._isUTC?0:6e4*this.utcOffset()),36e5);break;case"minute":t=this._d.valueOf(),t-=Kt(t,6e4);break;case"second":t=this._d.valueOf(),t-=Kt(t,1e3)}return this._d.setTime(t),i.updateOffset(this,!0),this},dn.subtract=Gt,dn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},dn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},dn.toDate=function(){return new Date(this.valueOf())},dn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?U(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):D(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",U(n,"Z")):U(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},dn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',i=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r=t+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},dn.toJSON=function(){return this.isValid()?this.toISOString():null},dn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},dn.unix=function(){return Math.floor(this.valueOf()/1e3)},dn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},dn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},dn.year=be,dn.isLeapYear=function(){return ge(this.year())},dn.weekYear=function(e){return nn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},dn.isoWeekYear=function(e){return nn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},dn.quarter=dn.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},dn.month=De,dn.daysInMonth=function(){return xe(this.year(),this.month())},dn.week=dn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},dn.isoWeek=dn.isoWeeks=function(e){var t=je(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},dn.weeksInYear=function(){var e=this.localeData()._week;return Le(this.year(),e.dow,e.doy)},dn.isoWeeksInYear=function(){return Le(this.year(),1,4)},dn.date=on,dn.day=dn.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,t){return"string"!=typeof e?e:isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,"d")):t},dn.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},dn.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},dn.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},dn.hour=dn.hours=Ke,dn.minute=dn.minutes=sn,dn.second=dn.seconds=ln,dn.millisecond=dn.milliseconds=cn,dn.utcOffset=function(e,t,n){var r,o=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"==typeof e){if(null===(e=At(se,e)))return this}else Math.abs(e)<16&&!n&&(e*=60);return!this._isUTC&&t&&(r=Rt(this)),this._offset=e,this._isUTC=!0,null!=r&&this.add(r,"m"),o!==e&&(!t||this._changeInProgress?Ut(this,Yt(e-o,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,i.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:Rt(this)},dn.utc=function(e){return this.utcOffset(0,e)},dn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Rt(this),"m")),this},dn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=At(oe,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},dn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?St(e).utcOffset():0,(this.utcOffset()-e)%60==0)},dn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},dn.isLocal=function(){return!!this.isValid()&&!this._isUTC},dn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},dn.isUtc=jt,dn.isUTC=jt,dn.zoneAbbr=function(){return this._isUTC?"UTC":""},dn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},dn.dates=O("dates accessor is deprecated. Use date instead.",on),dn.months=O("months accessor is deprecated. Use month instead",De),dn.years=O("years accessor is deprecated. Use year instead",be),dn.zone=O("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),dn.isDSTShifted=O("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!s(this._isDSTShifted))return this._isDSTShifted;var e={};if(g(e,this),(e=kt(e))._a){var t=e._isUTC?h(e._a):St(e._a);this._isDSTShifted=this.isValid()&&x(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}));var fn=P.prototype;function pn(e,t,n,i){var r=st(),o=h().set(i,t);return r[n](o,e)}function vn(e,t,n){if(a(e)&&(t=e,e=void 0),e=e||"",null!=t)return pn(e,t,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=pn(e,i,n,"month");return r}function yn(e,t,n,i){"boolean"==typeof e?(a(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,a(t)&&(n=t,t=void 0),t=t||"");var r,o=st(),s=e?o._week.dow:0;if(null!=n)return pn(t,(n+s)%7,i,"day");var l=[];for(r=0;r<7;r++)l[r]=pn(t,(r+s)%7,i,"day");return l}fn.calendar=function(e,t,n){var i=this._calendar[e]||this._calendar.sameElse;return D(i)?i.call(t,n):i},fn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},fn.invalidDate=function(){return this._invalidDate},fn.ordinal=function(e){return this._ordinal.replace("%d",e)},fn.preparse=hn,fn.postformat=hn,fn.relativeTime=function(e,t,n,i){var r=this._relativeTime[n];return D(r)?r(e,t,n,i):r.replace(/%d/i,e)},fn.pastFuture=function(e,t){var n=this._relativeTime[e>0?"future":"past"];return D(n)?n(t):n.replace(/%s/i,t)},fn.set=function(e){var t,n;for(n in e)D(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},fn.months=function(e,t){return e?r(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Se).test(t)?"format":"standalone"][e.month()]:r(this._months)?this._months:this._months.standalone},fn.monthsShort=function(e,t){return e?r(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Se.test(t)?"format":"standalone"][e.month()]:r(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},fn.monthsParse=function(e,t,n){var i,r,o;if(this._monthsParseExact)return Te.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=h([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}},fn.monthsRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Ne.call(this),e?this._monthsStrictRegex:this._monthsRegex):(c(this,"_monthsRegex")||(this._monthsRegex=Pe),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},fn.monthsShortRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Ne.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(c(this,"_monthsShortRegex")||(this._monthsShortRegex=Ce),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},fn.week=function(e){return je(e,this._week.dow,this._week.doy).week},fn.firstDayOfYear=function(){return this._week.doy},fn.firstDayOfWeek=function(){return this._week.dow},fn.weekdays=function(e,t){var n=r(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?ze(n,this._week.dow):e?n[e.day()]:n},fn.weekdaysMin=function(e){return!0===e?ze(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},fn.weekdaysShort=function(e){return!0===e?ze(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},fn.weekdaysParse=function(e,t,n){var i,r,o;if(this._weekdaysParseExact)return We.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=h([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}},fn.weekdaysRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(c(this,"_weekdaysRegex")||(this._weekdaysRegex=Ue),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},fn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(c(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ve),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},fn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(c(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Ge),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},fn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},fn.meridiem=function(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"},rt("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===k(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),i.lang=O("moment.lang is deprecated. Use moment.locale instead.",rt),i.langData=O("moment.langData is deprecated. Use moment.localeData instead.",st);var gn=Math.abs;function mn(e,t,n,i){var r=Yt(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function bn(e){return e<0?Math.floor(e):Math.ceil(e)}function wn(e){return 4800*e/146097}function _n(e){return 146097*e/4800}function kn(e){return function(){return this.as(e)}}var xn=kn("ms"),Sn=kn("s"),On=kn("m"),En=kn("h"),Tn=kn("d"),Mn=kn("w"),Dn=kn("M"),Cn=kn("Q"),Pn=kn("y");function Nn(e){return function(){return this.isValid()?this._data[e]:NaN}}var In=Nn("milliseconds"),An=Nn("seconds"),Fn=Nn("minutes"),Rn=Nn("hours"),jn=Nn("days"),Ln=Nn("months"),zn=Nn("years"),Yn=Math.round,Bn={ss:44,s:45,m:45,h:22,d:26,M:11};function Hn(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}var Wn=Math.abs;function Un(e){return(e>0)-(e<0)||+e}function Vn(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Wn(this._milliseconds)/1e3,i=Wn(this._days),r=Wn(this._months);e=_(n/60),t=_(e/60),n%=60,e%=60;var o=_(r/12),s=r%=12,a=i,l=t,u=e,c=n?n.toFixed(3).replace(/\.?0+$/,""):"",d=this.asSeconds();if(!d)return"P0D";var h=d<0?"-":"",f=Un(this._months)!==Un(d)?"-":"",p=Un(this._days)!==Un(d)?"-":"",v=Un(this._milliseconds)!==Un(d)?"-":"";return h+"P"+(o?f+o+"Y":"")+(s?f+s+"M":"")+(a?p+a+"D":"")+(l||u||c?"T":"")+(l?v+l+"H":"")+(u?v+u+"M":"")+(c?v+c+"S":"")}var Gn=Dt.prototype;return Gn.isValid=function(){return this._isValid},Gn.abs=function(){var e=this._data;return this._milliseconds=gn(this._milliseconds),this._days=gn(this._days),this._months=gn(this._months),e.milliseconds=gn(e.milliseconds),e.seconds=gn(e.seconds),e.minutes=gn(e.minutes),e.hours=gn(e.hours),e.months=gn(e.months),e.years=gn(e.years),this},Gn.add=function(e,t){return mn(this,e,t,1)},Gn.subtract=function(e,t){return mn(this,e,t,-1)},Gn.as=function(e){if(!this.isValid())return NaN;var t,n,i=this._milliseconds;if("month"===(e=A(e))||"quarter"===e||"year"===e)switch(t=this._days+i/864e5,n=this._months+wn(t),e){case"month":return n;case"quarter":return n/3;case"year":return n/12}else switch(t=this._days+Math.round(_n(this._months)),e){case"week":return t/7+i/6048e5;case"day":return t+i/864e5;case"hour":return 24*t+i/36e5;case"minute":return 1440*t+i/6e4;case"second":return 86400*t+i/1e3;case"millisecond":return Math.floor(864e5*t)+i;default:throw new Error("Unknown unit "+e)}},Gn.asMilliseconds=xn,Gn.asSeconds=Sn,Gn.asMinutes=On,Gn.asHours=En,Gn.asDays=Tn,Gn.asWeeks=Mn,Gn.asMonths=Dn,Gn.asQuarters=Cn,Gn.asYears=Pn,Gn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*k(this._months/12):NaN},Gn._bubble=function(){var e,t,n,i,r,o=this._milliseconds,s=this._days,a=this._months,l=this._data;return o>=0&&s>=0&&a>=0||o<=0&&s<=0&&a<=0||(o+=864e5*bn(_n(a)+s),s=0,a=0),l.milliseconds=o%1e3,e=_(o/1e3),l.seconds=e%60,t=_(e/60),l.minutes=t%60,n=_(t/60),l.hours=n%24,s+=_(n/24),a+=r=_(wn(s)),s-=bn(_n(r)),i=_(a/12),a%=12,l.days=s,l.months=a,l.years=i,this},Gn.clone=function(){return Yt(this)},Gn.get=function(e){return e=A(e),this.isValid()?this[e+"s"]():NaN},Gn.milliseconds=In,Gn.seconds=An,Gn.minutes=Fn,Gn.hours=Rn,Gn.days=jn,Gn.weeks=function(){return _(this.days()/7)},Gn.months=Ln,Gn.years=zn,Gn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var i=Yt(e).abs(),r=Yn(i.as("s")),o=Yn(i.as("m")),s=Yn(i.as("h")),a=Yn(i.as("d")),l=Yn(i.as("M")),u=Yn(i.as("y")),c=r<=Bn.ss&&["s",r]||r<Bn.s&&["ss",r]||o<=1&&["m"]||o<Bn.m&&["mm",o]||s<=1&&["h"]||s<Bn.h&&["hh",s]||a<=1&&["d"]||a<Bn.d&&["dd",a]||l<=1&&["M"]||l<Bn.M&&["MM",l]||u<=1&&["y"]||["yy",u];return c[2]=t,c[3]=+e>0,c[4]=n,Hn.apply(null,c)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},Gn.toISOString=Vn,Gn.toString=Vn,Gn.toJSON=Vn,Gn.locale=$t,Gn.localeData=Qt,Gn.toIsoString=O("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Vn),Gn.lang=Zt,W("X",0,0,"unix"),W("x",0,0,"valueOf"),ue("x",re),ue("X",/[+-]?\d+(\.\d{1,3})?/),fe("X",(function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))})),fe("x",(function(e,t,n){n._d=new Date(k(e))})),i.version="2.24.0",t=St,i.fn=dn,i.min=function(){return Tt("isBefore",[].slice.call(arguments,0))},i.max=function(){return Tt("isAfter",[].slice.call(arguments,0))},i.now=function(){return Date.now?Date.now():+new Date},i.utc=h,i.unix=function(e){return St(1e3*e)},i.months=function(e,t){return vn(e,t,"months")},i.isDate=l,i.locale=rt,i.invalid=v,i.duration=Yt,i.isMoment=w,i.weekdays=function(e,t,n){return yn(e,t,n,"weekdays")},i.parseZone=function(){return St.apply(null,arguments).parseZone()},i.localeData=st,i.isDuration=Ct,i.monthsShort=function(e,t){return vn(e,t,"monthsShort")},i.weekdaysMin=function(e,t,n){return yn(e,t,n,"weekdaysMin")},i.defineLocale=ot,i.updateLocale=function(e,t){if(null!=t){var n,i,r=Je;null!=(i=it(e))&&(r=i._config),(n=new P(t=C(r,t))).parentLocale=et[e],et[e]=n,rt(e)}else null!=et[e]&&(null!=et[e].parentLocale?et[e]=et[e].parentLocale:null!=et[e]&&delete et[e]);return et[e]},i.locales=function(){return E(et)},i.weekdaysShort=function(e,t,n){return yn(e,t,n,"weekdaysShort")},i.normalizeUnits=A,i.relativeTimeRounding=function(e){return void 0===e?Yn:"function"==typeof e&&(Yn=e,!0)},i.relativeTimeThreshold=function(e,t){return void 0!==Bn[e]&&(void 0===t?Bn[e]:(Bn[e]=t,"s"===e&&(Bn.ss=t-1),!0))},i.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},i.prototype=dn,i.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},i}()})),Hx=/^\/?Date\((-?\d+)/i;function Wx(e){return Bx.isMoment(e)}function Ux(e,t){var n;if(void 0!==e){if(null===e)return null;if(!t)return e;if("string"!=typeof t&&!(t instanceof String))throw new Error("Type must be a string");switch(t){case"boolean":case"Boolean":return Boolean(e);case"number":case"Number":return jx(e)&&!isNaN(Date.parse(e))?Bx(e).valueOf():Number(e.valueOf());case"string":case"String":return String(e);case"Date":if(Rx(e))return new Date(e);if(e instanceof Date)return new Date(e.valueOf());if(Wx(e))return new Date(e.valueOf());if(jx(e))return(n=Hx.exec(e))?new Date(Number(n[1])):Bx(new Date(e)).toDate();throw new Error("Cannot convert object of type "+Yx(e)+" to type Date");case"Moment":if(Rx(e))return Bx(e);if(e instanceof Date)return Bx(e.valueOf());if(Wx(e))return Bx(e);if(jx(e))return n=Hx.exec(e),Bx(n?Number(n[1]):e);throw new Error("Cannot convert object of type "+Yx(e)+" to type Date");case"ISODate":if(Rx(e))return new Date(e);if(e instanceof Date)return e.toISOString();if(Wx(e))return e.toDate().toISOString();if(jx(e))return(n=Hx.exec(e))?new Date(Number(n[1])).toISOString():Bx(e).format();throw new Error("Cannot convert object of type "+Yx(e)+" to type ISODate");case"ASPDate":if(Rx(e))return"/Date("+e+")/";if(e instanceof Date||Wx(e))return"/Date("+e.valueOf()+")/";if(jx(e))return"/Date("+((n=Hx.exec(e))?new Date(Number(n[1])).valueOf():new Date(e).valueOf())+")/";throw new Error("Cannot convert object of type "+Yx(e)+" to type ASPDate");default:throw new Error("Unknown type ".concat(t))}}}function Vx(e){return"string"==typeof e||"number"==typeof e}var Gx=Yg("splice"),qx=Ov("splice",{ACCESSORS:!0,0:0,1:2}),$x=Math.max,Zx=Math.min;Tf({target:"Array",proto:!0,forced:!Gx||!qx},{splice:function(e,t){var n,i,r,o,s,a,l=Ep(this),u=Af(l.length),c=jf(e,u),d=arguments.length;if(0===d?n=i=0:1===d?(n=0,i=u-c):(n=d-2,i=Zx($x(Nf(t),0),u-c)),u+n-i>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(r=mv(l,i),o=0;o<i;o++)(s=c+o)in l&&Jf(r,o,l[s]);if(r.length=i,n<i){for(o=c;o<u-i;o++)a=o+n,(s=o+i)in l?l[a]=l[s]:delete l[a];for(o=u;o>u-i+n;o--)delete l[o-1]}else if(n>i)for(o=u-i;o>c;o--)a=o+n-1,(s=o+i-1)in l?l[a]=l[s]:delete l[a];for(o=0;o<n;o++)l[o+c]=arguments[o+2];return l.length=u-i+n,r}});var Qx=Cv("Array").splice,Xx=Array.prototype,Kx=[].slice,Jx=/MSIE .\./.test(Ag),eS=function(e){return function(t,n){var i=arguments.length>2,r=i?Kx.call(arguments,2):void 0;return e(i?function(){("function"==typeof t?t:Function(t)).apply(this,r)}:t,n)}};Tf({global:!0,bind:!0,forced:Jx},{setTimeout:eS(Bh.setTimeout),setInterval:eS(Bh.setInterval)});var tS=mf.setTimeout,nS=function(){function e(t){zm(this,e),this._queue=[],this._timeout=null,this._extended=null,this.delay=null,this.max=1/0,this.setOptions(t)}return Bm(e,[{key:"setOptions",value:function(e){e&&void 0!==e.delay&&(this.delay=e.delay),e&&void 0!==e.max&&(this.max=e.max),this._flushIfNeeded()}},{key:"destroy",value:function(){if(this.flush(),this._extended){for(var e=this._extended.object,t=this._extended.methods,n=0;n<t.length;n++){var i=t[n];i.original?e[i.name]=i.original:delete e[i.name]}this._extended=null}}},{key:"replace",value:function(e,t){var n=this,i=e[t];if(!i)throw new Error("Method "+t+" undefined");e[t]=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.queue({args:t,fn:i,context:this})}}},{key:"queue",value:function(e){"function"==typeof e?this._queue.push({fn:e}):this._queue.push(e),this._flushIfNeeded()}},{key:"_flushIfNeeded",value:function(){var e=this;this._queue.length>this.max&&this.flush(),null!=this._timeout&&(clearTimeout(this._timeout),this._timeout=null),this.queue.length>0&&"number"==typeof this.delay&&(this._timeout=tS((function(){e.flush()}),this.delay))}},{key:"flush",value:function(){var e,t;Av(e=function(e){var t=e.splice;return e===Xx||e instanceof Array&&t===Xx.splice?Qx:t}(t=this._queue).call(t,0)).call(e,(function(e){e.fn.apply(e.context||e.fn,e.args||[])}))}}],[{key:"extend",value:function(t,n){var i=new e(n);if(void 0!==t.flush)throw new Error("Target object already has a property flush");t.flush=function(){i.flush()};var r=[{name:"flush",original:void 0}];if(n&&n.replace)for(var o=0;o<n.replace.length;o++){var s=n.replace[o];r.push({name:s,original:t[s]}),i.replace(t,s)}return i._extended={object:t,methods:r},i}}]),e}(),iS=function(){function e(){zm(this,e),this._subscribers={"*":[],add:[],remove:[],update:[]},this.subscribe=e.prototype.on,this.unsubscribe=e.prototype.off}return Bm(e,[{key:"_trigger",value:function(e,t,n){var i,r;if("*"===e)throw new Error("Cannot trigger event *");Av(i=Jg(r=[]).call(r,Ig(this._subscribers[e]),Ig(this._subscribers["*"]))).call(i,(function(i){i(e,t,null!=n?n:null)}))}},{key:"on",value:function(e,t){"function"==typeof t&&this._subscribers[e].push(t)}},{key:"off",value:function(e,t){var n;this._subscribers[e]=Gg(n=this._subscribers[e]).call(n,(function(e){return e!==t}))}}]),e}(),rS=(Dm("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),Rm),mf.Set),oS=Zm,sS=function(e,t){return function(e){if(mg(e))return e}(e)||function(e,t){if(Ng(Object(e))||"[object Arguments]"===Object.prototype.toString.call(e)){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=Ky(e);!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return n}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()},aS=function(){function e(t){zm(this,e),this._pairs=t}return Bm(e,[{key:jy,value:Py.mark((function e(){var t,n,i,r,o,s,a,l;return Py.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=!0,n=!1,i=void 0,e.prev=3,r=Ky(this._pairs);case 5:if(t=(o=r.next()).done){e.next=12;break}return s=sS(o.value,2),a=s[0],l=s[1],e.next=9,[a,l];case 9:t=!0,e.next=5;break;case 12:e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),n=!0,i=e.t0;case 18:e.prev=18,e.prev=19,t||null==r.return||r.return();case 21:if(e.prev=21,!n){e.next=24;break}throw i;case 24:return e.finish(21);case 25:return e.finish(18);case 26:case"end":return e.stop()}}),e,this,[[3,14,18,26],[19,,21,25]])}))},{key:"entries",value:Py.mark((function e(){var t,n,i,r,o,s,a,l;return Py.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=!0,n=!1,i=void 0,e.prev=3,r=Ky(this._pairs);case 5:if(t=(o=r.next()).done){e.next=12;break}return s=sS(o.value,2),a=s[0],l=s[1],e.next=9,[a,l];case 9:t=!0,e.next=5;break;case 12:e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),n=!0,i=e.t0;case 18:e.prev=18,e.prev=19,t||null==r.return||r.return();case 21:if(e.prev=21,!n){e.next=24;break}throw i;case 24:return e.finish(21);case 25:return e.finish(18);case 26:case"end":return e.stop()}}),e,this,[[3,14,18,26],[19,,21,25]])}))},{key:"keys",value:Py.mark((function e(){var t,n,i,r,o,s,a;return Py.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=!0,n=!1,i=void 0,e.prev=3,r=Ky(this._pairs);case 5:if(t=(o=r.next()).done){e.next=12;break}return s=sS(o.value,1),a=s[0],e.next=9,a;case 9:t=!0,e.next=5;break;case 12:e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),n=!0,i=e.t0;case 18:e.prev=18,e.prev=19,t||null==r.return||r.return();case 21:if(e.prev=21,!n){e.next=24;break}throw i;case 24:return e.finish(21);case 25:return e.finish(18);case 26:case"end":return e.stop()}}),e,this,[[3,14,18,26],[19,,21,25]])}))},{key:"values",value:Py.mark((function e(){var t,n,i,r,o,s,a;return Py.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=!0,n=!1,i=void 0,e.prev=3,r=Ky(this._pairs);case 5:if(t=(o=r.next()).done){e.next=12;break}return s=sS(o.value,2),a=s[1],e.next=9,a;case 9:t=!0,e.next=5;break;case 12:e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),n=!0,i=e.t0;case 18:e.prev=18,e.prev=19,t||null==r.return||r.return();case 21:if(e.prev=21,!n){e.next=24;break}throw i;case 24:return e.finish(21);case 25:return e.finish(18);case 26:case"end":return e.stop()}}),e,this,[[3,14,18,26],[19,,21,25]])}))},{key:"toIdArray",value:function(){var e;return pm(e=Ig(this._pairs)).call(e,(function(e){return e[0]}))}},{key:"toItemArray",value:function(){var e;return pm(e=Ig(this._pairs)).call(e,(function(e){return e[1]}))}},{key:"toEntryArray",value:function(){return Ig(this._pairs)}},{key:"toObjectMap",value:function(){var e=oS(null),t=!0,n=!1,i=void 0;try{for(var r,o=Ky(this._pairs);!(t=(r=o.next()).done);t=!0){var s=sS(r.value,2),a=s[0],l=s[1];e[a]=l}}catch(e){n=!0,i=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw i}}return e}},{key:"toMap",value:function(){return new jm(this._pairs)}},{key:"toIdSet",value:function(){return new rS(this.toIdArray())}},{key:"toItemSet",value:function(){return new rS(this.toItemArray())}},{key:"cache",value:function(){return new e(Ig(this._pairs))}},{key:"distinct",value:function(e){var t=new rS,n=!0,i=!1,r=void 0;try{for(var o,s=Ky(this._pairs);!(n=(o=s.next()).done);n=!0){var a=sS(o.value,2),l=a[0],u=a[1];t.add(e(u,l))}}catch(e){i=!0,r=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw r}}return t}},{key:"filter",value:function(t){var n=this._pairs;return new e(Vy({},jy,Py.mark((function e(){var i,r,o,s,a,l,u,c;return Py.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=!0,r=!1,o=void 0,e.prev=3,s=Ky(n);case 5:if(i=(a=s.next()).done){e.next=13;break}if(l=sS(a.value,2),u=l[0],c=l[1],!t(c,u)){e.next=10;break}return e.next=10,[u,c];case 10:i=!0,e.next=5;break;case 13:e.next=19;break;case 15:e.prev=15,e.t0=e.catch(3),r=!0,o=e.t0;case 19:e.prev=19,e.prev=20,i||null==s.return||s.return();case 22:if(e.prev=22,!r){e.next=25;break}throw o;case 25:return e.finish(22);case 26:return e.finish(19);case 27:case"end":return e.stop()}}),e,null,[[3,15,19,27],[20,,22,26]])}))))}},{key:"forEach",value:function(e){var t=!0,n=!1,i=void 0;try{for(var r,o=Ky(this._pairs);!(t=(r=o.next()).done);t=!0){var s=sS(r.value,2),a=s[0];e(s[1],a)}}catch(e){n=!0,i=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw i}}}},{key:"map",value:function(t){var n=this._pairs;return new e(Vy({},jy,Py.mark((function e(){var i,r,o,s,a,l,u,c;return Py.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=!0,r=!1,o=void 0,e.prev=3,s=Ky(n);case 5:if(i=(a=s.next()).done){e.next=12;break}return l=sS(a.value,2),u=l[0],c=l[1],e.next=9,[u,t(c,u)];case 9:i=!0,e.next=5;break;case 12:e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),r=!0,o=e.t0;case 18:e.prev=18,e.prev=19,i||null==s.return||s.return();case 21:if(e.prev=21,!r){e.next=24;break}throw o;case 24:return e.finish(21);case 25:return e.finish(18);case 26:case"end":return e.stop()}}),e,null,[[3,14,18,26],[19,,21,25]])}))))}},{key:"max",value:function(e){var t=Ky(this._pairs),n=t.next();if(n.done)return null;for(var i=n.value[1],r=e(n.value[1],n.value[0]);!(n=t.next()).done;){var o=sS(n.value,2),s=o[0],a=o[1],l=e(a,s);l>r&&(r=l,i=a)}return i}},{key:"min",value:function(e){var t=Ky(this._pairs),n=t.next();if(n.done)return null;for(var i=n.value[1],r=e(n.value[1],n.value[0]);!(n=t.next()).done;){var o=sS(n.value,2),s=o[0],a=o[1],l=e(a,s);l<r&&(r=l,i=a)}return i}},{key:"reduce",value:function(e,t){var n=!0,i=!1,r=void 0;try{for(var o,s=Ky(this._pairs);!(n=(o=s.next()).done);n=!0){var a=sS(o.value,2),l=a[0];t=e(t,a[1],l)}}catch(e){i=!0,r=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw r}}return t}},{key:"sort",value:function(t){var n=this;return new e(Vy({},jy,(function(){var e;return Ky(sg(e=Ig(n._pairs)).call(e,(function(e,n){var i=sS(e,2),r=i[0],o=i[1],s=sS(n,2),a=s[0],l=s[1];return t(o,l,r,a)})))})))}}]),e}();function lS(e,t){var n=wm(e);if(wy){var i=wy(e);t&&(i=Gg(i).call(i,(function(t){return jv(e,t).enumerable}))),n.push.apply(n,i)}return n}var uS=function(){console.warn("Type coercion has been deprecated. Please, use data pipes instead. See https://visjs.github.io/vis-data/data/datapipe.html#TypeCoercion for more details with working migration example.")},cS=function(e){function t(e,n){var i;if(zm(this,t),i=Wm(this,qm(t).call(this)),e&&!Lm(e)&&(n=e,e=[]),i._options=n||{},i._data=new jm,i.length=0,i._idProp=i._options.fieldId||"id",i._type={},i._options.type){uS();for(var r=wm(i._options.type),o=0,s=r.length;o<s;o++){var a=r[o],l=i._options.type[a];i._type[a]="Date"==l||"ISODate"==l||"ASPDate"==l?"Date":l}}return e&&e.length&&i.add(e),i.setOptions(n),i}return Km(t,iS),Bm(t,[{key:"setOptions",value:function(e){e&&void 0!==e.queue&&(!1===e.queue?this._queue&&(this._queue.destroy(),delete this._queue):(this._queue||(this._queue=nS.extend(this,{replace:["add","update","remove"]})),e.queue&&"object"===mm(e.queue)&&this._queue.setOptions(e.queue)))}},{key:"add",value:function(e,t){var n,i=this,r=[];if(Lm(e)){var o=pm(e).call(e,(function(e){return e[i._idProp]}));if(function(e){var t=e.some;return e===lm||e instanceof Array&&t===lm.some?am:t}(o).call(o,(function(e){return i._data.has(e)})))throw new Error("A duplicate id was found in the parameter array.");for(var s=0,a=e.length;s<a;s++)n=this._addItem(e[s]),r.push(n)}else{if(!e||"object"!==mm(e))throw new Error("Unknown dataType");n=this._addItem(e),r.push(n)}return r.length&&this._trigger("add",{items:r},t),r}},{key:"update",value:function(e,t){var n=this,i=[],r=[],o=[],s=[],a=this._idProp,l=function(e){var t=e[a];if(null!=t&&n._data.has(t)){var l=e,u=im({},n._data.get(t)),c=n._updateItem(l);r.push(c),s.push(l),o.push(u)}else{var d=n._addItem(e);i.push(d)}};if(Lm(e))for(var u=0,c=e.length;u<c;u++)e[u]&&"object"===mm(e[u])?l(e[u]):console.warn("Ignoring input item, which is not an object at index "+u);else{if(!e||"object"!==mm(e))throw new Error("Unknown dataType");l(e)}if(i.length&&this._trigger("add",{items:i},t),r.length){var d={items:r,oldData:o,data:s};this._trigger("update",d,t)}return Jg(i).call(i,r)}},{key:"updateOnly",value:function(e,t){var n,i=this;Lm(e)||(e=[e]);var r=pm(n=pm(e).call(e,(function(e){var t=i._data.get(e[i._idProp]);if(null==t)throw new Error("Updating non-existent items is not allowed.");return{oldData:t,update:e}}))).call(n,(function(e){var t=e.oldData,n=e.update,r=t[i._idProp],o=zx(zx({},t),n);return i._data.set(r,o),{id:r,oldData:t,updatedData:o}}));if(r.length){var o={items:pm(r).call(r,(function(e){return e.id})),oldData:pm(r).call(r,(function(e){return e.oldData})),data:pm(r).call(r,(function(e){return e.updatedData}))};return this._trigger("update",o,t),o.items}return[]}},{key:"get",value:function(e,t){var n=void 0,i=void 0,r=void 0;Vx(e)?(n=e,r=t):Lm(e)?(i=e,r=t):r=e;var o=r&&"Object"===r.returnType?"Object":"Array",s=r&&r.type||this._options.type,a=r&&Gg(r),l=[],u=null,c=null,d=null;if(null!=n)(u=this._getItem(n,s))&&a&&!a(u)&&(u=null);else if(null!=i)for(var h=0,f=i.length;h<f;h++)null==(u=this._getItem(i[h],s))||a&&!a(u)||l.push(u);else for(var p,v=0,y=(c=Ig(yg(p=this._data).call(p))).length;v<y;v++)d=c[v],null==(u=this._getItem(d,s))||a&&!a(u)||l.push(u);if(r&&r.order&&null==n&&this._sort(l,r.order),r&&r.fields){var g=r.fields;if(null!=n&&null!=u)u=this._filterFields(u,g);else for(var m=0,b=l.length;m<b;m++)l[m]=this._filterFields(l[m],g)}if("Object"==o){for(var w={},_=0,k=l.length;_<k;_++){var x=l[_];w[x[this._idProp]]=x}return w}return null!=n?u:l}},{key:"getIds",value:function(e){var t,n,i=this._data,r=e&&Gg(e),o=e&&e.order,s=e&&e.type||this._options.type,a=Ig(yg(i).call(i)),l=[];if(r)if(o){n=[];for(var u=0,c=a.length;u<c;u++){var d=a[u];r(t=this._getItem(d,s))&&n.push(t)}this._sort(n,o);for(var h=0,f=n.length;h<f;h++)l.push(n[h][this._idProp])}else for(var p=0,v=a.length;p<v;p++){var y=a[p];r(t=this._getItem(y,s))&&l.push(t[this._idProp])}else if(o){n=[];for(var g=0,m=a.length;g<m;g++){var b=a[g];n.push(i.get(b))}this._sort(n,o);for(var w=0,_=n.length;w<_;w++)l.push(n[w][this._idProp])}else for(var k=0,x=a.length;k<x;k++){var S=a[k];t=i.get(S),l.push(t[this._idProp])}return l}},{key:"getDataSet",value:function(){return this}},{key:"forEach",value:function(e,t){var n=t&&Gg(t),i=t&&t.type||this._options.type,r=this._data,o=Ig(yg(r).call(r));if(t&&t.order)for(var s=this.get(t),a=0,l=s.length;a<l;a++){var u=s[a];e(u,u[this._idProp])}else for(var c=0,d=o.length;c<d;c++){var h=o[c],f=this._getItem(h,i);n&&!n(f)||e(f,h)}}},{key:"map",value:function(e,t){for(var n=t&&Gg(t),i=t&&t.type||this._options.type,r=[],o=this._data,s=Ig(yg(o).call(o)),a=0,l=s.length;a<l;a++){var u=s[a],c=this._getItem(u,i);n&&!n(c)||r.push(e(c,u))}return t&&t.order&&this._sort(r,t.order),r}},{key:"_filterFields",value:function(e,t){var n;return e?function(e){var t=e.reduce;return e===hg||e instanceof Array&&t===hg.reduce?dg:t}(n=Lm(t)?t:wm(t)).call(n,(function(t,n){return t[n]=e[n],t}),{}):e}},{key:"_sort",value:function(e,t){if("string"==typeof t){var n=t;sg(e).call(e,(function(e,t){var i=e[n],r=t[n];return i>r?1:i<r?-1:0}))}else{if("function"!=typeof t)throw new TypeError("Order must be a function or a string");sg(e).call(e,t)}}},{key:"remove",value:function(e,t){for(var n=[],i=[],r=Lm(e)?e:[e],o=0,s=r.length;o<s;o++){var a=this._remove(r[o]);if(a){var l=a[this._idProp];null!=l&&(n.push(l),i.push(a))}}return n.length&&this._trigger("remove",{items:n,oldData:i},t),n}},{key:"_remove",value:function(e){var t;if(Vx(e)?t=e:e&&"object"===mm(e)&&(t=e[this._idProp]),null!=t&&this._data.has(t)){var n=this._data.get(t)||null;return this._data.delete(t),--this.length,n}return null}},{key:"clear",value:function(e){for(var t,n=Ig(yg(t=this._data).call(t)),i=[],r=0,o=n.length;r<o;r++)i.push(this._data.get(n[r]));return this._data.clear(),this.length=0,this._trigger("remove",{items:n,oldData:i},e),n}},{key:"max",value:function(e){var t=null,n=null,i=!0,r=!1,o=void 0;try{for(var s,a=Ky(Zy(l=this._data).call(l));!(i=(s=a.next()).done);i=!0){var l,u=s.value,c=u[e];"number"==typeof c&&(null==n||c>n)&&(t=u,n=c)}}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return t||null}},{key:"min",value:function(e){var t=null,n=null,i=!0,r=!1,o=void 0;try{for(var s,a=Ky(Zy(l=this._data).call(l));!(i=(s=a.next()).done);i=!0){var l,u=s.value,c=u[e];"number"==typeof c&&(null==n||c<n)&&(t=u,n=c)}}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return t||null}},{key:"distinct",value:function(e){for(var t=this._data,n=Ig(yg(t).call(t)),i=[],r=this._options.type&&this._options.type[e]||null,o=0,s=0,a=n.length;s<a;s++){for(var l=n[s],u=t.get(l)[e],c=!1,d=0;d<o;d++)if(i[d]==u){c=!0;break}c||void 0===u||(i[o]=u,o++)}if(r)for(var h=0,f=i.length;h<f;h++)i[h]=Ux(i[h],r);return i}},{key:"_addItem",value:function(e){var t=e[this._idProp];if(null!=t){if(this._data.has(t))throw new Error("Cannot add item: item with id "+t+" already exists")}else t=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,i=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):void 0,e={});var r=e.random||(e.rng||tb)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t)for(var o=0;o<16;o++)t[i+o]=r[o];return t||function(e,t){var n=0,i=Jm;return i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]}(r)}(),e[this._idProp]=t;for(var n={},i=wm(e),r=0,o=i.length;r<o;r++){var s=i[r],a=this._type[s];n[s]=Ux(e[s],a)}return this._data.set(t,n),++this.length,t}},{key:"_getItem",value:function(e,t){var n,i=this._data.get(e);if(!i)return null;var r=wm(i);if(t){uS(),n={};for(var o=0,s=r.length;o<s;o++){var a=r[o],l=i[a];n[a]=Ux(l,t[a])}}else n=function(e){for(var t=1;t<arguments.length;t++){var n,i=null!=arguments[t]?arguments[t]:{};if(t%2)Av(n=lS(Object(i),!0)).call(n,(function(t){Vy(e,t,i[t])}));else if(ep)Gf(e,ep(i));else{var r;Av(r=lS(Object(i))).call(r,(function(t){Df(e,t,jv(i,t))}))}}return e}({},i);return null==n[this._idProp]&&(n[this._idProp]=i.id),n}},{key:"_updateItem",value:function(e){var t=e[this._idProp];if(null==t)throw new Error("Cannot update item: item has no id (item: "+function(e,t,n){return mf.JSON.stringify.apply(null,arguments)}(e)+")");var n=this._data.get(t);if(!n)throw new Error("Cannot update item: no item with id "+t+" found");for(var i=wm(e),r=0,o=i.length;r<o;r++){var s=i[r],a=this._type[s];n[s]=Ux(e[s],a)}return t}},{key:"stream",value:function(e){if(e){var t=this._data;return new aS(Vy({},jy,Py.mark((function n(){var i,r,o,s,a,l,u;return Py.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:i=!0,r=!1,o=void 0,n.prev=3,s=Ky(e);case 5:if(i=(a=s.next()).done){n.next=14;break}if(l=a.value,null==(u=t.get(l))){n.next=11;break}return n.next=11,[l,u];case 11:i=!0,n.next=5;break;case 14:n.next=20;break;case 16:n.prev=16,n.t0=n.catch(3),r=!0,o=n.t0;case 20:n.prev=20,n.prev=21,i||null==s.return||s.return();case 23:if(n.prev=23,!r){n.next=26;break}throw o;case 26:return n.finish(23);case 27:return n.finish(20);case 28:case"end":return n.stop()}}),n,null,[[3,16,20,28],[21,,23,27]])}))))}var n;return new aS(Vy({},jy,Cy(n=function(e){var t=e.entries;return e===ky||e instanceof Array&&t===ky.entries||xy.hasOwnProperty(Qp(e))?_y:t}(this._data)).call(n,this._data)))}}]),t}(),dS=function(e){function t(e,n){var i,r;return zm(this,t),(r=Wm(this,qm(t).call(this))).length=0,r._ids=new rS,r._options=n||{},r._listener=Cy(i=r._onEvent).call(i,Hm(r)),r.setData(e),r}return Km(t,iS),Bm(t,[{key:"setData",value:function(e){if(this._data){this._data.off&&this._data.off("*",this._listener);var t=this._data.getIds({filter:Gg(this._options)}),n=this._data.get(t);this._ids.clear(),this.length=0,this._trigger("remove",{items:t,oldData:n})}if(null!=e){this._data=e;for(var i=this._data.getIds({filter:Gg(this._options)}),r=0,o=i.length;r<o;r++){var s=i[r];this._ids.add(s)}this.length=i.length,this._trigger("add",{items:i})}else this._data=new cS;this._data.on&&this._data.on("*",this._listener)}},{key:"refresh",value:function(){for(var e=this._data.getIds({filter:Gg(this._options)}),t=Ig(this._ids),n={},i=[],r=[],o=[],s=0,a=e.length;s<a;s++){var l=e[s];n[l]=!0,this._ids.has(l)||(i.push(l),this._ids.add(l))}for(var u=0,c=t.length;u<c;u++){var d=t[u],h=this._data.get(d);null==h?console.error("If you see this, report it please."):n[d]||(r.push(d),o.push(h),this._ids.delete(d))}this.length+=i.length-r.length,i.length&&this._trigger("add",{items:i}),r.length&&this._trigger("remove",{items:r,oldData:o})}},{key:"get",value:function(e,t){if(null==this._data)return null;var n,i=null;Vx(e)||Lm(e)?(i=e,n=t):n=e;var r=im({},this._options,n),o=Gg(this._options),s=n&&Gg(n);return o&&s&&(r.filter=function(e){return o(e)&&s(e)}),null==i?this._data.get(r):this._data.get(i,r)}},{key:"getIds",value:function(e){if(this._data.length){var t,n=Gg(this._options),i=null!=e?Gg(e):null;return t=i?n?function(e){return n(e)&&i(e)}:i:n,this._data.getIds({filter:t,order:e&&e.order})}return[]}},{key:"forEach",value:function(e,t){if(this._data){var n,i,r=Gg(this._options),o=t&&Gg(t);i=o?r?function(e){return r(e)&&o(e)}:o:r,Av(n=this._data).call(n,e,{filter:i,order:t&&t.order})}}},{key:"map",value:function(e,t){if(this._data){var n,i,r=Gg(this._options),o=t&&Gg(t);return i=o?r?function(e){return r(e)&&o(e)}:o:r,pm(n=this._data).call(n,e,{filter:i,order:t&&t.order})}return[]}},{key:"getDataSet",value:function(){return this._data.getDataSet()}},{key:"stream",value:function(e){var t;return this._data.stream(e||Vy({},jy,Cy(t=yg(this._ids)).call(t,this._ids)))}},{key:"_onEvent",value:function(e,t,n){if(t&&t.items&&this._data){var i=t.items,r=[],o=[],s=[],a=[],l=[],u=[];switch(e){case"add":for(var c=0,d=i.length;c<d;c++){var h=i[c];this.get(h)&&(this._ids.add(h),r.push(h))}break;case"update":for(var f=0,p=i.length;f<p;f++){var v=i[f];this.get(v)?this._ids.has(v)?(o.push(v),l.push(t.data[f]),a.push(t.oldData[f])):(this._ids.add(v),r.push(v)):this._ids.has(v)&&(this._ids.delete(v),s.push(v),u.push(t.oldData[f]))}break;case"remove":for(var y=0,g=i.length;y<g;y++){var m=i[y];this._ids.has(m)&&(this._ids.delete(m),s.push(m),u.push(t.oldData[y]))}}this.length+=r.length-s.length,r.length&&this._trigger("add",{items:r},n),o.length&&this._trigger("update",{items:o,oldData:a,data:l},n),s.length&&this._trigger("remove",{items:s,oldData:u},n)}}}]),t}(),hS={DataSet:cS,DataView:dS,Queue:nS},fS=Object.freeze({__proto__:null,default:hS,DataSet:cS,DataStream:aS,DataView:dS,Queue:nS}),pS=fh;U({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperties:Qa});var vS=i((function(e){var t=F.Object,n=e.exports=function(e,n){return t.defineProperties(e,n)};t.defineProperties.sham&&(n.sham=!0)})),yS=$a.concat("length","prototype"),gS={f:Object.getOwnPropertyNames||function(e){return qa(e,yS)}},mS={f:Object.getOwnPropertySymbols},bS=Ka("Reflect","ownKeys")||function(e){var t=gS.f(L(e)),n=mS.f;return n?t.concat(n(e)):t};U({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(e){for(var t,n,i=g(e),r=T.f,o=bS(i),s={},a=0;o.length>a;)void 0!==(n=r(i,t=o[a++]))&&Kl(s,t,n);return s}});var wS=F.Object.getOwnPropertyDescriptors,_S=T.f,kS=s((function(){_S(1)}));U({target:"Object",stat:!0,forced:!a||kS,sham:!a},{getOwnPropertyDescriptor:function(e,t){return _S(g(e),t)}});var xS=i((function(e){var t=F.Object,n=e.exports=function(e,n){return t.getOwnPropertyDescriptor(e,n)};t.getOwnPropertyDescriptor.sham&&(n.sham=!0)})),SS=xS,OS=Al.filter,ES=ou("filter"),TS=zl("filter");U({target:"Array",proto:!0,forced:!ES||!TS},{filter:function(e){return OS(this,e,arguments.length>1?arguments[1]:void 0)}});var MS=Z("Array").filter,DS=Array.prototype,CS=function(e){var t=e.filter;return e===DS||e instanceof Array&&t===DS.filter?MS:t},PS=gS.f,NS={}.toString,IS="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],AS={f:function(e){return IS&&"[object Window]"==NS.call(e)?function(e){try{return PS(e)}catch(e){return IS.slice()}}(e):PS(g(e))}},FS={f:Na},RS=Y.f,jS=function(e){var t=F.Symbol||(F.Symbol={});_(t,e)||RS(t,e,{value:FS.f(e)})},LS=Al.forEach,zS=ca("hidden"),YS=Na("toPrimitive"),BS=_a.set,HS=_a.getterFor("Symbol"),WS=Object.prototype,US=o.Symbol,VS=Ka("JSON","stringify"),GS=T.f,qS=Y.f,$S=AS.f,ZS=c.f,QS=oa("symbols"),XS=oa("op-symbols"),KS=oa("string-to-symbol-registry"),JS=oa("symbol-to-string-registry"),eO=oa("wks"),tO=o.QObject,nO=!tO||!tO.prototype||!tO.prototype.findChild,iO=a&&s((function(){return 7!=rl(qS({},"a",{get:function(){return qS(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=GS(WS,t);i&&delete WS[t],qS(e,t,n),i&&e!==WS&&qS(WS,t,i)}:qS,rO=function(e,t){var n=QS[e]=rl(US.prototype);return BS(n,{type:"Symbol",tag:e,description:t}),a||(n.description=t),n},oO=Ma?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof US},sO=function e(t,n,i){t===WS&&e(XS,n,i),L(t);var r=b(n,!0);return L(i),_(QS,r)?(i.enumerable?(_(t,zS)&&t[zS][r]&&(t[zS][r]=!1),i=rl(i,{enumerable:d(0,!1)})):(_(t,zS)||qS(t,zS,d(1,{})),t[zS][r]=!0),iO(t,r,i)):qS(t,r,i)},aO=function(e,t){L(e);var n=g(t),i=Za(n).concat(dO(n));return LS(i,(function(t){a&&!lO.call(n,t)||sO(e,t,n[t])})),e},lO=function(e){var t=b(e,!0),n=ZS.call(this,t);return!(this===WS&&_(QS,t)&&!_(XS,t))&&(!(n||!_(this,t)||!_(QS,t)||_(this,zS)&&this[zS][t])||n)},uO=function(e,t){var n=g(e),i=b(t,!0);if(n!==WS||!_(QS,i)||_(XS,i)){var r=GS(n,i);return!r||!_(QS,i)||_(n,zS)&&n[zS][i]||(r.enumerable=!0),r}},cO=function(e){var t=$S(g(e)),n=[];return LS(t,(function(e){_(QS,e)||_(da,e)||n.push(e)})),n},dO=function(e){var t=e===WS,n=$S(t?XS:g(e)),i=[];return LS(n,(function(e){!_(QS,e)||t&&!_(WS,e)||i.push(QS[e])})),i};if(Ta||(gl((US=function(){if(this instanceof US)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=la(e),n=function e(n){this===WS&&e.call(XS,n),_(this,zS)&&_(this[zS],t)&&(this[zS][t]=!1),iO(this,t,d(1,n))};return a&&nO&&iO(WS,t,{configurable:!0,set:n}),rO(t,e)}).prototype,"toString",(function(){return HS(this).tag})),gl(US,"withoutSetter",(function(e){return rO(la(e),e)})),c.f=lO,Y.f=sO,T.f=uO,gS.f=AS.f=cO,mS.f=dO,FS.f=function(e){return rO(Na(e),e)},a&&qS(US.prototype,"description",{configurable:!0,get:function(){return HS(this).description}})),U({global:!0,wrap:!0,forced:!Ta,sham:!Ta},{Symbol:US}),LS(Za(eO),(function(e){jS(e)})),U({target:"Symbol",stat:!0,forced:!Ta},{for:function(e){var t=String(e);if(_(KS,t))return KS[t];var n=US(t);return KS[t]=n,JS[n]=t,n},keyFor:function(e){if(!oO(e))throw TypeError(e+" is not a symbol");if(_(JS,e))return JS[e]},useSetter:function(){nO=!0},useSimple:function(){nO=!1}}),U({target:"Object",stat:!0,forced:!Ta,sham:!a},{create:function(e,t){return void 0===t?rl(e):aO(rl(e),t)},defineProperty:sO,defineProperties:aO,getOwnPropertyDescriptor:uO}),U({target:"Object",stat:!0,forced:!Ta},{getOwnPropertyNames:cO,getOwnPropertySymbols:dO}),U({target:"Object",stat:!0,forced:s((function(){mS.f(1)}))},{getOwnPropertySymbols:function(e){return mS.f(ka(e))}}),VS){var hO=!Ta||s((function(){var e=US();return"[null]"!=VS([e])||"{}"!=VS({a:e})||"{}"!=VS(Object(e))}));U({target:"JSON",stat:!0,forced:hO},{stringify:function(e,t,n){for(var i,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(i=t,(m(t)||void 0!==e)&&!oO(e))return Dl(t)||(t=function(e,t){if("function"==typeof i&&(t=i.call(this,e,t)),!oO(t))return t}),r[1]=t,VS.apply(null,r)}})}US.prototype[YS]||B(US.prototype,YS,US.prototype.valueOf),fl(US,"Symbol"),da[zS]=!0;var fO=F.Object.getOwnPropertySymbols,pO=function(e,t,n){return t in e?ph(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},vO="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff",yO="["+vO+"]",gO=RegExp("^"+yO+yO+"*"),mO=RegExp(yO+yO+"*$"),bO=function(e){return function(t){var n=String(y(t));return 1&e&&(n=n.replace(gO,"")),2&e&&(n=n.replace(mO,"")),n}},wO={start:bO(1),end:bO(2),trim:bO(3)},_O=wO.trim,kO=o.parseFloat,xO=1/kO(vO+"-0")!=-1/0?function(e){var t=_O(String(e)),n=kO(t);return 0===n&&"-"==t.charAt(0)?-0:n}:kO;U({global:!0,forced:parseFloat!=xO},{parseFloat:xO});var SO=F.parseFloat,OO=wO.trim,EO=o.parseInt,TO=/^[+-]?0[Xx]/,MO=8!==EO(vO+"08")||22!==EO(vO+"0x16")?function(e,t){var n=OO(String(e));return EO(n,t>>>0||(TO.test(n)?16:10))}:EO;U({global:!0,forced:parseInt!=MO},{parseInt:MO});var DO=F.parseInt,CO=Ql,PO=Na("iterator"),NO=function(e,t){if(function(e){var t=Object(e);return void 0!==t[PO]||"@@iterator"in t||Qs.hasOwnProperty(ul(t))}(Object(e))||"[object Arguments]"===Object.prototype.toString.call(e)){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=Ch(e);!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return n}},IO=function(e,t){return function(e){if(CO(e))return e}(e)||NO(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()};jS("iterator");var AO=FS.f("iterator"),FO=Na("isConcatSpreadable"),RO=iu>=51||!s((function(){var e=[];return e[FO]=!1,e.concat()[0]!==e})),jO=ou("concat"),LO=function(e){if(!m(e))return!1;var t=e[FO];return void 0!==t?!!t:Dl(e)};U({target:"Array",proto:!0,forced:!RO||!jO},{concat:function(e){var t,n,i,r,o,s=ka(this),a=Pl(s,0),l=0;for(t=-1,i=arguments.length;t<i;t++)if(o=-1===t?s:arguments[t],LO(o)){if(l+(r=Ya(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<r;n++,l++)n in o&&Kl(a,l,o[n])}else{if(l>=9007199254740991)throw TypeError("Maximum allowed index exceeded");Kl(a,l++,o)}return a.length=l,a}}),jS("asyncIterator"),jS("hasInstance"),jS("isConcatSpreadable"),jS("match"),jS("matchAll"),jS("replace"),jS("search"),jS("species"),jS("split"),jS("toPrimitive"),jS("toStringTag"),jS("unscopables"),fl(Math,"Math",!0),fl(o.JSON,"JSON",!0);var zO=F.Symbol;jS("asyncDispose"),jS("dispose"),jS("observable"),jS("patternMatch"),jS("replaceAll");var YO=zO,BO=i((function(e){function t(n){return e.exports=t="function"==typeof YO&&"symbol"==typeof AO?function(e){return typeof e}:function(e){return e&&"function"==typeof YO&&e.constructor===YO&&e!==YO.prototype?"symbol":typeof e},t(n)}e.exports=t})),HO=function(){function e(){hh(this,e)}return yh(e,null,[{key:"choosify",value:function(e,t){var n=["node","edge","label"],i=!0,r=qs(t,"chosen");if("boolean"==typeof r)i=r;else if("object"===BO(r)){if(-1===Cu(n).call(n,e))throw new Error("choosify: subOption '"+e+"' should be one of '"+n.join("', '")+"'");var o=qs(t,["chosen",e]);"boolean"!=typeof o&&"function"!=typeof o||(i=o)}return i}},{key:"pointInRect",value:function(e,t,n){if(e.width<=0||e.height<=0)return!1;if(void 0!==n){var i={x:t.x-n.x,y:t.y-n.y};if(0!==n.angle){var r=-n.angle;t={x:Math.cos(r)*i.x-Math.sin(r)*i.y,y:Math.sin(r)*i.x+Math.cos(r)*i.y}}else t=i}var o=e.x+e.width,s=e.y+e.width;return e.left<t.x&&o>t.x&&e.top<t.y&&s>t.y}},{key:"isValidLabel",value:function(e){return"string"==typeof e&&""!==e}},{key:"getSelfRefCoordinates",value:function(e,t,n,i){var r=i.x,o=i.y;if("function"==typeof i.distanceToBorder){var s=i.distanceToBorder(e,t),a=Math.sin(t)*s,l=Math.cos(t)*s;l===s?(r+=s,o=i.y):a===s?(r=i.x,o-=s):(r+=l,o-=a)}else i.shape.width>i.shape.height?(r=i.x+.5*i.shape.width,o=i.y-n):(r=i.x+n,o=i.y-.5*i.shape.height);return{x:r,y:o}}}]),e}(),WO=ou("slice"),UO=zl("slice",{ACCESSORS:!0,0:0,1:2}),VO=Na("species"),GO=[].slice,qO=Math.max;U({target:"Array",proto:!0,forced:!WO||!UO},{slice:function(e,t){var n,i,r,o=g(this),s=Ya(o.length),a=Wa(e,s),l=Wa(void 0===t?s:t,s);if(Dl(o)&&("function"!=typeof(n=o.constructor)||n!==Array&&!Dl(n.prototype)?m(n)&&null===(n=n[VO])&&(n=void 0):n=void 0,n===Array||void 0===n))return GO.call(o,a,l);for(i=new(void 0===n?Array:n)(qO(l-a,0)),r=0;a<l;a++,r++)a in o&&Kl(i,r,o[a]);return i.length=r,i}});var $O=Z("Array").slice,ZO=Array.prototype,QO=function(e){var t=e.slice;return e===ZO||e instanceof Array&&t===ZO.slice?$O:t},XO=Z("Array").values,KO=Array.prototype,JO={DOMTokenList:!0,NodeList:!0},eE=function(e){var t=e.values;return e===KO||e instanceof Array&&t===KO.values||JO.hasOwnProperty(ul(e))?XO:t},tE=Object.assign,nE=Object.defineProperty,iE=!tE||s((function(){if(a&&1!==tE({b:1},tE(nE({},"a",{enumerable:!0,get:function(){nE(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=tE({},e)[n]||"abcdefghijklmnopqrst"!=Za(tE({},t)).join("")}))?function(e,t){for(var n=ka(e),i=arguments.length,r=1,o=mS.f,s=c.f;i>r;)for(var l,u=v(arguments[r++]),d=o?Za(u).concat(o(u)):Za(u),h=d.length,f=0;h>f;)l=d[f++],a&&!s.call(u,l)||(n[l]=u[l]);return n}:tE;U({target:"Object",stat:!0,forced:Object.assign!==iE},{assign:iE});var rE=F.Object.assign,oE=function(){function e(t){hh(this,e),this.measureText=t,this.current=0,this.width=0,this.height=0,this.lines=[]}return yh(e,[{key:"_add",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"normal";void 0===this.lines[e]&&(this.lines[e]={width:0,height:0,blocks:[]});var i=t;void 0!==t&&""!==t||(i=" ");var r=this.measureText(i,n),o=rE({},eE(r));o.text=t,o.width=r.width,o.mod=n,void 0!==t&&""!==t||(o.width=0),this.lines[e].blocks.push(o),this.lines[e].width+=o.width}},{key:"curWidth",value:function(){var e=this.lines[this.current];return void 0===e?0:e.width}},{key:"append",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"normal";this._add(this.current,e,t)}},{key:"newLine",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"normal";this._add(this.current,e,t),this.current++}},{key:"determineLineHeights",value:function(){for(var e=0;e<this.lines.length;e++){var t=this.lines[e],n=0;if(void 0!==t.blocks)for(var i=0;i<t.blocks.length;i++){var r=t.blocks[i];n<r.height&&(n=r.height)}t.height=n}}},{key:"determineLabelSize",value:function(){for(var e=0,t=0,n=0;n<this.lines.length;n++){var i=this.lines[n];i.width>e&&(e=i.width),t+=i.height}this.width=e,this.height=t}},{key:"removeEmptyBlocks",value:function(){for(var e=[],t=0;t<this.lines.length;t++){var n=this.lines[t];if(0!==n.blocks.length&&(t!==this.lines.length-1||0!==n.width)){var i={};rE(i,n),i.blocks=[];for(var r=void 0,o=[],s=0;s<n.blocks.length;s++){var a=n.blocks[s];0!==a.width?o.push(a):void 0===r&&(r=a)}0===o.length&&void 0!==r&&o.push(r),i.blocks=o,e.push(i)}}return e}},{key:"finalize",value:function(){this.determineLineHeights(),this.determineLabelSize();var e=this.removeEmptyBlocks();return{width:this.width,height:this.height,lines:e}}}]),e}(),sE={"<b>":/<b>/,"<i>":/<i>/,"<code>":/<code>/,"</b>":/<\/b>/,"</i>":/<\/i>/,"</code>":/<\/code>/,"*":/\*/,_:/\_/,"`":/`/,afterBold:/[^\*]/,afterItal:/[^_]/,afterMono:/[^`]/},aE=function(){function e(t){hh(this,e),this.text=t,this.bold=!1,this.ital=!1,this.mono=!1,this.spacing=!1,this.position=0,this.buffer="",this.modStack=[],this.blocks=[]}return yh(e,[{key:"mod",value:function(){return 0===this.modStack.length?"normal":this.modStack[0]}},{key:"modName",value:function(){return 0===this.modStack.length?"normal":"mono"===this.modStack[0]?"mono":this.bold&&this.ital?"boldital":this.bold?"bold":this.ital?"ital":void 0}},{key:"emitBlock",value:function(){this.spacing&&(this.add(" "),this.spacing=!1),this.buffer.length>0&&(this.blocks.push({text:this.buffer,mod:this.modName()}),this.buffer="")}},{key:"add",value:function(e){" "===e&&(this.spacing=!0),this.spacing&&(this.buffer+=" ",this.spacing=!1)," "!=e&&(this.buffer+=e)}},{key:"parseWS",value:function(e){return!!/[ \t]/.test(e)&&(this.mono?this.add(e):this.spacing=!0,!0)}},{key:"setTag",value:function(e){this.emitBlock(),this[e]=!0,this.modStack.unshift(e)}},{key:"unsetTag",value:function(e){this.emitBlock(),this[e]=!1,this.modStack.shift()}},{key:"parseStartTag",value:function(e,t){return!(this.mono||this[e]||!this.match(t))&&(this.setTag(e),!0)}},{key:"match",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this.prepareRegExp(e),i=IO(n,2),r=i[0],o=i[1],s=r.test(this.text.substr(this.position,o));return s&&t&&(this.position+=o-1),s}},{key:"parseEndTag",value:function(e,t,n){var i=this.mod()===e;return!(!(i="mono"===e?i&&this.mono:i&&!this.mono)||!this.match(t))&&(void 0!==n?(this.position===this.text.length-1||this.match(n,!1))&&this.unsetTag(e):this.unsetTag(e),!0)}},{key:"replace",value:function(e,t){return!!this.match(e)&&(this.add(t),this.position+=length-1,!0)}},{key:"prepareRegExp",value:function(e){var t,n;if(e instanceof RegExp)n=e,t=1;else{var i=sE[e];n=void 0!==i?i:new RegExp(e),t=e.length}return[n,t]}}]),e}(),lE=function(){function e(t,n,i,r){var o=this;hh(this,e),this.ctx=t,this.parent=n,this.selected=i,this.hover=r,this.lines=new oE((function(e,n){if(void 0===e)return 0;var s=o.parent.getFormattingValues(t,i,r,n),a=0;return""!==e&&(a=o.ctx.measureText(e).width),{width:a,values:s}}))}return yh(e,[{key:"process",value:function(e){if(!HO.isValidLabel(e))return this.lines.finalize();var t=this.parent.fontOptions;e=(e=e.replace(/\r\n/g,"\n")).replace(/\r/g,"\n");var n=String(e).split("\n"),i=n.length;if(t.multi)for(var r=0;r<i;r++){var o=this.splitBlocks(n[r],t.multi);if(void 0!==o)if(0!==o.length){if(t.maxWdt>0)for(var s=0;s<o.length;s++){var a=o[s].mod,l=o[s].text;this.splitStringIntoLines(l,a,!0)}else for(var u=0;u<o.length;u++){var c=o[u].mod,d=o[u].text;this.lines.append(d,c)}this.lines.newLine()}else this.lines.newLine("")}else if(t.maxWdt>0)for(var h=0;h<i;h++)this.splitStringIntoLines(n[h]);else for(var f=0;f<i;f++)this.lines.newLine(n[f]);return this.lines.finalize()}},{key:"decodeMarkupSystem",value:function(e){var t="none";return"markdown"===e||"md"===e?t="markdown":!0!==e&&"html"!==e||(t="html"),t}},{key:"splitHtmlBlocks",value:function(e){for(var t=new aE(e),n=function(e){return!!/&/.test(e)&&(t.replace(t.text,"&lt;","<")||t.replace(t.text,"&amp;","&")||t.add("&"),!0)};t.position<t.text.length;){var i=t.text.charAt(t.position);t.parseWS(i)||/</.test(i)&&(t.parseStartTag("bold","<b>")||t.parseStartTag("ital","<i>")||t.parseStartTag("mono","<code>")||t.parseEndTag("bold","</b>")||t.parseEndTag("ital","</i>")||t.parseEndTag("mono","</code>"))||n(i)||t.add(i),t.position++}return t.emitBlock(),t.blocks}},{key:"splitMarkdownBlocks",value:function(e){for(var t=this,n=new aE(e),i=!0,r=function(e){return!!/\\/.test(e)&&(n.position<t.text.length+1&&(n.position++,e=t.text.charAt(n.position),/ \t/.test(e)?n.spacing=!0:(n.add(e),i=!1)),!0)};n.position<n.text.length;){var o=n.text.charAt(n.position);n.parseWS(o)||r(o)||(i||n.spacing)&&(n.parseStartTag("bold","*")||n.parseStartTag("ital","_")||n.parseStartTag("mono","`"))||n.parseEndTag("bold","*","afterBold")||n.parseEndTag("ital","_","afterItal")||n.parseEndTag("mono","`","afterMono")||(n.add(o),i=!1),n.position++}return n.emitBlock(),n.blocks}},{key:"splitBlocks",value:function(e,t){var n=this.decodeMarkupSystem(t);return"none"===n?[{text:e,mod:"normal"}]:"markdown"===n?this.splitMarkdownBlocks(e):"html"===n?this.splitHtmlBlocks(e):void 0}},{key:"overMaxWidth",value:function(e){var t=this.ctx.measureText(e).width;return this.lines.curWidth()+t>this.parent.fontOptions.maxWdt}},{key:"getLongestFit",value:function(e){for(var t="",n=0;n<e.length;){var i=t+(""===t?"":" ")+e[n];if(this.overMaxWidth(i))break;t=i,n++}return n}},{key:"getLongestFitWord",value:function(e){for(var t=0;t<e.length&&!this.overMaxWidth(QO(e).call(e,0,t));)t++;return t}},{key:"splitStringIntoLines",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"normal",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.parent.getFormattingValues(this.ctx,this.selected,this.hover,t);for(var i=(e=(e=e.replace(/^( +)/g,"$1\r")).replace(/([^\r][^ ]*)( +)/g,"$1\r$2\r")).split("\r");i.length>0;){var r=this.getLongestFit(i);if(0===r){var o=i[0],s=this.getLongestFitWord(o);this.lines.newLine(QO(o).call(o,0,s),t),i[0]=QO(o).call(o,s)}else{var a=r;" "===i[r-1]?r--:" "===i[a]&&a++;var l=QO(i).call(i,0,r).join("");r==i.length&&n?this.lines.append(l,t):this.lines.newLine(l,t),i=QO(i).call(i,a)}}}}]),e}(),uE=["bold","ital","boldital","mono"],cE=function(){function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];hh(this,e),this.body=t,this.pointToSelf=!1,this.baseSize=void 0,this.fontOptions={},this.setOptions(n),this.size={top:0,left:0,width:0,height:0,yLine:0},this.isEdgeLabel=i}return yh(e,[{key:"setOptions",value:function(e){if(this.elementOptions=e,this.initFontOptions(e.font),HO.isValidLabel(e.label)?this.labelDirty=!0:e.label=void 0,void 0!==e.font&&null!==e.font)if("string"==typeof e.font)this.baseSize=this.fontOptions.size;else if("object"===BO(e.font)){var t=e.font.size;void 0!==t&&(this.baseSize=t)}}},{key:"initFontOptions",value:function(t){var n=this;ps(uE,(function(e){n.fontOptions[e]={}})),e.parseFontString(this.fontOptions,t)?this.fontOptions.vadjust=0:ps(t,(function(e,t){null!=e&&"object"!==BO(e)&&(n.fontOptions[t]=e)}))}},{key:"constrain",value:function(e){var t={constrainWidth:!1,maxWdt:-1,minWdt:-1,constrainHeight:!1,minHgt:-1,valign:"middle"},n=qs(e,"widthConstraint");if("number"==typeof n)t.maxWdt=Number(n),t.minWdt=Number(n);else if("object"===BO(n)){var i=qs(e,["widthConstraint","maximum"]);"number"==typeof i&&(t.maxWdt=Number(i));var r=qs(e,["widthConstraint","minimum"]);"number"==typeof r&&(t.minWdt=Number(r))}var o=qs(e,"heightConstraint");if("number"==typeof o)t.minHgt=Number(o);else if("object"===BO(o)){var s=qs(e,["heightConstraint","minimum"]);"number"==typeof s&&(t.minHgt=Number(s));var a=qs(e,["heightConstraint","valign"]);"string"==typeof a&&("top"!==a&&"bottom"!==a||(t.valign=a))}return t}},{key:"update",value:function(e,t){this.setOptions(e,!0),this.propagateFonts(t),rs(this.fontOptions,this.constrain(t)),this.fontOptions.chooser=HO.choosify("label",t)}},{key:"adjustSizes",value:function(e){var t=e?e.right+e.left:0;this.fontOptions.constrainWidth&&(this.fontOptions.maxWdt-=t,this.fontOptions.minWdt-=t);var n=e?e.top+e.bottom:0;this.fontOptions.constrainHeight&&(this.fontOptions.minHgt-=n)}},{key:"addFontOptionsToPile",value:function(e,t){for(var n=0;n<t.length;++n)this.addFontToPile(e,t[n])}},{key:"addFontToPile",value:function(e,t){if(void 0!==t&&void 0!==t.font&&null!==t.font){var n=t.font;e.push(n)}}},{key:"getBasicOptions",value:function(t){for(var n={},i=0;i<t.length;++i){var r=t[i],o={};e.parseFontString(o,r)&&(r=o),ps(r,(function(e,t){void 0!==e&&(n.hasOwnProperty(t)||(-1!==Cu(uE).call(uE,t)?n[t]={}:n[t]=e))}))}return n}},{key:"getFontOption",value:function(t,n,i){for(var r,o=0;o<t.length;++o){var s=t[o];if(s.hasOwnProperty(n)){if(null==(r=s[n]))continue;var a={};if(e.parseFontString(a,r)&&(r=a),r.hasOwnProperty(i))return r[i]}}if(this.fontOptions.hasOwnProperty(i))return this.fontOptions[i];throw new Error("Did not find value for multi-font for property: '"+i+"'")}},{key:"getFontOptions",value:function(e,t){for(var n={},i=["color","size","face","mod","vadjust"],r=0;r<i.length;++r){var o=i[r];n[o]=this.getFontOption(e,t,o)}return n}},{key:"propagateFonts",value:function(e){var t=this,n=[];this.addFontOptionsToPile(n,e),this.fontOptions=this.getBasicOptions(n);for(var i=function(e){var i=uE[e],r=t.fontOptions[i];ps(t.getFontOptions(n,i),(function(e,t){r[t]=e})),r.size=Number(r.size),r.vadjust=Number(r.vadjust)},r=0;r<uE.length;++r)i(r)}},{key:"draw",value:function(e,t,n,i,r){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"middle";if(void 0!==this.elementOptions.label){var s=this.fontOptions.size*this.body.view.scale;this.elementOptions.label&&s<this.elementOptions.scaling.label.drawThreshold-1||(s>=this.elementOptions.scaling.label.maxVisible&&(s=Number(this.elementOptions.scaling.label.maxVisible)/this.body.view.scale),this.calculateLabelSize(e,i,r,t,n,o),this._drawBackground(e),this._drawText(e,t,this.size.yLine,o,s))}}},{key:"_drawBackground",value:function(e){if(void 0!==this.fontOptions.background&&"none"!==this.fontOptions.background){e.fillStyle=this.fontOptions.background;var t=this.getSize();e.fillRect(t.left,t.top,t.width,t.height)}}},{key:"_drawText",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"middle",r=arguments.length>4?arguments[4]:void 0,o=this._setAlignment(e,t,n,i),s=IO(o,2);t=s[0],n=s[1],e.textAlign="left",t-=this.size.width/2,this.fontOptions.valign&&this.size.height>this.size.labelHeight&&("top"===this.fontOptions.valign&&(n-=(this.size.height-this.size.labelHeight)/2),"bottom"===this.fontOptions.valign&&(n+=(this.size.height-this.size.labelHeight)/2));for(var a=0;a<this.lineCount;a++){var l=this.lines[a];if(l&&l.blocks){var u=0;this.isEdgeLabel||"center"===this.fontOptions.align?u+=(this.size.width-l.width)/2:"right"===this.fontOptions.align&&(u+=this.size.width-l.width);for(var c=0;c<l.blocks.length;c++){var d=l.blocks[c];e.font=d.font;var h=this._getColor(d.color,r,d.strokeColor),f=IO(h,2),p=f[0],v=f[1];d.strokeWidth>0&&(e.lineWidth=d.strokeWidth,e.strokeStyle=v,e.lineJoin="round"),e.fillStyle=p,d.strokeWidth>0&&e.strokeText(d.text,t+u,n+d.vadjust),e.fillText(d.text,t+u,n+d.vadjust),u+=d.width}n+=l.height}}}},{key:"_setAlignment",value:function(e,t,n,i){return this.isEdgeLabel&&"horizontal"!==this.fontOptions.align&&!1===this.pointToSelf?(t=0,n=0,"top"===this.fontOptions.align?(e.textBaseline="alphabetic",n-=4):"bottom"===this.fontOptions.align?(e.textBaseline="hanging",n+=4):e.textBaseline="middle"):e.textBaseline=i,[t,n]}},{key:"_getColor",value:function(e,t,n){var i=e||"#000000",r=n||"#ffffff";if(t<=this.elementOptions.scaling.label.drawThreshold){var o=Math.max(0,Math.min(1,1-(this.elementOptions.scaling.label.drawThreshold-t)));i=Os(i,o),r=Os(r,o)}return[i,r]}},{key:"getTextSize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return this._processLabel(e,t,n),{width:this.size.width,height:this.size.height,lineCount:this.lineCount}}},{key:"getSize",value:function(){var e=this.size.left,t=this.size.top-1;if(this.isEdgeLabel){var n=.5*-this.size.width;switch(this.fontOptions.align){case"middle":e=n,t=.5*-this.size.height;break;case"top":e=n,t=-(this.size.height+2);break;case"bottom":e=n,t=2}}return{left:e,top:t,width:this.size.width,height:this.size.height}}},{key:"calculateLabelSize",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"middle";this._processLabel(e,t,n),this.size.left=i-.5*this.size.width,this.size.top=r-.5*this.size.height,this.size.yLine=r+.5*(1-this.lineCount)*this.fontOptions.size,"hanging"===o&&(this.size.top+=.5*this.fontOptions.size,this.size.top+=4,this.size.yLine+=4)}},{key:"getFormattingValues",value:function(e,t,n,i){var r=function(e,t,n){return"normal"===t?"mod"===n?"":e[n]:void 0!==e[t][n]?e[t][n]:e[n]},o={color:r(this.fontOptions,i,"color"),size:r(this.fontOptions,i,"size"),face:r(this.fontOptions,i,"face"),mod:r(this.fontOptions,i,"mod"),vadjust:r(this.fontOptions,i,"vadjust"),strokeWidth:this.fontOptions.strokeWidth,strokeColor:this.fontOptions.strokeColor};(t||n)&&("normal"===i&&!0===this.fontOptions.chooser&&this.elementOptions.labelHighlightBold?o.mod="bold":"function"==typeof this.fontOptions.chooser&&this.fontOptions.chooser(o,this.elementOptions.id,t,n));var s="";return void 0!==o.mod&&""!==o.mod&&(s+=o.mod+" "),s+=o.size+"px "+o.face,e.font=s.replace(/"/g,""),o.font=e.font,o.height=o.size,o}},{key:"differentState",value:function(e,t){return e!==this.selectedState||t!==this.hoverState}},{key:"_processLabelText",value:function(e,t,n,i){return new lE(e,this,t,n).process(i)}},{key:"_processLabel",value:function(e,t,n){if(!1!==this.labelDirty||this.differentState(t,n)){var i=this._processLabelText(e,t,n,this.elementOptions.label);this.fontOptions.minWdt>0&&i.width<this.fontOptions.minWdt&&(i.width=this.fontOptions.minWdt),this.size.labelHeight=i.height,this.fontOptions.minHgt>0&&i.height<this.fontOptions.minHgt&&(i.height=this.fontOptions.minHgt),this.lines=i.lines,this.lineCount=i.lines.length,this.size.width=i.width,this.size.height=i.height,this.selectedState=t,this.hoverState=n,this.labelDirty=!1}}},{key:"visible",value:function(){return 0!==this.size.width&&0!==this.size.height&&void 0!==this.elementOptions.label&&!(this.fontOptions.size*this.body.view.scale<this.elementOptions.scaling.label.drawThreshold-1)}}],[{key:"parseFontString",value:function(e,t){if(!t||"string"!=typeof t)return!1;var n=t.split(" ");return e.size=+n[0].replace("px",""),e.face=n[1],e.color=n[2],!0}}]),e}(),dE=function(e,t){return!t||"object"!==BO(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t},hE=s((function(){Ea(1)}));U({target:"Object",stat:!0,forced:hE,sham:!xa},{getPrototypeOf:function(e){return Ea(ka(e))}});var fE=F.Object.getPrototypeOf;U({target:"Object",stat:!0},{setPrototypeOf:yl});var pE=F.Object.setPrototypeOf,vE=i((function(e){function t(n){return e.exports=t=pE?fE:function(e){return e.__proto__||fE(e)},t(n)}e.exports=t})),yE=Nu,gE=i((function(e){function t(n,i){return e.exports=t=pE||function(e,t){return e.__proto__=t,e},t(n,i)}e.exports=t})),mE=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=yE(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&gE(e,t)};U({target:"Array",proto:!0},{fill:function(e){for(var t=ka(this),n=Ya(t.length),i=arguments.length,r=Wa(i>1?arguments[1]:void 0,n),o=i>2?arguments[2]:void 0,s=void 0===o?n:Wa(o,n);s>r;)t[r++]=e;return t}});var bE=Z("Array").fill,wE=Array.prototype,_E=function(e){var t=e.fill;return e===wE||e instanceof Array&&t===wE.fill?bE:t},kE=function(){function e(t,n,i){hh(this,e),this.body=n,this.labelModule=i,this.setOptions(t),this.top=void 0,this.left=void 0,this.height=void 0,this.width=void 0,this.radius=void 0,this.margin=void 0,this.refreshNeeded=!0,this.boundingBox={top:0,left:0,right:0,bottom:0}}return yh(e,[{key:"setOptions",value:function(e){this.options=e}},{key:"_setMargins",value:function(e){this.margin={},this.options.margin&&("object"==BO(this.options.margin)?(this.margin.top=this.options.margin.top,this.margin.right=this.options.margin.right,this.margin.bottom=this.options.margin.bottom,this.margin.left=this.options.margin.left):(this.margin.top=this.options.margin,this.margin.right=this.options.margin,this.margin.bottom=this.options.margin,this.margin.left=this.options.margin)),e.adjustSizes(this.margin)}},{key:"_distanceToBorder",value:function(e,t){var n=this.options.borderWidth;return e&&this.resize(e),Math.min(Math.abs(this.width/2/Math.cos(t)),Math.abs(this.height/2/Math.sin(t)))+n}},{key:"enableShadow",value:function(e,t){t.shadow&&(e.shadowColor=t.shadowColor,e.shadowBlur=t.shadowSize,e.shadowOffsetX=t.shadowX,e.shadowOffsetY=t.shadowY)}},{key:"disableShadow",value:function(e,t){t.shadow&&(e.shadowColor="rgba(0,0,0,0)",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0)}},{key:"enableBorderDashes",value:function(e,t){if(!1!==t.borderDashes)if(void 0!==e.setLineDash){var n=t.borderDashes;!0===n&&(n=[5,15]),e.setLineDash(n)}else console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."),this.options.shapeProperties.borderDashes=!1,t.borderDashes=!1}},{key:"disableBorderDashes",value:function(e,t){!1!==t.borderDashes&&(void 0!==e.setLineDash?e.setLineDash([0]):(console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."),this.options.shapeProperties.borderDashes=!1,t.borderDashes=!1))}},{key:"needsRefresh",value:function(e,t){return!0===this.refreshNeeded?(this.refreshNeeded=!1,!0):void 0===this.width||this.labelModule.differentState(e,t)}},{key:"initContextForDraw",value:function(e,t){var n=t.borderWidth/this.body.view.scale;e.lineWidth=Math.min(this.width,n),e.strokeStyle=t.borderColor,e.fillStyle=t.color}},{key:"performStroke",value:function(e,t){var n=t.borderWidth/this.body.view.scale;e.save(),n>0&&(this.enableBorderDashes(e,t),e.stroke(),this.disableBorderDashes(e,t)),e.restore()}},{key:"performFill",value:function(e,t){this.enableShadow(e,t),_E(e).call(e),this.disableShadow(e,t),this.performStroke(e,t)}},{key:"_addBoundingBoxMargin",value:function(e){this.boundingBox.left-=e,this.boundingBox.top-=e,this.boundingBox.bottom+=e,this.boundingBox.right+=e}},{key:"_updateBoundingBox",value:function(e,t,n,i,r){void 0!==n&&this.resize(n,i,r),this.left=e-this.width/2,this.top=t-this.height/2,this.boundingBox.left=this.left,this.boundingBox.top=this.top,this.boundingBox.bottom=this.top+this.height,this.boundingBox.right=this.left+this.width}},{key:"updateBoundingBox",value:function(e,t,n,i,r){this._updateBoundingBox(e,t,n,i,r)}},{key:"getDimensionsFromLabel",value:function(e,t,n){this.textSize=this.labelModule.getTextSize(e,t,n);var i=this.textSize.width,r=this.textSize.height;return 0===i&&(i=14,r=14),{width:i,height:r}}}]),e}(),xE=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i)))._setMargins(i),r}return mE(t,kE),yh(t,[{key:"resize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selected,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n);this.width=i.width+this.margin.right+this.margin.left,this.height=i.height+this.margin.top+this.margin.bottom,this.radius=this.width/2}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this.initContextForDraw(e,o),ee(e,this.left,this.top,this.width,this.height,o.borderRadius),this.performFill(e,o),this.updateBoundingBox(t,n,e,i,r),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,i,r)}},{key:"updateBoundingBox",value:function(e,t,n,i,r){this._updateBoundingBox(e,t,n,i,r);var o=this.options.shapeProperties.borderRadius;this._addBoundingBoxMargin(o)}},{key:"distanceToBorder",value:function(e,t){e&&this.resize(e);var n=this.options.borderWidth;return Math.min(Math.abs(this.width/2/Math.cos(t)),Math.abs(this.height/2/Math.sin(t)))+n}}]),t}(),SE=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i))).labelOffset=0,r.selected=!1,r}return mE(t,kE),yh(t,[{key:"setOptions",value:function(e,t,n){this.options=e,void 0===t&&void 0===n||this.setImages(t,n)}},{key:"setImages",value:function(e,t){t&&this.selected?(this.imageObj=t,this.imageObjAlt=e):(this.imageObj=e,this.imageObjAlt=t)}},{key:"switchImages",value:function(e){var t=e&&!this.selected||!e&&this.selected;if(this.selected=e,void 0!==this.imageObjAlt&&t){var n=this.imageObj;this.imageObj=this.imageObjAlt,this.imageObjAlt=n}}},{key:"_getImagePadding",value:function(){var e={top:0,right:0,bottom:0,left:0};if(this.options.imagePadding){var t=this.options.imagePadding;"object"==BO(t)?(e.top=t.top,e.right=t.right,e.bottom=t.bottom,e.left=t.left):(e.top=t,e.right=t,e.bottom=t,e.left=t)}return e}},{key:"_resizeImage",value:function(){var e,t;if(!1===this.options.shapeProperties.useImageSize){var n=1,i=1;this.imageObj.width&&this.imageObj.height&&(this.imageObj.width>this.imageObj.height?n=this.imageObj.width/this.imageObj.height:i=this.imageObj.height/this.imageObj.width),e=2*this.options.size*n,t=2*this.options.size*i}else{var r=this._getImagePadding();e=this.imageObj.width+r.left+r.right,t=this.imageObj.height+r.top+r.bottom}this.width=e,this.height=t,this.radius=.5*this.width}},{key:"_drawRawCircle",value:function(e,t,n,i){this.initContextForDraw(e,i),J(e,t,n,i.size),this.performFill(e,i)}},{key:"_drawImageAtPosition",value:function(e,t){if(0!=this.imageObj.width){e.globalAlpha=1,this.enableShadow(e,t);var n=1;!0===this.options.shapeProperties.interpolation&&(n=this.imageObj.width/this.width/this.body.view.scale);var i=this._getImagePadding(),r=this.left+i.left,o=this.top+i.top,s=this.width-i.left-i.right,a=this.height-i.top-i.bottom;this.imageObj.drawImageAtPosition(e,n,r,o,s,a),this.disableShadow(e,t)}}},{key:"_drawImageLabel",value:function(e,t,n,i,r){var o,s=0;if(void 0!==this.height){s=.5*this.height;var a=this.labelModule.getTextSize(e,i,r);a.lineCount>=1&&(s+=a.height/2)}o=n+s,this.options.label&&(this.labelOffset=s),this.labelModule.draw(e,t,o,i,r,"hanging")}}]),t}(),OE=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i)))._setMargins(i),r}return mE(t,SE),yh(t,[{key:"resize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selected,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n),r=Math.max(i.width+this.margin.right+this.margin.left,i.height+this.margin.top+this.margin.bottom);this.options.size=r/2,this.width=r,this.height=r,this.radius=this.width/2}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this._drawRawCircle(e,t,n,o),this.updateBoundingBox(t,n),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,n,i,r)}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size}},{key:"distanceToBorder",value:function(e,t){return e&&this.resize(e),.5*this.width}}]),t}(),EE=function(e){function t(e,n,i,r,o){var s;return hh(this,t),(s=dE(this,vE(t).call(this,e,n,i))).setImages(r,o),s}return mE(t,SE),yh(t,[{key:"resize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selected,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.hover,i=void 0===this.imageObj.src||void 0===this.imageObj.width||void 0===this.imageObj.height;if(i){var r=2*this.options.size;return this.width=r,this.height=r,void(this.radius=.5*this.width)}this.needsRefresh(t,n)&&this._resizeImage()}},{key:"draw",value:function(e,t,n,i,r,o){this.switchImages(i),this.resize(),this.left=t-this.width/2,this.top=n-this.height/2,this._drawRawCircle(e,t,n,o),e.save(),e.clip(),this._drawImageAtPosition(e,o),e.restore(),this._drawImageLabel(e,t,n,i,r),this.updateBoundingBox(t,n)}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size,this.boundingBox.left=Math.min(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=Math.max(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=Math.max(this.boundingBox.bottom,this.boundingBox.bottom+this.labelOffset)}},{key:"distanceToBorder",value:function(e,t){return e&&this.resize(e),.5*this.width}}]),t}(),TE=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i)))._setMargins(i),r}return mE(t,kE),yh(t,[{key:"resize",value:function(e,t,n){if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n).width+this.margin.right+this.margin.left;this.width=i,this.height=i,this.radius=this.width/2}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this.initContextForDraw(e,o),ne(e,t-this.width/2,n-this.height/2,this.width,this.height),this.performFill(e,o),this.updateBoundingBox(t,n,e,i,r),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,i,r)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),ME=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,kE),yh(t,[{key:"resize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selected,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.hover,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{size:this.options.size};if(this.needsRefresh(t,n)){this.labelModule.getTextSize(e,t,n);var r=2*i.size;this.width=r,this.height=r,this.radius=.5*this.width}}},{key:"_drawShape",value:function(e,t,n,i,r,o,s,a){var l;if(this.resize(e,o,s,a),this.left=i-this.width/2,this.top=r-this.height/2,this.initContextForDraw(e,a),(l=t,Object.prototype.hasOwnProperty.call(re,l)?re[l]:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];CanvasRenderingContext2D.prototype[l].call(e,n)})(e,i,r,a.size),this.performFill(e,a),void 0!==this.options.icon&&void 0!==this.options.icon.code&&(e.font=(o?"bold ":"")+this.height/2+"px "+(this.options.icon.face||"FontAwesome"),e.fillStyle=this.options.icon.color||"black",e.textAlign="center",e.textBaseline="middle",e.fillText(this.options.icon.code,i,r)),void 0!==this.options.label){this.labelModule.calculateLabelSize(e,o,s,i,r,"hanging");var u=r+.5*this.height+.5*this.labelModule.size.height;this.labelModule.draw(e,i,u,o,s,"hanging")}this.updateBoundingBox(i,r)}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size,void 0!==this.options.label&&this.labelModule.size.width>0&&(this.boundingBox.left=Math.min(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=Math.max(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=Math.max(this.boundingBox.bottom,this.boundingBox.bottom+this.labelModule.size.height))}}]),t}(),DE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"diamond",4,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),CE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"circle",2,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return e&&this.resize(e),this.options.size}}]),t}(),PE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,kE),yh(t,[{key:"resize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selected,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n);this.height=2*i.height,this.width=i.width+i.height,this.radius=.5*this.width}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-.5*this.width,this.top=n-.5*this.height,this.initContextForDraw(e,o),te(e,this.left,this.top,this.width,this.height),this.performFill(e,o),this.updateBoundingBox(t,n,e,i,r),this.labelModule.draw(e,t,n,i,r)}},{key:"distanceToBorder",value:function(e,t){e&&this.resize(e);var n=.5*this.width,i=.5*this.height,r=Math.sin(t)*n,o=Math.cos(t)*i;return n*i/Math.sqrt(r*r+o*o)}}]),t}(),NE=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i)))._setMargins(i),r}return mE(t,kE),yh(t,[{key:"resize",value:function(e,t,n){this.needsRefresh(t,n)&&(this.iconSize={width:Number(this.options.icon.size),height:Number(this.options.icon.size)},this.width=this.iconSize.width+this.margin.right+this.margin.left,this.height=this.iconSize.height+this.margin.top+this.margin.bottom,this.radius=.5*this.width)}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.options.icon.size=this.options.icon.size||50,this.left=t-this.width/2,this.top=n-this.height/2,this._icon(e,t,n,i,r,o),void 0!==this.options.label&&this.labelModule.draw(e,this.left+this.iconSize.width/2+this.margin.left,n+this.height/2+5,i),this.updateBoundingBox(t,n)}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-.5*this.options.icon.size,this.boundingBox.left=e-.5*this.options.icon.size,this.boundingBox.right=e+.5*this.options.icon.size,this.boundingBox.bottom=t+.5*this.options.icon.size,void 0!==this.options.label&&this.labelModule.size.width>0&&(this.boundingBox.left=Math.min(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=Math.max(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=Math.max(this.boundingBox.bottom,this.boundingBox.bottom+this.labelModule.size.height+5))}},{key:"_icon",value:function(e,t,n,i,r,o){var s=Number(this.options.icon.size);void 0!==this.options.icon.code?(e.font=[null!=this.options.icon.weight?this.options.icon.weight:i?"bold":"",(null!=this.options.icon.weight&&i?5:0)+s+"px",this.options.icon.face].join(" "),e.fillStyle=this.options.icon.color||"black",e.textAlign="center",e.textBaseline="middle",this.enableShadow(e,o),e.fillText(this.options.icon.code,t,n),this.disableShadow(e,o)):console.error("When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally.")}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),IE=function(e){function t(e,n,i,r,o){var s;return hh(this,t),(s=dE(this,vE(t).call(this,e,n,i))).setImages(r,o),s}return mE(t,SE),yh(t,[{key:"resize",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selected,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.hover,i=void 0===this.imageObj.src||void 0===this.imageObj.width||void 0===this.imageObj.height;if(i){var r=2*this.options.size;return this.width=r,void(this.height=r)}this.needsRefresh(t,n)&&this._resizeImage()}},{key:"draw",value:function(e,t,n,i,r,o){if(this.switchImages(i),this.resize(),this.left=t-this.width/2,this.top=n-this.height/2,!0===this.options.shapeProperties.useBorderWithImage){var s=this.options.borderWidth,a=this.options.borderWidthSelected||2*this.options.borderWidth,l=(i?a:s)/this.body.view.scale;e.lineWidth=Math.min(this.width,l),e.beginPath(),e.strokeStyle=i?this.options.color.highlight.border:r?this.options.color.hover.border:this.options.color.border,e.fillStyle=i?this.options.color.highlight.background:r?this.options.color.hover.background:this.options.color.background,e.rect(this.left-.5*e.lineWidth,this.top-.5*e.lineWidth,this.width+e.lineWidth,this.height+e.lineWidth),_E(e).call(e),this.performStroke(e,o),e.closePath()}this._drawImageAtPosition(e,o),this._drawImageLabel(e,t,n,i,r),this.updateBoundingBox(t,n)}},{key:"updateBoundingBox",value:function(e,t){this.resize(),this._updateBoundingBox(e,t),void 0!==this.options.label&&this.labelModule.size.width>0&&(this.boundingBox.left=Math.min(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=Math.max(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=Math.max(this.boundingBox.bottom,this.boundingBox.bottom+this.labelOffset))}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),AE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"square",2,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),FE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"hexagon",4,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),RE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"star",4,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),jE=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i)))._setMargins(i),r}return mE(t,kE),yh(t,[{key:"resize",value:function(e,t,n){this.needsRefresh(t,n)&&(this.textSize=this.labelModule.getTextSize(e,t,n),this.width=this.textSize.width+this.margin.right+this.margin.left,this.height=this.textSize.height+this.margin.top+this.margin.bottom,this.radius=.5*this.width)}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this.enableShadow(e,o),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,i,r),this.disableShadow(e,o),this.updateBoundingBox(t,n,e,i,r)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),LE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"triangle",3,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),zE=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ME),yh(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"triangleDown",3,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(),YE=Ka("JSON","stringify"),BE=/[\uD800-\uDFFF]/g,HE=/^[\uD800-\uDBFF]$/,WE=/^[\uDC00-\uDFFF]$/,UE=function(e,t,n){var i=n.charAt(t-1),r=n.charAt(t+1);return HE.test(e)&&!WE.test(r)||WE.test(e)&&!HE.test(i)?"\\u"+e.charCodeAt(0).toString(16):e},VE=s((function(){return'"\\udf06\\ud834"'!==YE("\udf06\ud834")||'"\\udead"'!==YE("\udead")}));YE&&U({target:"JSON",stat:!0,forced:VE},{stringify:function(e,t,n){var i=YE.apply(null,arguments);return"string"==typeof i?i.replace(BE,UE):i}}),F.JSON||(F.JSON={stringify:JSON.stringify});var GE,qE=function(e,t,n){return F.JSON.stringify.apply(null,arguments)},$E=!1,ZE="background: #FFeeee; color: #dd0000",QE=function(){function e(){hh(this,e)}return yh(e,null,[{key:"validate",value:function(t,n,i){$E=!1,GE=n;var r=n;return void 0!==i&&(r=n[i]),e.parse(t,r,[]),$E}},{key:"parse",value:function(t,n,i){for(var r in t)t.hasOwnProperty(r)&&e.check(r,t,n,i)}},{key:"check",value:function(t,n,i,r){if(void 0!==i[t]||void 0!==i.__any__){var o=t,s=!0;void 0===i[t]&&void 0!==i.__any__&&(o="__any__",s="object"===e.getType(n[t]));var a=i[o];s&&void 0!==a.__type__&&(a=a.__type__),e.checkFields(t,n,i,o,a,r)}else e.getSuggestion(t,i,r)}},{key:"checkFields",value:function(t,n,i,r,o,s){var a=function(n){console.log("%c"+n+e.printLocation(s,t),ZE)},l=e.getType(n[t]),u=o[l];void 0!==u?"array"===e.getType(u)&&-1===Cu(u).call(u,n[t])?(a('Invalid option detected in "'+t+'". Allowed values are:'+e.print(u)+' not "'+n[t]+'". '),$E=!0):"object"===l&&"__any__"!==r&&(s=as(s,t),e.parse(n[t],i[r],s)):void 0===o.any&&(a('Invalid type received for "'+t+'". Expected: '+e.print(jh(o))+". Received ["+l+'] "'+n[t]+'"'),$E=!0)}},{key:"getType",value:function(e){var t=BO(e);return"object"===t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Xl(e)?"array":e instanceof Date?"date":void 0!==e.nodeType?"dom":!0===e._isAMomentObject?"moment":"object":"number"===t?"number":"boolean"===t?"boolean":"string"===t?"string":void 0===t?"undefined":t}},{key:"getSuggestion",value:function(t,n,i){var r,o=e.findInOptions(t,n,i,!1),s=e.findInOptions(t,GE,[],!0);r=void 0!==o.indexMatch?" in "+e.printLocation(o.path,t,"")+'Perhaps it was incomplete? Did you mean: "'+o.indexMatch+'"?\n\n':s.distance<=4&&o.distance>s.distance?" in "+e.printLocation(o.path,t,"")+"Perhaps it was misplaced? Matching option found at: "+e.printLocation(s.path,s.closestMatch,""):o.distance<=8?'. Did you mean "'+o.closestMatch+'"?'+e.printLocation(o.path,t):". Did you mean one of these: "+e.print(jh(n))+e.printLocation(i,t),console.log('%cUnknown option detected: "'+t+'"'+r,ZE),$E=!0}},{key:"findInOptions",value:function(t,n,i){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=1e9,s="",a=[],l=t.toLowerCase(),u=void 0;for(var c in n){var d=void 0;if(void 0!==n[c].__type__&&!0===r){var h=e.findInOptions(t,n[c],as(i,c));o>h.distance&&(s=h.closestMatch,a=h.path,o=h.distance,u=h.indexMatch)}else{var f;-1!==Cu(f=c.toLowerCase()).call(f,l)&&(u=c),o>(d=e.levenshteinDistance(t,c))&&(s=c,a=ls(i),o=d)}}return{closestMatch:s,path:a,distance:o,indexMatch:u}}},{key:"printLocation",value:function(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Problem value found at: \n",i="\n\n"+n+"options = {\n",r=0;r<e.length;r++){for(var o=0;o<r+1;o++)i+="  ";i+=e[r]+": {\n"}for(var s=0;s<e.length+1;s++)i+="  ";i+=t+"\n";for(var a=0;a<e.length+1;a++){for(var l=0;l<e.length-a;l++)i+="  ";i+="}\n"}return i+"\n\n"}},{key:"print",value:function(e){return qE(e).replace(/(\")|(\[)|(\])|(,"__type__")/g,"").replace(/(\,)/g,", ")}},{key:"levenshteinDistance",value:function(e,t){if(0===e.length)return t.length;if(0===t.length)return e.length;var n,i,r=[];for(n=0;n<=t.length;n++)r[n]=[n];for(i=0;i<=e.length;i++)r[0][i]=i;for(n=1;n<=t.length;n++)for(i=1;i<=e.length;i++)t.charAt(n-1)==e.charAt(i-1)?r[n][i]=r[n-1][i-1]:r[n][i]=Math.min(r[n-1][i-1]+1,Math.min(r[n][i-1]+1,r[n-1][i]+1));return r[t.length][e.length]}}]),e}();function XE(e,t){var n=jh(e);if(fO){var i=fO(e);t&&(i=CS(i).call(i,(function(t){return SS(e,t).enumerable}))),n.push.apply(n,i)}return n}var KE=function(){function e(t,n,i,r,o,s){hh(this,e),this.options=Ys(o),this.globalOptions=o,this.defaultOptions=s,this.body=n,this.edges=[],this.id=void 0,this.imagelist=i,this.grouplist=r,this.x=void 0,this.y=void 0,this.baseSize=this.options.size,this.baseFontSize=this.options.font.size,this.predefinedPosition=!1,this.selected=!1,this.hover=!1,this.labelModule=new cE(this.body,this.options,!1),this.setOptions(t)}return yh(e,[{key:"attachEdge",value:function(e){var t;-1===Cu(t=this.edges).call(t,e)&&this.edges.push(e)}},{key:"detachEdge",value:function(e){var t,n,i=Cu(t=this.edges).call(t,e);-1!=i&&hu(n=this.edges).call(n,i,1)}},{key:"setOptions",value:function(t){var n=this.options.shape;if(t){if(void 0!==t.color&&(this._localColor=t.color),void 0!==t.id&&(this.id=t.id),void 0===this.id)throw new Error("Node must have an id");e.checkMass(t,this.id),void 0!==t.x&&(null===t.x?(this.x=void 0,this.predefinedPosition=!1):(this.x=DO(t.x),this.predefinedPosition=!0)),void 0!==t.y&&(null===t.y?(this.y=void 0,this.predefinedPosition=!1):(this.y=DO(t.y),this.predefinedPosition=!0)),void 0!==t.size&&(this.baseSize=t.size),void 0!==t.value&&(t.value=SO(t.value)),e.parseOptions(this.options,t,!0,this.globalOptions,this.grouplist);var i=[t,this.options,this.defaultOptions];return this.chooser=HO.choosify("node",i),this._load_images(),this.updateLabelModule(t),this.updateShape(n),void 0!==t.hidden||void 0!==t.physics}}},{key:"_load_images",value:function(){if(("circularImage"===this.options.shape||"image"===this.options.shape)&&void 0===this.options.image)throw new Error("Option image must be defined for node type '"+this.options.shape+"'");if(void 0!==this.options.image){if(void 0===this.imagelist)throw new Error("Internal Error: No images provided");if("string"==typeof this.options.image)this.imageObj=this.imagelist.load(this.options.image,this.options.brokenImage,this.id);else{if(void 0===this.options.image.unselected)throw new Error("No unselected image provided");this.imageObj=this.imagelist.load(this.options.image.unselected,this.options.brokenImage,this.id),void 0!==this.options.image.selected?this.imageObjAlt=this.imagelist.load(this.options.image.selected,this.options.brokenImage,this.id):this.imageObjAlt=void 0}}}},{key:"getFormattingValues",value:function(){var e={color:this.options.color.background,borderWidth:this.options.borderWidth,borderColor:this.options.color.border,size:this.options.size,borderDashes:this.options.shapeProperties.borderDashes,borderRadius:this.options.shapeProperties.borderRadius,shadow:this.options.shadow.enabled,shadowColor:this.options.shadow.color,shadowSize:this.options.shadow.size,shadowX:this.options.shadow.x,shadowY:this.options.shadow.y};return this.selected||this.hover?!0===this.chooser?this.selected?(e.borderWidth*=2,e.color=this.options.color.highlight.background,e.borderColor=this.options.color.highlight.border,e.shadow=this.options.shadow.enabled):this.hover&&(e.color=this.options.color.hover.background,e.borderColor=this.options.color.hover.border,e.shadow=this.options.shadow.enabled):"function"==typeof this.chooser&&(this.chooser(e,this.options.id,this.selected,this.hover),!1===e.shadow&&(e.shadowColor===this.options.shadow.color&&e.shadowSize===this.options.shadow.size&&e.shadowX===this.options.shadow.x&&e.shadowY===this.options.shadow.y||(e.shadow=!0))):e.shadow=this.options.shadow.enabled,e}},{key:"updateLabelModule",value:function(t){void 0!==this.options.label&&null!==this.options.label||(this.options.label=""),e.updateGroupOptions(this.options,function(e){for(var t=1;t<arguments.length;t++){var n,i=null!=arguments[t]?arguments[t]:{};if(t%2)ql(n=XE(Object(i),!0)).call(n,(function(t){pO(e,t,i[t])}));else if(wS)vS(e,wS(i));else{var r;ql(r=XE(Object(i))).call(r,(function(t){pS(e,t,SS(i,t))}))}}return e}({},t,{color:t&&t.color||this._localColor||void 0}),this.grouplist);var n=this.grouplist.get(this.options.group,!1),i=[t,this.options,n,this.globalOptions,this.defaultOptions];this.labelModule.update(this.options,i),void 0!==this.labelModule.baseSize&&(this.baseFontSize=this.labelModule.baseSize)}},{key:"updateShape",value:function(e){if(e===this.options.shape&&this.shape)this.shape.setOptions(this.options,this.imageObj,this.imageObjAlt);else switch(this.options.shape){case"box":this.shape=new xE(this.options,this.body,this.labelModule);break;case"circle":this.shape=new OE(this.options,this.body,this.labelModule);break;case"circularImage":this.shape=new EE(this.options,this.body,this.labelModule,this.imageObj,this.imageObjAlt);break;case"database":this.shape=new TE(this.options,this.body,this.labelModule);break;case"diamond":this.shape=new DE(this.options,this.body,this.labelModule);break;case"dot":this.shape=new CE(this.options,this.body,this.labelModule);break;case"ellipse":this.shape=new PE(this.options,this.body,this.labelModule);break;case"icon":this.shape=new NE(this.options,this.body,this.labelModule);break;case"image":this.shape=new IE(this.options,this.body,this.labelModule,this.imageObj,this.imageObjAlt);break;case"square":this.shape=new AE(this.options,this.body,this.labelModule);break;case"hexagon":this.shape=new FE(this.options,this.body,this.labelModule);break;case"star":this.shape=new RE(this.options,this.body,this.labelModule);break;case"text":this.shape=new jE(this.options,this.body,this.labelModule);break;case"triangle":this.shape=new LE(this.options,this.body,this.labelModule);break;case"triangleDown":this.shape=new zE(this.options,this.body,this.labelModule);break;default:this.shape=new PE(this.options,this.body,this.labelModule)}this.needsRefresh()}},{key:"select",value:function(){this.selected=!0,this.needsRefresh()}},{key:"unselect",value:function(){this.selected=!1,this.needsRefresh()}},{key:"needsRefresh",value:function(){this.shape.refreshNeeded=!0}},{key:"getTitle",value:function(){return this.options.title}},{key:"distanceToBorder",value:function(e,t){return this.shape.distanceToBorder(e,t)}},{key:"isFixed",value:function(){return this.options.fixed.x&&this.options.fixed.y}},{key:"isSelected",value:function(){return this.selected}},{key:"getValue",value:function(){return this.options.value}},{key:"getLabelSize",value:function(){return this.labelModule.size()}},{key:"setValueRange",value:function(e,t,n){if(void 0!==this.options.value){var i=this.options.scaling.customScalingFunction(e,t,n,this.options.value),r=this.options.scaling.max-this.options.scaling.min;if(!0===this.options.scaling.label.enabled){var o=this.options.scaling.label.max-this.options.scaling.label.min;this.options.font.size=this.options.scaling.label.min+i*o}this.options.size=this.options.scaling.min+i*r}else this.options.size=this.baseSize,this.options.font.size=this.baseFontSize;this.updateLabelModule()}},{key:"draw",value:function(e){var t=this.getFormattingValues();this.shape.draw(e,this.x,this.y,this.selected,this.hover,t)}},{key:"updateBoundingBox",value:function(e){this.shape.updateBoundingBox(this.x,this.y,e)}},{key:"resize",value:function(e){var t=this.getFormattingValues();this.shape.resize(e,this.selected,this.hover,t)}},{key:"getItemsOnPoint",value:function(e){var t=[];return this.labelModule.visible()&&HO.pointInRect(this.labelModule.getSize(),e)&&t.push({nodeId:this.id,labelId:0}),HO.pointInRect(this.shape.boundingBox,e)&&t.push({nodeId:this.id}),t}},{key:"isOverlappingWith",value:function(e){return this.shape.left<e.right&&this.shape.left+this.shape.width>e.left&&this.shape.top<e.bottom&&this.shape.top+this.shape.height>e.top}},{key:"isBoundingBoxOverlappingWith",value:function(e){return this.shape.boundingBox.left<e.right&&this.shape.boundingBox.right>e.left&&this.shape.boundingBox.top<e.bottom&&this.shape.boundingBox.bottom>e.top}}],[{key:"updateGroupOptions",value:function(e,t,n){if(void 0!==n){var i=e.group;if(void 0!==t&&void 0!==t.group&&i!==t.group)throw new Error("updateGroupOptions: group values in options don't match.");if("number"==typeof i||"string"==typeof i&&""!=i){var r=n.get(i),o=["font"];void 0!==t&&void 0!==t.color&&null!=t.color&&o.push("color"),is(o,e,r),e.color=Ts(e.color)}}}},{key:"parseOptions",value:function(t,n){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,s=["color","fixed","shadow"];if(is(s,t,n,i),e.checkMass(n),Hs(t,n,"shadow",r),void 0!==n.color&&null!==n.color){var a=Ts(n.color);Jo(t.color,a)}else!0===i&&null===n.color&&(t.color=Ys(r.color));void 0!==n.fixed&&null!==n.fixed&&("boolean"==typeof n.fixed?(t.fixed.x=n.fixed,t.fixed.y=n.fixed):(void 0!==n.fixed.x&&"boolean"==typeof n.fixed.x&&(t.fixed.x=n.fixed.x),void 0!==n.fixed.y&&"boolean"==typeof n.fixed.y&&(t.fixed.y=n.fixed.y))),!0===i&&null===n.font&&(t.font=Ys(r.font)),e.updateGroupOptions(t,n,o),void 0!==n.scaling&&Hs(t.scaling,n.scaling,"label",r.scaling)}},{key:"checkMass",value:function(e,t){if(void 0!==e.mass&&e.mass<=0){var n="";void 0!==t&&(n=" in node id: "+t),console.log("%cNegative or zero mass disallowed"+n+", setting mass to 1.",ZE),e.mass=1}}}]),e}(),JE=function(){function e(t,n,i,r){var o,s=this;if(hh(this,e),this.body=t,this.images=n,this.groups=i,this.layoutEngine=r,this.body.functions.createNode=K(o=this.create).call(o,this),this.nodesListeners={add:function(e,t){s.add(t.items)},update:function(e,t){s.update(t.items,t.data,t.oldData)},remove:function(e,t){s.remove(t.items)}},this.defaultOptions={borderWidth:1,borderWidthSelected:2,brokenImage:void 0,color:{border:"#2B7CE9",background:"#97C2FC",highlight:{border:"#2B7CE9",background:"#D2E5FF"},hover:{border:"#2B7CE9",background:"#D2E5FF"}},fixed:{x:!1,y:!1},font:{color:"#343434",size:14,face:"arial",background:"none",strokeWidth:0,strokeColor:"#ffffff",align:"center",vadjust:0,multi:!1,bold:{mod:"bold"},boldital:{mod:"bold italic"},ital:{mod:"italic"},mono:{mod:"",size:15,face:"monospace",vadjust:2}},group:void 0,hidden:!1,icon:{face:"FontAwesome",code:void 0,size:50,color:"#2B7CE9"},image:void 0,imagePadding:{top:0,right:0,bottom:0,left:0},label:void 0,labelHighlightBold:!0,level:void 0,margin:{top:5,right:5,bottom:5,left:5},mass:1,physics:!0,scaling:{min:10,max:30,label:{enabled:!1,min:14,max:30,maxVisible:30,drawThreshold:5},customScalingFunction:function(e,t,n,i){if(t===e)return.5;var r=1/(t-e);return Math.max(0,(i-e)*r)}},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:10,x:5,y:5},shape:"ellipse",shapeProperties:{borderDashes:!1,borderRadius:6,interpolation:!0,useImageSize:!1,useBorderWithImage:!1},size:25,title:void 0,value:void 0,x:void 0,y:void 0},this.defaultOptions.mass<=0)throw"Internal error: mass in defaultOptions of NodesHandler may not be zero or negative";this.options=Ys(this.defaultOptions),this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e,t,n=this;this.body.emitter.on("refreshNodes",K(e=this.refresh).call(e,this)),this.body.emitter.on("refresh",K(t=this.refresh).call(t,this)),this.body.emitter.on("destroy",(function(){ps(n.nodesListeners,(function(e,t){n.body.data.nodes&&n.body.data.nodes.off(t,e)})),delete n.body.functions.createNode,delete n.nodesListeners.add,delete n.nodesListeners.update,delete n.nodesListeners.remove,delete n.nodesListeners}))}},{key:"setOptions",value:function(e){if(void 0!==e){if(KE.parseOptions(this.options,e),void 0!==e.shape)for(var t in this.body.nodes)this.body.nodes.hasOwnProperty(t)&&this.body.nodes[t].updateShape();if(void 0!==e.font||void 0!==e.widthConstraint||void 0!==e.heightConstraint)for(var n=0,i=jh(this.body.nodes);n<i.length;n++){var r=i[n];this.body.nodes[r].updateLabelModule(),this.body.nodes[r].needsRefresh()}if(void 0!==e.size)for(var o in this.body.nodes)this.body.nodes.hasOwnProperty(o)&&this.body.nodes[o].needsRefresh();void 0===e.hidden&&void 0===e.physics||this.body.emitter.emit("_dataChanged")}}},{key:"setData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.body.data.nodes;if(e instanceof cS||e instanceof dS)this.body.data.nodes=e;else if(Xl(e))this.body.data.nodes=new cS,this.body.data.nodes.add(e);else{if(e)throw new TypeError("Array or DataSet expected");this.body.data.nodes=new cS}if(n&&ps(this.nodesListeners,(function(e,t){n.off(t,e)})),this.body.nodes={},this.body.data.nodes){var i=this;ps(this.nodesListeners,(function(e,t){i.body.data.nodes.on(t,e)}));var r=this.body.data.nodes.getIds();this.add(r,!0)}!1===t&&this.body.emitter.emit("_dataChanged")}},{key:"add",value:function(e){for(var t,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=[],r=0;r<e.length;r++){t=e[r];var o=this.body.data.nodes.get(t),s=this.create(o);i.push(s),this.body.nodes[t]=s}this.layoutEngine.positionInitially(i),!1===n&&this.body.emitter.emit("_dataChanged")}},{key:"update",value:function(e,t,n){for(var i=this.body.nodes,r=!1,o=0;o<e.length;o++){var s=e[o],a=i[s],l=t[o];void 0!==a?a.setOptions(l)&&(r=!0):(r=!0,a=this.create(l),i[s]=a)}r||void 0===n||(r=function(e){var t=e.some;return e===Fh||e instanceof Array&&t===Fh.some?Ah:t}(t).call(t,(function(e,t){var i=n[t];return i&&i.level!==e.level}))),!0===r?this.body.emitter.emit("_dataChanged"):this.body.emitter.emit("_dataUpdated")}},{key:"remove",value:function(e){for(var t=this.body.nodes,n=0;n<e.length;n++)delete t[e[n]];this.body.emitter.emit("_dataChanged")}},{key:"create",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:KE;return new t(e,this.body,this.images,this.groups,this.options,this.defaultOptions)}},{key:"refresh",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];ps(this.body.nodes,(function(n,i){var r=e.body.data.nodes.get(i);void 0!==r&&(!0===t&&n.setOptions({x:null,y:null}),n.setOptions({fixed:!1}),n.setOptions(r))}))}},{key:"getPositions",value:function(e){var t={};if(void 0!==e){if(!0===Xl(e)){for(var n=0;n<e.length;n++)if(void 0!==this.body.nodes[e[n]]){var i=this.body.nodes[e[n]];t[e[n]]={x:Math.round(i.x),y:Math.round(i.y)}}}else if(void 0!==this.body.nodes[e]){var r=this.body.nodes[e];t[e]={x:Math.round(r.x),y:Math.round(r.y)}}}else for(var o=0;o<this.body.nodeIndices.length;o++){var s=this.body.nodes[this.body.nodeIndices[o]];t[this.body.nodeIndices[o]]={x:Math.round(s.x),y:Math.round(s.y)}}return t}},{key:"storePositions",value:function(){var e=[],t=this.body.data.nodes.getDataSet(),n=!0,i=!1,r=void 0;try{for(var o,s=Ch(t.get());!(n=(o=s.next()).done);n=!0){var a=o.value,l=a.id,u=this.body.nodes[l],c=Math.round(u.x),d=Math.round(u.y);a.x===c&&a.y===d||e.push({id:l,x:c,y:d})}}catch(e){i=!0,r=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw r}}t.update(e)}},{key:"getBoundingBox",value:function(e){if(void 0!==this.body.nodes[e])return this.body.nodes[e].shape.boundingBox}},{key:"getConnectedNodes",value:function(e,t){var n=[];if(void 0!==this.body.nodes[e])for(var i=this.body.nodes[e],r={},o=0;o<i.edges.length;o++){var s=i.edges[o];"to"!==t&&s.toId==i.id?void 0===r[s.fromId]&&(n.push(s.fromId),r[s.fromId]=!0):"from"!==t&&s.fromId==i.id&&void 0===r[s.toId]&&(n.push(s.toId),r[s.toId]=!0)}return n}},{key:"getConnectedEdges",value:function(e){var t=[];if(void 0!==this.body.nodes[e])for(var n=this.body.nodes[e],i=0;i<n.edges.length;i++)t.push(n.edges[i].id);else console.log("NodeId provided for getConnectedEdges does not exist. Provided: ",e);return t}},{key:"moveNode",value:function(e,t,n){var i=this;void 0!==this.body.nodes[e]?(this.body.nodes[e].x=Number(t),this.body.nodes[e].y=Number(n),xh((function(){i.body.emitter.emit("startSimulation")}),0)):console.log("Node id supplied to moveNode does not exist. Provided: ",e)}}]),e}(),eT=xS;U({target:"Reflect",stat:!0},{get:function e(t,n){var i,r,o=arguments.length<3?t:arguments[2];return L(t)===o?t[n]:(i=T.f(t,n))?_(i,"value")?i.value:void 0===i.get?void 0:i.get.call(o):m(r=Ea(t))?e(r,n,o):void 0}});var tT=F.Reflect.get,nT=i((function(e){function t(n,i,r){return"undefined"!=typeof Reflect&&tT?e.exports=t=tT:e.exports=t=function(e,t,n){var i=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=vE(e)););return e}(e,t);if(i){var r=eT(i,t);return r.get?r.get.call(n):r.value}},t(n,i,r||n)}e.exports=t})),iT=Math.hypot,rT=Math.abs,oT=Math.sqrt,sT=!!iT&&iT(1/0,NaN)!==1/0;U({target:"Math",stat:!0,forced:sT},{hypot:function(e,t){for(var n,i,r=0,o=0,s=arguments.length,a=0;o<s;)a<(n=rT(arguments[o++]))?(r=r*(i=a/n)*i+1,a=n):r+=n>0?(i=n/a)*i:n;return a===1/0?1/0:a*oT(r)}});var aT=F.Math.hypot,lT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"transform",value:function(e,t){Xl(e)||(e=[e]);for(var n=t.point.x,i=t.point.y,r=t.angle,o=t.length,s=0;s<e.length;++s){var a=e[s],l=a.x*Math.cos(r)-a.y*Math.sin(r),u=a.x*Math.sin(r)+a.y*Math.cos(r);a.x=n+o*l,a.y=i+o*u}}},{key:"drawPath",value:function(e,t){e.beginPath(),e.moveTo(t[0].x,t[0].y);for(var n=1;n<t.length;++n)e.lineTo(t[n].x,t[n].y);e.closePath()}}]),e}(),uT=function(e){function t(){return hh(this,t),dE(this,vE(t).apply(this,arguments))}return mE(t,lT),yh(t,null,[{key:"draw",value:function(e,t){if(t.image){e.save(),e.translate(t.point.x,t.point.y),e.rotate(Math.PI/2+t.angle);var n=null!=t.imageWidth?t.imageWidth:t.image.width,i=null!=t.imageHeight?t.imageHeight:t.image.height;t.image.drawImageAtPosition(e,1,-n/2,0,n,i),e.restore()}return!1}}]),t}(),cT=function(e){function t(){return hh(this,t),dE(this,vE(t).apply(this,arguments))}return mE(t,lT),yh(t,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:0},{x:-1,y:.3},{x:-.9,y:0},{x:-1,y:-.3}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),t}(),dT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:-1,y:0},{x:0,y:.3},{x:-.4,y:0},{x:0,y:-.3}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),hT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n={x:-.4,y:0};lT.transform(n,t),e.strokeStyle=e.fillStyle,e.fillStyle="rgba(0, 0, 0, 0)";var i=Math.PI,r=t.angle-i/2,o=t.angle+i/2;return e.beginPath(),e.arc(n.x,n.y,.4*t.length,r,o,!1),e.stroke(),!0}}]),e}(),fT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n={x:-.3,y:0};lT.transform(n,t),e.strokeStyle=e.fillStyle,e.fillStyle="rgba(0, 0, 0, 0)";var i=Math.PI,r=t.angle+i/2,o=t.angle+3*i/2;return e.beginPath(),e.arc(n.x,n.y,.4*t.length,r,o,!1),e.stroke(),!0}}]),e}(),pT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:.02,y:0},{x:-1,y:.3},{x:-1,y:-.3}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),vT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:.3},{x:0,y:-.3},{x:-1,y:0}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),yT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n={x:-.4,y:0};return lT.transform(n,t),J(e,n.x,n.y,.4*t.length),!0}}]),e}(),gT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:.5},{x:0,y:-.5},{x:-.15,y:-.5},{x:-.15,y:.5}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),mT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:.3},{x:0,y:-.3},{x:-.6,y:-.3},{x:-.6,y:.3}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),bT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:0},{x:-.5,y:-.3},{x:-1,y:0},{x:-.5,y:.3}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),wT=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n=[{x:-1,y:.3},{x:-.5,y:0},{x:-1,y:-.3},{x:0,y:0}];return lT.transform(n,t),lT.drawPath(e,n),!0}}]),e}(),_T=function(){function e(){hh(this,e)}return yh(e,null,[{key:"draw",value:function(e,t){var n;switch(t.type&&(n=t.type.toLowerCase()),n){case"image":return uT.draw(e,t);case"circle":return yT.draw(e,t);case"box":return mT.draw(e,t);case"crow":return dT.draw(e,t);case"curve":return hT.draw(e,t);case"diamond":return bT.draw(e,t);case"inv_curve":return fT.draw(e,t);case"triangle":return pT.draw(e,t);case"inv_triangle":return vT.draw(e,t);case"bar":return gT.draw(e,t);case"vee":return wT.draw(e,t);case"arrow":default:return cT.draw(e,t)}}}]),e}();function kT(e,t){var n=jh(e);if(fO){var i=fO(e);t&&(i=CS(i).call(i,(function(t){return SS(e,t).enumerable}))),n.push.apply(n,i)}return n}var xT=function(){function e(t,n,i){hh(this,e),this._body=n,this._labelModule=i,this.color={},this.colorDirty=!0,this.hoverWidth=1.5,this.selectionWidth=2,this.setOptions(t),this.fromPoint=this.from,this.toPoint=this.to}return yh(e,[{key:"connect",value:function(){this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to]}},{key:"cleanup",value:function(){return!1}},{key:"setOptions",value:function(e){this.options=e,this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to],this.id=this.options.id}},{key:"drawLine",value:function(e,t,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.getViaNode();e.strokeStyle=this.getColor(e,t),e.lineWidth=t.width,!1!==t.dashes?this._drawDashedLine(e,t,r):this._drawLine(e,t,r)}},{key:"_drawLine",value:function(e,t,n,i,r){if(this.from!=this.to)this._line(e,t,n,i,r);else{var o=this._getCircleData(e),s=IO(o,3),a=s[0],l=s[1],u=s[2];this._circle(e,t,a,l,u)}}},{key:"_drawDashedLine",value:function(e,t,n,i,r){e.lineCap="round";var o=Xl(t.dashes)?t.dashes:[5,5];if(void 0!==e.setLineDash){if(e.save(),e.setLineDash(o),e.lineDashOffset=0,this.from!=this.to)this._line(e,t,n);else{var s=this._getCircleData(e),a=IO(s,3),l=a[0],u=a[1],c=a[2];this._circle(e,t,l,u,c)}e.setLineDash([0]),e.lineDashOffset=0,e.restore()}else{if(this.from!=this.to)ie(e,this.from.x,this.from.y,this.to.x,this.to.y,o);else{var d=this._getCircleData(e),h=IO(d,3),f=h[0],p=h[1],v=h[2];this._circle(e,t,f,p,v)}this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t)}}},{key:"findBorderPosition",value:function(e,t,n){return this.from!=this.to?this._findBorderPosition(e,t,n):this._findBorderPositionCircle(e,t,n)}},{key:"findBorderPositions",value:function(e){if(this.from!=this.to)return{from:this._findBorderPosition(this.from,e),to:this._findBorderPosition(this.to,e)};var t,n=QO(t=this._getCircleData(e)).call(t,0,2),i=IO(n,2),r=i[0],o=i[1];return{from:this._findBorderPositionCircle(this.from,e,{x:r,y:o,low:.25,high:.6,direction:-1}),to:this._findBorderPositionCircle(this.from,e,{x:r,y:o,low:.6,high:.8,direction:1})}}},{key:"_getCircleData",value:function(e){var t=this.options.selfReference.size;void 0!==e&&void 0===this.from.shape.width&&this.from.shape.resize(e);var n=HO.getSelfRefCoordinates(e,this.options.selfReference.angle,t,this.from);return[n.x,n.y,t]}},{key:"_pointOnCircle",value:function(e,t,n,i){var r=2*i*Math.PI;return{x:e+n*Math.cos(r),y:t-n*Math.sin(r)}}},{key:"_findBorderPositionCircle",value:function(e,t,n){var i,r=n.x,o=n.y,s=n.low,a=n.high,l=n.direction,u=this.options.selfReference.size,c=.5*(s+a),d=0;do{c=.5*(s+a),i=this._pointOnCircle(r,o,u,c);var h=Math.atan2(e.y-i.y,e.x-i.x),f=e.distanceToBorder(t,h)-Math.sqrt(Math.pow(i.x-e.x,2)+Math.pow(i.y-e.y,2));if(Math.abs(f)<.05)break;f>0?l>0?s=c:a=c:l>0?a=c:s=c,++d}while(s<=a&&d<10);return function(e){for(var t=1;t<arguments.length;t++){var n,i=null!=arguments[t]?arguments[t]:{};if(t%2)ql(n=kT(Object(i),!0)).call(n,(function(t){pO(e,t,i[t])}));else if(wS)vS(e,wS(i));else{var r;ql(r=kT(Object(i))).call(r,(function(t){pS(e,t,SS(i,t))}))}}return e}({},i,{t:c})}},{key:"getLineWidth",value:function(e,t){return!0===e?Math.max(this.selectionWidth,.3/this._body.view.scale):!0===t?Math.max(this.hoverWidth,.3/this._body.view.scale):Math.max(this.options.width,.3/this._body.view.scale)}},{key:"getColor",value:function(e,t){if(!1!==t.inheritsColor){if("both"===t.inheritsColor&&this.from.id!==this.to.id){var n=e.createLinearGradient(this.from.x,this.from.y,this.to.x,this.to.y),i=this.from.options.color.highlight.border,r=this.to.options.color.highlight.border;return!1===this.from.selected&&!1===this.to.selected?(i=Os(this.from.options.color.border,t.opacity),r=Os(this.to.options.color.border,t.opacity)):!0===this.from.selected&&!1===this.to.selected?r=this.to.options.color.border:!1===this.from.selected&&!0===this.to.selected&&(i=this.from.options.color.border),n.addColorStop(0,i),n.addColorStop(1,r),n}return"to"===t.inheritsColor?Os(this.to.options.color.border,t.opacity):Os(this.from.options.color.border,t.opacity)}return Os(t.color,t.opacity)}},{key:"_circle",value:function(e,t,n,i,r){this.enableShadow(e,t);var o=0,s=2*Math.PI;if(!this.options.selfReference.renderBehindTheNode){var a=this.options.selfReference.angle,l=this.options.selfReference.angle+Math.PI,u=this._findBorderPositionCircle(this.from,e,{x:n,y:i,low:a,high:l,direction:-1}),c=this._findBorderPositionCircle(this.from,e,{x:n,y:i,low:a,high:l,direction:1});o=Math.atan2(u.y-i,u.x-n),s=Math.atan2(c.y-i,c.x-n)}e.beginPath(),e.arc(n,i,r,o,s,!1),e.stroke(),this.disableShadow(e,t)}},{key:"getDistanceToEdge",value:function(e,t,n,i,r,o){if(this.from!=this.to)return this._getDistanceToEdge(e,t,n,i,r,o);var s=this._getCircleData(void 0),a=IO(s,3),l=a[0],u=a[1],c=a[2],d=l-r,h=u-o;return Math.abs(Math.sqrt(d*d+h*h)-c)}},{key:"_getDistanceToLine",value:function(e,t,n,i,r,o){var s=n-e,a=i-t,l=((r-e)*s+(o-t)*a)/(s*s+a*a);l>1?l=1:l<0&&(l=0);var u=e+l*s-r,c=t+l*a-o;return Math.sqrt(u*u+c*c)}},{key:"getArrowData",value:function(e,t,n,i,r,o){var s,a,l,u,c,d,h,f=o.width;"from"===t?(l=this.from,u=this.to,c=o.fromArrowScale<0,d=Math.abs(o.fromArrowScale),h=o.fromArrowType):"to"===t?(l=this.to,u=this.from,c=o.toArrowScale<0,d=Math.abs(o.toArrowScale),h=o.toArrowType):(l=this.to,u=this.from,c=o.middleArrowScale<0,d=Math.abs(o.middleArrowScale),h=o.middleArrowType);var p=15*d+3*f;if(l!=u){var v=p/aT(l.x-u.x,l.y-u.y);if("middle"!==t)if(!0===this.options.smooth.enabled){var y=this._findBorderPosition(l,e,{via:n}),g=this.getPoint(y.t+v*("from"===t?1:-1),n);s=Math.atan2(y.y-g.y,y.x-g.x),a=y}else s=Math.atan2(l.y-u.y,l.x-u.x),a=this._findBorderPosition(l,e);else{var m=(c?-v:v)/2,b=this.getPoint(.5+m,n),w=this.getPoint(.5-m,n);s=Math.atan2(b.y-w.y,b.x-w.x),a=this.getPoint(.5,n)}}else{var _=this._getCircleData(e),k=IO(_,3),x=k[0],S=k[1],O=k[2];if("from"===t){var E=this.options.selfReference.angle,T=this.options.selfReference.angle+Math.PI,M=this._findBorderPositionCircle(this.from,e,{x:x,y:S,low:E,high:T,direction:-1});s=-2*M.t*Math.PI+1.5*Math.PI+.1*Math.PI,a=M}else if("to"===t){var D=this.options.selfReference.angle,C=this.options.selfReference.angle+Math.PI,P=this._findBorderPositionCircle(this.from,e,{x:x,y:S,low:D,high:C,direction:1});s=-2*P.t*Math.PI+1.5*Math.PI-1.1*Math.PI,a=P}else{var N=this.options.selfReference.angle/(2*Math.PI);a=this._pointOnCircle(x,S,O,N),s=-2*N*Math.PI+1.5*Math.PI+.1*Math.PI}}return{point:a,core:{x:a.x-.9*p*Math.cos(s),y:a.y-.9*p*Math.sin(s)},angle:s,length:p,type:h}}},{key:"drawArrowHead",value:function(e,t,n,i,r){e.strokeStyle=this.getColor(e,t),e.fillStyle=e.strokeStyle,e.lineWidth=t.width,_T.draw(e,r)&&(this.enableShadow(e,t),_E(e).call(e),this.disableShadow(e,t))}},{key:"enableShadow",value:function(e,t){!0===t.shadow&&(e.shadowColor=t.shadowColor,e.shadowBlur=t.shadowSize,e.shadowOffsetX=t.shadowX,e.shadowOffsetY=t.shadowY)}},{key:"disableShadow",value:function(e,t){!0===t.shadow&&(e.shadowColor="rgba(0,0,0,0)",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0)}},{key:"drawBackground",value:function(e,t){if(!1!==t.background){var n={strokeStyle:e.strokeStyle,lineWidth:e.lineWidth,dashes:e.dashes};e.strokeStyle=t.backgroundColor,e.lineWidth=t.backgroundSize,this.setStrokeDashed(e,t.backgroundDashes),e.stroke(),e.strokeStyle=n.strokeStyle,e.lineWidth=n.lineWidth,e.dashes=n.dashes,this.setStrokeDashed(e,t.dashes)}}},{key:"setStrokeDashed",value:function(e,t){if(!1!==t)if(void 0!==e.setLineDash){var n=Xl(t)?t:[5,5];e.setLineDash(n)}else console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used.");else void 0!==e.setLineDash?e.setLineDash([]):console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used.")}}]),e}();function ST(e,t){var n=jh(e);if(fO){var i=fO(e);t&&(i=CS(i).call(i,(function(t){return SS(e,t).enumerable}))),n.push.apply(n,i)}return n}function OT(e){for(var t=1;t<arguments.length;t++){var n,i=null!=arguments[t]?arguments[t]:{};if(t%2)ql(n=ST(Object(i),!0)).call(n,(function(t){pO(e,t,i[t])}));else if(wS)vS(e,wS(i));else{var r;ql(r=ST(Object(i))).call(r,(function(t){pS(e,t,SS(i,t))}))}}return e}var ET=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,xT),yh(t,[{key:"_findBorderPositionBezier",value:function(e,t){var n,i,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this._getViaCoordinates(),o=10,s=.2,a=!1,l=1,u=0,c=this.to;e.id===this.from.id&&(c=this.from,a=!0);var d=0;do{i=.5*(u+l),n=this.getPoint(i,r);var h=Math.atan2(c.y-n.y,c.x-n.x),f=c.distanceToBorder(t,h),p=Math.sqrt(Math.pow(n.x-c.x,2)+Math.pow(n.y-c.y,2)),v=f-p;if(Math.abs(v)<s)break;v<0?!1===a?u=i:l=i:!1===a?l=i:u=i,++d}while(u<=l&&d<o);return OT({},n,{t:i})}},{key:"_getDistanceToBezierEdge",value:function(e,t,n,i,r,o,s){var a,l,u,c,d,h=1e9,f=e,p=t;for(l=1;l<10;l++)u=.1*l,c=Math.pow(1-u,2)*e+2*u*(1-u)*s.x+Math.pow(u,2)*n,d=Math.pow(1-u,2)*t+2*u*(1-u)*s.y+Math.pow(u,2)*i,l>0&&(h=(a=this._getDistanceToLine(f,p,c,d,r,o))<h?a:h),f=c,p=d;return h}},{key:"_bezierCurve",value:function(e,t,n,i){e.beginPath(),e.moveTo(this.fromPoint.x,this.fromPoint.y),null!=n&&null!=n.x?null!=i&&null!=i.x?e.bezierCurveTo(n.x,n.y,i.x,i.y,this.toPoint.x,this.toPoint.y):e.quadraticCurveTo(n.x,n.y,this.toPoint.x,this.toPoint.y):e.lineTo(this.toPoint.x,this.toPoint.y),this.drawBackground(e,t),this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t)}},{key:"getViaNode",value:function(){return this._getViaCoordinates()}}]),t}(),TT=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i))).via=r.via,r._boundFunction=function(){r.positionBezierNode()},r._body.emitter.on("_repositionBezierNodes",r._boundFunction),r}return mE(t,ET),yh(t,[{key:"setOptions",value:function(e){nT(vE(t.prototype),"setOptions",this).call(this,e);var n=!1;this.options.physics!==e.physics&&(n=!0),this.options=e,this.id=this.options.id,this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to],this.setupSupportNode(),this.connect(),!0===n&&(this.via.setOptions({physics:this.options.physics}),this.positionBezierNode())}},{key:"connect",value:function(){this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to],void 0===this.from||void 0===this.to||!1===this.options.physics?this.via.setOptions({physics:!1}):this.from.id===this.to.id?this.via.setOptions({physics:!1}):this.via.setOptions({physics:!0})}},{key:"cleanup",value:function(){return this._body.emitter.off("_repositionBezierNodes",this._boundFunction),void 0!==this.via&&(delete this._body.nodes[this.via.id],this.via=void 0,!0)}},{key:"setupSupportNode",value:function(){if(void 0===this.via){var e="edgeId:"+this.id,t=this._body.functions.createNode({id:e,shape:"circle",physics:!0,hidden:!0});this._body.nodes[e]=t,this.via=t,this.via.parentEdgeId=this.id,this.positionBezierNode()}}},{key:"positionBezierNode",value:function(){void 0!==this.via&&void 0!==this.from&&void 0!==this.to?(this.via.x=.5*(this.from.x+this.to.x),this.via.y=.5*(this.from.y+this.to.y)):void 0!==this.via&&(this.via.x=0,this.via.y=0)}},{key:"_line",value:function(e,t,n){this._bezierCurve(e,t,n)}},{key:"_getViaCoordinates",value:function(){return this.via}},{key:"getViaNode",value:function(){return this.via}},{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.via;if(this.from===this.to){var n=this._getCircleData(),i=IO(n,3),r=i[0],o=i[1],s=i[2],a=2*Math.PI*(1-e);return{x:r+s*Math.sin(a),y:o+s-s*(1-Math.cos(a))}}return{x:Math.pow(1-e,2)*this.fromPoint.x+2*e*(1-e)*t.x+Math.pow(e,2)*this.toPoint.x,y:Math.pow(1-e,2)*this.fromPoint.y+2*e*(1-e)*t.y+Math.pow(e,2)*this.toPoint.y}}},{key:"_findBorderPosition",value:function(e,t){return this._findBorderPositionBezier(e,t,this.via)}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){return this._getDistanceToBezierEdge(e,t,n,i,r,o,this.via)}}]),t}(),MT=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ET),yh(t,[{key:"_line",value:function(e,t,n){this._bezierCurve(e,t,n)}},{key:"getViaNode",value:function(){return this._getViaCoordinates()}},{key:"_getViaCoordinates",value:function(){var e,t,n=this.options.smooth.roundness,i=this.options.smooth.type,r=Math.abs(this.from.x-this.to.x),o=Math.abs(this.from.y-this.to.y);if("discrete"===i||"diagonalCross"===i){var s,a;s=a=r<=o?n*o:n*r,this.from.x>this.to.x&&(s=-s),this.from.y>=this.to.y&&(a=-a);var l=this.from.x+s,u=this.from.y+a;return"discrete"===i&&(r<=o?l=r<n*o?this.from.x:l:u=o<n*r?this.from.y:u),{x:l,y:u}}if("straightCross"===i){var c=(1-n)*r,d=(1-n)*o;return r<=o?(c=0,this.from.y<this.to.y&&(d=-d)):(this.from.x<this.to.x&&(c=-c),d=0),{x:this.to.x+c,y:this.to.y+d}}if("horizontal"===i){var h=(1-n)*r;return this.from.x<this.to.x&&(h=-h),{x:this.to.x+h,y:this.from.y}}if("vertical"===i){var f=(1-n)*o;return this.from.y<this.to.y&&(f=-f),{x:this.from.x,y:this.to.y+f}}if("curvedCW"===i){r=this.to.x-this.from.x,o=this.from.y-this.to.y;var p=Math.sqrt(r*r+o*o),v=Math.PI,y=(Math.atan2(o,r)+(.5*n+.5)*v)%(2*v);return{x:this.from.x+(.5*n+.5)*p*Math.sin(y),y:this.from.y+(.5*n+.5)*p*Math.cos(y)}}if("curvedCCW"===i){r=this.to.x-this.from.x,o=this.from.y-this.to.y;var g=Math.sqrt(r*r+o*o),m=Math.PI,b=(Math.atan2(o,r)+(.5*-n+.5)*m)%(2*m);return{x:this.from.x+(.5*n+.5)*g*Math.sin(b),y:this.from.y+(.5*n+.5)*g*Math.cos(b)}}e=t=r<=o?n*o:n*r,this.from.x>this.to.x&&(e=-e),this.from.y>=this.to.y&&(t=-t);var w=this.from.x+e,_=this.from.y+t;return r<=o?w=this.from.x<=this.to.x?this.to.x<w?this.to.x:w:this.to.x>w?this.to.x:w:_=this.from.y>=this.to.y?this.to.y>_?this.to.y:_:this.to.y<_?this.to.y:_,{x:w,y:_}}},{key:"_findBorderPosition",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this._findBorderPositionBezier(e,t,n.via)}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){var s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:this._getViaCoordinates();return this._getDistanceToBezierEdge(e,t,n,i,r,o,s)}},{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._getViaCoordinates(),n=e,i=Math.pow(1-n,2)*this.fromPoint.x+2*n*(1-n)*t.x+Math.pow(n,2)*this.toPoint.x,r=Math.pow(1-n,2)*this.fromPoint.y+2*n*(1-n)*t.y+Math.pow(n,2)*this.toPoint.y;return{x:i,y:r}}}]),t}(),DT=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,ET),yh(t,[{key:"_getDistanceToBezierEdge2",value:function(e,t,n,i,r,o,s,a){for(var l=1e9,u=e,c=t,d=[0,0,0,0],h=1;h<10;h++){var f=.1*h;d[0]=Math.pow(1-f,3),d[1]=3*f*Math.pow(1-f,2),d[2]=3*Math.pow(f,2)*(1-f),d[3]=Math.pow(f,3);var p=d[0]*e+d[1]*s.x+d[2]*a.x+d[3]*n,v=d[0]*t+d[1]*s.y+d[2]*a.y+d[3]*i;if(h>0){var y=this._getDistanceToLine(u,c,p,v,r,o);l=y<l?y:l}u=p,c=v}return l}}]),t}(),CT=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,DT),yh(t,[{key:"_line",value:function(e,t,n){var i=n[0],r=n[1];this._bezierCurve(e,t,i,r)}},{key:"_getViaCoordinates",value:function(){var e,t,n,i,r=this.from.x-this.to.x,o=this.from.y-this.to.y,s=this.options.smooth.roundness;return(Math.abs(r)>Math.abs(o)||!0===this.options.smooth.forceDirection||"horizontal"===this.options.smooth.forceDirection)&&"vertical"!==this.options.smooth.forceDirection?(t=this.from.y,i=this.to.y,e=this.from.x-s*r,n=this.to.x+s*r):(t=this.from.y-s*o,i=this.to.y+s*o,e=this.from.x,n=this.to.x),[{x:e,y:t},{x:n,y:i}]}},{key:"getViaNode",value:function(){return this._getViaCoordinates()}},{key:"_findBorderPosition",value:function(e,t){return this._findBorderPositionBezier(e,t)}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){var s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:this._getViaCoordinates(),a=IO(s,2),l=a[0],u=a[1];return this._getDistanceToBezierEdge2(e,t,n,i,r,o,l,u)}},{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._getViaCoordinates(),n=IO(t,2),i=n[0],r=n[1],o=e,s=[Math.pow(1-o,3),3*o*Math.pow(1-o,2),3*Math.pow(o,2)*(1-o),Math.pow(o,3)],a=s[0]*this.fromPoint.x+s[1]*i.x+s[2]*r.x+s[3]*this.toPoint.x,l=s[0]*this.fromPoint.y+s[1]*i.y+s[2]*r.y+s[3]*this.toPoint.y;return{x:a,y:l}}}]),t}(),PT=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,xT),yh(t,[{key:"_line",value:function(e,t){e.beginPath(),e.moveTo(this.fromPoint.x,this.fromPoint.y),e.lineTo(this.toPoint.x,this.toPoint.y),this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t)}},{key:"getViaNode",value:function(){}},{key:"getPoint",value:function(e){return{x:(1-e)*this.fromPoint.x+e*this.toPoint.x,y:(1-e)*this.fromPoint.y+e*this.toPoint.y}}},{key:"_findBorderPosition",value:function(e,t){var n=this.to,i=this.from;e.id===this.from.id&&(n=this.from,i=this.to);var r=Math.atan2(n.y-i.y,n.x-i.x),o=n.x-i.x,s=n.y-i.y,a=Math.sqrt(o*o+s*s),l=(a-e.distanceToBorder(t,r))/a;return{x:(1-l)*i.x+l*n.x,y:(1-l)*i.y+l*n.y,t:0}}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){return this._getDistanceToLine(e,t,n,i,r,o)}}]),t}(),NT=function(){function e(t,n,i,r,o){if(hh(this,e),void 0===n)throw new Error("No body provided");this.options=Ys(r),this.globalOptions=r,this.defaultOptions=o,this.body=n,this.imagelist=i,this.id=void 0,this.fromId=void 0,this.toId=void 0,this.selected=!1,this.hover=!1,this.labelDirty=!0,this.baseWidth=this.options.width,this.baseFontSize=this.options.font.size,this.from=void 0,this.to=void 0,this.edgeType=void 0,this.connected=!1,this.labelModule=new cE(this.body,this.options,!0),this.setOptions(t)}return yh(e,[{key:"setOptions",value:function(t){if(t){var n=void 0!==t.physics&&this.options.physics!==t.physics||void 0!==t.hidden&&(this.options.hidden||!1)!==(t.hidden||!1)||void 0!==t.from&&this.options.from!==t.from||void 0!==t.to&&this.options.to!==t.to;e.parseOptions(this.options,t,!0,this.globalOptions),void 0!==t.id&&(this.id=t.id),void 0!==t.from&&(this.fromId=t.from),void 0!==t.to&&(this.toId=t.to),void 0!==t.title&&(this.title=t.title),void 0!==t.value&&(t.value=SO(t.value));var i=[t,this.options,this.defaultOptions];return this.chooser=HO.choosify("edge",i),this.updateLabelModule(t),n=this.updateEdgeType()||n,this._setInteractionWidths(),this.connect(),n}}},{key:"getFormattingValues",value:function(){var e=!0===this.options.arrows.to||!0===this.options.arrows.to.enabled,t=!0===this.options.arrows.from||!0===this.options.arrows.from.enabled,n=!0===this.options.arrows.middle||!0===this.options.arrows.middle.enabled,i=this.options.color.inherit,r={toArrow:e,toArrowScale:this.options.arrows.to.scaleFactor,toArrowType:this.options.arrows.to.type,toArrowSrc:this.options.arrows.to.src,toArrowImageWidth:this.options.arrows.to.imageWidth,toArrowImageHeight:this.options.arrows.to.imageHeight,middleArrow:n,middleArrowScale:this.options.arrows.middle.scaleFactor,middleArrowType:this.options.arrows.middle.type,middleArrowSrc:this.options.arrows.middle.src,middleArrowImageWidth:this.options.arrows.middle.imageWidth,middleArrowImageHeight:this.options.arrows.middle.imageHeight,fromArrow:t,fromArrowScale:this.options.arrows.from.scaleFactor,fromArrowType:this.options.arrows.from.type,fromArrowSrc:this.options.arrows.from.src,fromArrowImageWidth:this.options.arrows.from.imageWidth,fromArrowImageHeight:this.options.arrows.from.imageHeight,arrowStrikethrough:this.options.arrowStrikethrough,color:i?void 0:this.options.color.color,inheritsColor:i,opacity:this.options.color.opacity,hidden:this.options.hidden,length:this.options.length,shadow:this.options.shadow.enabled,shadowColor:this.options.shadow.color,shadowSize:this.options.shadow.size,shadowX:this.options.shadow.x,shadowY:this.options.shadow.y,dashes:this.options.dashes,width:this.options.width,background:this.options.background.enabled,backgroundColor:this.options.background.color,backgroundSize:this.options.background.size,backgroundDashes:this.options.background.dashes};if(this.selected||this.hover)if(!0===this.chooser){if(this.selected){var o=this.options.selectionWidth;"function"==typeof o?r.width=o(r.width):"number"==typeof o&&(r.width+=o),r.width=Math.max(r.width,.3/this.body.view.scale),r.color=this.options.color.highlight,r.shadow=this.options.shadow.enabled}else if(this.hover){var s=this.options.hoverWidth;"function"==typeof s?r.width=s(r.width):"number"==typeof s&&(r.width+=s),r.width=Math.max(r.width,.3/this.body.view.scale),r.color=this.options.color.hover,r.shadow=this.options.shadow.enabled}}else"function"==typeof this.chooser&&(this.chooser(r,this.options.id,this.selected,this.hover),void 0!==r.color&&(r.inheritsColor=!1),!1===r.shadow&&(r.shadowColor===this.options.shadow.color&&r.shadowSize===this.options.shadow.size&&r.shadowX===this.options.shadow.x&&r.shadowY===this.options.shadow.y||(r.shadow=!0)));else r.shadow=this.options.shadow.enabled,r.width=Math.max(r.width,.3/this.body.view.scale);return r}},{key:"updateLabelModule",value:function(e){var t=[e,this.options,this.globalOptions,this.defaultOptions];this.labelModule.update(this.options,t),void 0!==this.labelModule.baseSize&&(this.baseFontSize=this.labelModule.baseSize)}},{key:"updateEdgeType",value:function(){var e=this.options.smooth,t=!1,n=!0;return void 0!==this.edgeType&&((this.edgeType instanceof TT&&!0===e.enabled&&"dynamic"===e.type||this.edgeType instanceof CT&&!0===e.enabled&&"cubicBezier"===e.type||this.edgeType instanceof MT&&!0===e.enabled&&"dynamic"!==e.type&&"cubicBezier"!==e.type||this.edgeType instanceof PT&&!1===e.type.enabled)&&(n=!1),!0===n&&(t=this.cleanup())),!0===n?!0===e.enabled?"dynamic"===e.type?(t=!0,this.edgeType=new TT(this.options,this.body,this.labelModule)):"cubicBezier"===e.type?this.edgeType=new CT(this.options,this.body,this.labelModule):this.edgeType=new MT(this.options,this.body,this.labelModule):this.edgeType=new PT(this.options,this.body,this.labelModule):this.edgeType.setOptions(this.options),t}},{key:"connect",value:function(){this.disconnect(),this.from=this.body.nodes[this.fromId]||void 0,this.to=this.body.nodes[this.toId]||void 0,this.connected=void 0!==this.from&&void 0!==this.to,!0===this.connected?(this.from.attachEdge(this),this.to.attachEdge(this)):(this.from&&this.from.detachEdge(this),this.to&&this.to.detachEdge(this)),this.edgeType.connect()}},{key:"disconnect",value:function(){this.from&&(this.from.detachEdge(this),this.from=void 0),this.to&&(this.to.detachEdge(this),this.to=void 0),this.connected=!1}},{key:"getTitle",value:function(){return this.title}},{key:"isSelected",value:function(){return this.selected}},{key:"getValue",value:function(){return this.options.value}},{key:"setValueRange",value:function(e,t,n){if(void 0!==this.options.value){var i=this.options.scaling.customScalingFunction(e,t,n,this.options.value),r=this.options.scaling.max-this.options.scaling.min;if(!0===this.options.scaling.label.enabled){var o=this.options.scaling.label.max-this.options.scaling.label.min;this.options.font.size=this.options.scaling.label.min+i*o}this.options.width=this.options.scaling.min+i*r}else this.options.width=this.baseWidth,this.options.font.size=this.baseFontSize;this._setInteractionWidths(),this.updateLabelModule()}},{key:"_setInteractionWidths",value:function(){"function"==typeof this.options.hoverWidth?this.edgeType.hoverWidth=this.options.hoverWidth(this.options.width):this.edgeType.hoverWidth=this.options.hoverWidth+this.options.width,"function"==typeof this.options.selectionWidth?this.edgeType.selectionWidth=this.options.selectionWidth(this.options.width):this.edgeType.selectionWidth=this.options.selectionWidth+this.options.width}},{key:"draw",value:function(e){var t=this.getFormattingValues();if(!t.hidden){var n=this.edgeType.getViaNode(),i={};this.edgeType.fromPoint=this.edgeType.from,this.edgeType.toPoint=this.edgeType.to,t.fromArrow&&(i.from=this.edgeType.getArrowData(e,"from",n,this.selected,this.hover,t),!1===t.arrowStrikethrough&&(this.edgeType.fromPoint=i.from.core),t.fromArrowSrc&&(i.from.image=this.imagelist.load(t.fromArrowSrc)),t.fromArrowImageWidth&&(i.from.imageWidth=t.fromArrowImageWidth),t.fromArrowImageHeight&&(i.from.imageHeight=t.fromArrowImageHeight)),t.toArrow&&(i.to=this.edgeType.getArrowData(e,"to",n,this.selected,this.hover,t),!1===t.arrowStrikethrough&&(this.edgeType.toPoint=i.to.core),t.toArrowSrc&&(i.to.image=this.imagelist.load(t.toArrowSrc)),t.toArrowImageWidth&&(i.to.imageWidth=t.toArrowImageWidth),t.toArrowImageHeight&&(i.to.imageHeight=t.toArrowImageHeight)),t.middleArrow&&(i.middle=this.edgeType.getArrowData(e,"middle",n,this.selected,this.hover,t),t.middleArrowSrc&&(i.middle.image=this.imagelist.load(t.middleArrowSrc)),t.middleArrowImageWidth&&(i.middle.imageWidth=t.middleArrowImageWidth),t.middleArrowImageHeight&&(i.middle.imageHeight=t.middleArrowImageHeight)),this.edgeType.drawLine(e,t,this.selected,this.hover,n),this.drawArrows(e,i,t),this.drawLabel(e,n)}}},{key:"drawArrows",value:function(e,t,n){n.fromArrow&&this.edgeType.drawArrowHead(e,n,this.selected,this.hover,t.from),n.middleArrow&&this.edgeType.drawArrowHead(e,n,this.selected,this.hover,t.middle),n.toArrow&&this.edgeType.drawArrowHead(e,n,this.selected,this.hover,t.to)}},{key:"drawLabel",value:function(e,t){if(void 0!==this.options.label){var n=this.from,i=this.to;if(this.labelModule.differentState(this.selected,this.hover)&&this.labelModule.getTextSize(e,this.selected,this.hover),n.id!=i.id){this.labelModule.pointToSelf=!1;var r=this.edgeType.getPoint(.5,t);e.save();var o=this._getRotation(e);0!=o.angle&&(e.translate(o.x,o.y),e.rotate(o.angle)),this.labelModule.draw(e,r.x,r.y,this.selected,this.hover),e.restore()}else{this.labelModule.pointToSelf=!0;var s=HO.getSelfRefCoordinates(e,this.options.selfReference.angle,this.options.selfReference.size,n);r=this._pointOnCircle(s.x,s.y,this.options.selfReference.size,this.options.selfReference.angle),this.labelModule.draw(e,r.x,r.y,this.selected,this.hover)}}}},{key:"getItemsOnPoint",value:function(e){var t=[];if(this.labelModule.visible()){var n=this._getRotation();HO.pointInRect(this.labelModule.getSize(),e,n)&&t.push({edgeId:this.id,labelId:0})}var i={left:e.x,top:e.y};return this.isOverlappingWith(i)&&t.push({edgeId:this.id}),t}},{key:"isOverlappingWith",value:function(e){if(this.connected){var t=this.from.x,n=this.from.y,i=this.to.x,r=this.to.y,o=e.left,s=e.top;return this.edgeType.getDistanceToEdge(t,n,i,r,o,s)<10}return!1}},{key:"_getRotation",value:function(e){var t=this.edgeType.getViaNode(),n=this.edgeType.getPoint(.5,t);void 0!==e&&this.labelModule.calculateLabelSize(e,this.selected,this.hover,n.x,n.y);var i={x:n.x,y:this.labelModule.size.yLine,angle:0};if(!this.labelModule.visible())return i;if("horizontal"===this.options.font.align)return i;var r=this.from.y-this.to.y,o=this.from.x-this.to.x,s=Math.atan2(r,o);return(s<-1&&o<0||s>0&&o<0)&&(s+=Math.PI),i.angle=s,i}},{key:"_pointOnCircle",value:function(e,t,n,i){return{x:e+n*Math.cos(i),y:t-n*Math.sin(i)}}},{key:"select",value:function(){this.selected=!0}},{key:"unselect",value:function(){this.selected=!1}},{key:"cleanup",value:function(){return this.edgeType.cleanup()}},{key:"remove",value:function(){this.cleanup(),this.disconnect(),delete this.body.edges[this.id]}},{key:"endPointsValid",value:function(){return void 0!==this.body.nodes[this.fromId]&&void 0!==this.body.nodes[this.toId]}}],[{key:"parseOptions",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=["arrowStrikethrough","id","from","hidden","hoverWidth","labelHighlightBold","length","line","opacity","physics","scaling","selectionWidth","selfReferenceSize","selfReference","to","title","value","width","font","chosen","widthConstraint"];if(ns(o,e,t,n),HO.isValidLabel(t.label)?e.label=t.label:HO.isValidLabel(e.label)||(e.label=void 0),Hs(e,t,"smooth",i),Hs(e,t,"shadow",i),Hs(e,t,"background",i),void 0!==t.dashes&&null!==t.dashes?e.dashes=t.dashes:!0===n&&null===t.dashes&&(e.dashes=Iu(i.dashes)),void 0!==t.scaling&&null!==t.scaling?(void 0!==t.scaling.min&&(e.scaling.min=t.scaling.min),void 0!==t.scaling.max&&(e.scaling.max=t.scaling.max),Hs(e.scaling,t.scaling,"label",i.scaling)):!0===n&&null===t.scaling&&(e.scaling=Iu(i.scaling)),void 0!==t.arrows&&null!==t.arrows)if("string"==typeof t.arrows){var s=t.arrows.toLowerCase();e.arrows.to.enabled=-1!=Cu(s).call(s,"to"),e.arrows.middle.enabled=-1!=Cu(s).call(s,"middle"),e.arrows.from.enabled=-1!=Cu(s).call(s,"from")}else{if("object"!==BO(t.arrows))throw new Error("The arrow newOptions can only be an object or a string. Refer to the documentation. You used:"+qE(t.arrows));Hs(e.arrows,t.arrows,"to",i.arrows),Hs(e.arrows,t.arrows,"middle",i.arrows),Hs(e.arrows,t.arrows,"from",i.arrows)}else!0===n&&null===t.arrows&&(e.arrows=Iu(i.arrows));if(void 0!==t.color&&null!==t.color){var a=Zo(t.color)?{color:t.color,highlight:t.color,hover:t.color,inherit:!1,opacity:1}:t.color,l=e.color;if(r)rs(l,i.color,!1,n);else for(var u in l)l.hasOwnProperty(u)&&delete l[u];if(Zo(l))l.color=l,l.highlight=l,l.hover=l,l.inherit=!1,void 0===a.opacity&&(l.opacity=1);else{var c=!1;void 0!==a.color&&(l.color=a.color,c=!0),void 0!==a.highlight&&(l.highlight=a.highlight,c=!0),void 0!==a.hover&&(l.hover=a.hover,c=!0),void 0!==a.inherit&&(l.inherit=a.inherit),void 0!==a.opacity&&(l.opacity=Math.min(1,Math.max(0,a.opacity))),!0===c?l.inherit=!1:void 0===l.inherit&&(l.inherit="from")}}else!0===n&&null===t.color&&(e.color=Ys(i.color));!0===n&&null===t.font&&(e.font=Ys(i.font)),t.hasOwnProperty("selfReferenceSize")&&(console.log("The selfReferenceSize property has been deprecated. Please use selfReference property instead. The selfReference can be set like thise selfReference:{size:30, angle:Math.PI / 4}"),e.selfReference.size=t.selfReferenceSize)}}]),e}(),IT=function(){function e(t,n,i){var r,o=this;hh(this,e),this.body=t,this.images=n,this.groups=i,this.body.functions.createEdge=K(r=this.create).call(r,this),this.edgesListeners={add:function(e,t){o.add(t.items)},update:function(e,t){o.update(t.items)},remove:function(e,t){o.remove(t.items)}},this.options={},this.defaultOptions={arrows:{to:{enabled:!1,scaleFactor:1,type:"arrow"},middle:{enabled:!1,scaleFactor:1,type:"arrow"},from:{enabled:!1,scaleFactor:1,type:"arrow"}},arrowStrikethrough:!0,color:{color:"#848484",highlight:"#848484",hover:"#848484",inherit:"from",opacity:1},dashes:!1,font:{color:"#343434",size:14,face:"arial",background:"none",strokeWidth:2,strokeColor:"#ffffff",align:"horizontal",multi:!1,vadjust:0,bold:{mod:"bold"},boldital:{mod:"bold italic"},ital:{mod:"italic"},mono:{mod:"",size:15,face:"courier new",vadjust:2}},hidden:!1,hoverWidth:1.5,label:void 0,labelHighlightBold:!0,length:void 0,physics:!0,scaling:{min:1,max:15,label:{enabled:!0,min:14,max:30,maxVisible:30,drawThreshold:5},customScalingFunction:function(e,t,n,i){if(t===e)return.5;var r=1/(t-e);return Math.max(0,(i-e)*r)}},selectionWidth:1.5,selfReference:{size:20,angle:Math.PI/4,renderBehindTheNode:!0},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:10,x:5,y:5},background:{enabled:!1,color:"rgba(111,111,111,1)",size:10,dashes:!1},smooth:{enabled:!0,type:"dynamic",forceDirection:"none",roundness:.5},title:void 0,width:1,value:void 0},rs(this.options,this.defaultOptions),this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e,t,n=this;this.body.emitter.on("_forceDisableDynamicCurves",(function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];"dynamic"===e&&(e="continuous");var i=!1;for(var r in n.body.edges)if(n.body.edges.hasOwnProperty(r)){var o=n.body.edges[r],s=n.body.data.edges.get(r);if(null!=s){var a=s.smooth;void 0!==a&&!0===a.enabled&&"dynamic"===a.type&&(void 0===e?o.setOptions({smooth:!1}):o.setOptions({smooth:{type:e}}),i=!0)}}!0===t&&!0===i&&n.body.emitter.emit("_dataChanged")})),this.body.emitter.on("_dataUpdated",(function(){n.reconnectEdges()})),this.body.emitter.on("refreshEdges",K(e=this.refresh).call(e,this)),this.body.emitter.on("refresh",K(t=this.refresh).call(t,this)),this.body.emitter.on("destroy",(function(){ps(n.edgesListeners,(function(e,t){n.body.data.edges&&n.body.data.edges.off(t,e)})),delete n.body.functions.createEdge,delete n.edgesListeners.add,delete n.edgesListeners.update,delete n.edgesListeners.remove,delete n.edgesListeners}))}},{key:"setOptions",value:function(e){if(void 0!==e){NT.parseOptions(this.options,e,!0,this.defaultOptions,!0);var t=!1;if(void 0!==e.smooth)for(var n in this.body.edges)this.body.edges.hasOwnProperty(n)&&(t=this.body.edges[n].updateEdgeType()||t);if(void 0!==e.font)for(var i in this.body.edges)this.body.edges.hasOwnProperty(i)&&this.body.edges[i].updateLabelModule();void 0===e.hidden&&void 0===e.physics&&!0!==t||this.body.emitter.emit("_dataChanged")}}},{key:"setData",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=this.body.data.edges;if(e instanceof cS||e instanceof dS)this.body.data.edges=e;else if(Xl(e))this.body.data.edges=new cS,this.body.data.edges.add(e);else{if(e)throw new TypeError("Array or DataSet expected");this.body.data.edges=new cS}if(i&&ps(this.edgesListeners,(function(e,t){i.off(t,e)})),this.body.edges={},this.body.data.edges){ps(this.edgesListeners,(function(e,n){t.body.data.edges.on(n,e)}));var r=this.body.data.edges.getIds();this.add(r,!0)}this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),!1===n&&this.body.emitter.emit("_dataChanged")}},{key:"add",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.body.edges,i=this.body.data.edges,r=0;r<e.length;r++){var o=e[r],s=n[o];s&&s.disconnect();var a=i.get(o,{showInternalIds:!0});n[o]=this.create(a)}this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),!1===t&&this.body.emitter.emit("_dataChanged")}},{key:"update",value:function(e){for(var t=this.body.edges,n=this.body.data.edges,i=!1,r=0;r<e.length;r++){var o=e[r],s=n.get(o),a=t[o];void 0!==a?(a.disconnect(),i=a.setOptions(s)||i,a.connect()):(this.body.edges[o]=this.create(s),i=!0)}!0===i?(this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),this.body.emitter.emit("_dataChanged")):this.body.emitter.emit("_dataUpdated")}},{key:"remove",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0!==e.length){var n=this.body.edges;ps(e,(function(e){var t=n[e];void 0!==t&&t.remove()})),t&&this.body.emitter.emit("_dataChanged")}}},{key:"refresh",value:function(){var e=this;ps(this.body.edges,(function(t,n){var i=e.body.data.edges.get(n);void 0!==i&&t.setOptions(i)}))}},{key:"create",value:function(e){return new NT(e,this.body,this.images,this.options,this.defaultOptions)}},{key:"reconnectEdges",value:function(){var e,t=this.body.nodes,n=this.body.edges;for(e in t)t.hasOwnProperty(e)&&(t[e].edges=[]);for(e in n)if(n.hasOwnProperty(e)){var i=n[e];i.from=null,i.to=null,i.connect()}}},{key:"getConnectedNodes",value:function(e){var t=[];if(void 0!==this.body.edges[e]){var n=this.body.edges[e];void 0!==n.fromId&&t.push(n.fromId),void 0!==n.toId&&t.push(n.toId)}return t}},{key:"_updateState",value:function(){this._addMissingEdges(),this._removeInvalidEdges()}},{key:"_removeInvalidEdges",value:function(){var e=this,t=[];ps(this.body.edges,(function(n,i){var r=e.body.nodes[n.toId],o=e.body.nodes[n.fromId];void 0!==r&&!0===r.isCluster||void 0!==o&&!0===o.isCluster||void 0!==r&&void 0!==o||t.push(i)})),this.remove(t,!1)}},{key:"_addMissingEdges",value:function(){var e=this.body.data.edges;if(null!=e){var t=this.body.edges,n=[];ql(e).call(e,(function(e,i){void 0===t[i]&&n.push(i)})),this.add(n,!0)}}}]),e}();U({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}});var AT=F.Date.now;U({target:"Number",stat:!0},{isNaN:function(e){return e!=e}});var FT=F.Number.isNaN,RT=function(){function e(t,n,i){hh(this,e),this.body=t,this.physicsBody=n,this.barnesHutTree,this.setOptions(i),this._rng=Bn("BARNES HUT SOLVER")}return yh(e,[{key:"setOptions",value:function(e){this.options=e,this.thetaInversed=1/this.options.theta,this.overlapAvoidanceFactor=1-Math.max(0,Math.min(1,this.options.avoidOverlap))}},{key:"solve",value:function(){if(0!==this.options.gravitationalConstant&&this.physicsBody.physicsNodeIndices.length>0){var e,t=this.body.nodes,n=this.physicsBody.physicsNodeIndices,i=n.length,r=this._formBarnesHutTree(t,n);this.barnesHutTree=r;for(var o=0;o<i;o++)(e=t[n[o]]).options.mass>0&&this._getForceContributions(r.root,e)}}},{key:"_getForceContributions",value:function(e,t){this._getForceContribution(e.children.NW,t),this._getForceContribution(e.children.NE,t),this._getForceContribution(e.children.SW,t),this._getForceContribution(e.children.SE,t)}},{key:"_getForceContribution",value:function(e,t){var n,i,r;e.childrenCount>0&&(n=e.centerOfMass.x-t.x,i=e.centerOfMass.y-t.y,(r=Math.sqrt(n*n+i*i))*e.calcSize>this.thetaInversed?this._calculateForces(r,n,i,t,e):4===e.childrenCount?this._getForceContributions(e,t):e.children.data.id!=t.id&&this._calculateForces(r,n,i,t,e))}},{key:"_calculateForces",value:function(e,t,n,i,r){0===e&&(t=e=.1),this.overlapAvoidanceFactor<1&&i.shape.radius&&(e=Math.max(.1+this.overlapAvoidanceFactor*i.shape.radius,e-i.shape.radius));var o=this.options.gravitationalConstant*r.mass*i.options.mass/Math.pow(e,3),s=t*o,a=n*o;this.physicsBody.forces[i.id].x+=s,this.physicsBody.forces[i.id].y+=a}},{key:"_formBarnesHutTree",value:function(e,t){for(var n,i=t.length,r=e[t[0]].x,o=e[t[0]].y,s=e[t[0]].x,a=e[t[0]].y,l=1;l<i;l++){var u=e[t[l]],c=u.x,d=u.y;u.options.mass>0&&(c<r&&(r=c),c>s&&(s=c),d<o&&(o=d),d>a&&(a=d))}var h=Math.abs(s-r)-Math.abs(a-o);h>0?(o-=.5*h,a+=.5*h):(r+=.5*h,s-=.5*h);var f=Math.max(1e-5,Math.abs(s-r)),p=.5*f,v=.5*(r+s),y=.5*(o+a),g={root:{centerOfMass:{x:0,y:0},mass:0,range:{minX:v-p,maxX:v+p,minY:y-p,maxY:y+p},size:f,calcSize:1/f,children:{data:null},maxWidth:0,level:0,childrenCount:4}};this._splitBranch(g.root);for(var m=0;m<i;m++)(n=e[t[m]]).options.mass>0&&this._placeInTree(g.root,n);return g}},{key:"_updateBranchMass",value:function(e,t){var n=e.centerOfMass,i=e.mass+t.options.mass,r=1/i;n.x=n.x*e.mass+t.x*t.options.mass,n.x*=r,n.y=n.y*e.mass+t.y*t.options.mass,n.y*=r,e.mass=i;var o=Math.max(Math.max(t.height,t.radius),t.width);e.maxWidth=e.maxWidth<o?o:e.maxWidth}},{key:"_placeInTree",value:function(e,t,n){1==n&&void 0!==n||this._updateBranchMass(e,t);var i,r=e.children.NW.range;i=r.maxX>t.x?r.maxY>t.y?"NW":"SW":r.maxY>t.y?"NE":"SE",this._placeInRegion(e,t,i)}},{key:"_placeInRegion",value:function(e,t,n){var i=e.children[n];switch(i.childrenCount){case 0:i.children.data=t,i.childrenCount=1,this._updateBranchMass(i,t);break;case 1:i.children.data.x===t.x&&i.children.data.y===t.y?(t.x+=this._rng(),t.y+=this._rng()):(this._splitBranch(i),this._placeInTree(i,t));break;case 4:this._placeInTree(i,t)}}},{key:"_splitBranch",value:function(e){var t=null;1===e.childrenCount&&(t=e.children.data,e.mass=0,e.centerOfMass.x=0,e.centerOfMass.y=0),e.childrenCount=4,e.children.data=null,this._insertRegion(e,"NW"),this._insertRegion(e,"NE"),this._insertRegion(e,"SW"),this._insertRegion(e,"SE"),null!=t&&this._placeInTree(e,t)}},{key:"_insertRegion",value:function(e,t){var n,i,r,o,s=.5*e.size;switch(t){case"NW":n=e.range.minX,i=e.range.minX+s,r=e.range.minY,o=e.range.minY+s;break;case"NE":n=e.range.minX+s,i=e.range.maxX,r=e.range.minY,o=e.range.minY+s;break;case"SW":n=e.range.minX,i=e.range.minX+s,r=e.range.minY+s,o=e.range.maxY;break;case"SE":n=e.range.minX+s,i=e.range.maxX,r=e.range.minY+s,o=e.range.maxY}e.children[t]={centerOfMass:{x:0,y:0},mass:0,range:{minX:n,maxX:i,minY:r,maxY:o},size:.5*e.size,calcSize:2*e.calcSize,children:{data:null},maxWidth:0,level:e.level+1,childrenCount:0}}},{key:"_debug",value:function(e,t){void 0!==this.barnesHutTree&&(e.lineWidth=1,this._drawBranch(this.barnesHutTree.root,e,t))}},{key:"_drawBranch",value:function(e,t,n){void 0===n&&(n="#FF0000"),4===e.childrenCount&&(this._drawBranch(e.children.NW,t),this._drawBranch(e.children.NE,t),this._drawBranch(e.children.SE,t),this._drawBranch(e.children.SW,t)),t.strokeStyle=n,t.beginPath(),t.moveTo(e.range.minX,e.range.minY),t.lineTo(e.range.maxX,e.range.minY),t.stroke(),t.beginPath(),t.moveTo(e.range.maxX,e.range.minY),t.lineTo(e.range.maxX,e.range.maxY),t.stroke(),t.beginPath(),t.moveTo(e.range.maxX,e.range.maxY),t.lineTo(e.range.minX,e.range.maxY),t.stroke(),t.beginPath(),t.moveTo(e.range.minX,e.range.maxY),t.lineTo(e.range.minX,e.range.minY),t.stroke()}}]),e}(),jT=function(){function e(t,n,i){hh(this,e),this._rng=Bn("REPULSION SOLVER"),this.body=t,this.physicsBody=n,this.setOptions(i)}return yh(e,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var e,t,n,i,r,o,s,a,l=this.body.nodes,u=this.physicsBody.physicsNodeIndices,c=this.physicsBody.forces,d=this.options.nodeDistance,h=-2/3/d,f=0;f<u.length-1;f++){s=l[u[f]];for(var p=f+1;p<u.length;p++)e=(a=l[u[p]]).x-s.x,t=a.y-s.y,0===(n=Math.sqrt(e*e+t*t))&&(e=n=.1*this._rng()),n<2*d&&(o=n<.5*d?1:h*n+4/3,i=e*(o/=n),r=t*o,c[s.id].x-=i,c[s.id].y-=r,c[a.id].x+=i,c[a.id].y+=r)}}}]),e}(),LT=function(e){throw new Error('"'+e+'" is read-only')},zT=function(){function e(t,n,i){hh(this,e),this.body=t,this.physicsBody=n,this.setOptions(i)}return yh(e,[{key:"setOptions",value:function(e){this.options=e,this.overlapAvoidanceFactor=Math.max(0,Math.min(1,this.options.avoidOverlap||0))}},{key:"solve",value:function(){for(var e=this.body.nodes,t=this.physicsBody.physicsNodeIndices,n=this.physicsBody.forces,i=this.options.nodeDistance,r=0;r<t.length-1;r++)for(var o=e[t[r]],s=r+1;s<t.length;s++){var a=e[t[s]];if(o.level===a.level){var l=i+this.overlapAvoidanceFactor*((o.shape.radius||0)/2+(a.shape.radius||0)/2),u=a.x-o.x,c=a.y-o.y,d=Math.sqrt(u*u+c*c),h=void 0;h=d<l?-Math.pow(.05*d,2)+Math.pow(.05*l,2):0,0===d?(LT("distance"),d=.01):h/=d;var f=u*h,p=c*h;n[o.id].x-=f,n[o.id].y-=p,n[a.id].x+=f,n[a.id].y+=p}}}}]),e}(),YT=function(){function e(t,n,i){hh(this,e),this.body=t,this.physicsBody=n,this.setOptions(i)}return yh(e,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var e,t,n,i,r,o=this.physicsBody.physicsEdgeIndices,s=this.body.edges,a=0;a<o.length;a++)!0===(t=s[o[a]]).connected&&t.toId!==t.fromId&&void 0!==this.body.nodes[t.toId]&&void 0!==this.body.nodes[t.fromId]&&(void 0!==t.edgeType.via?(e=void 0===t.options.length?this.options.springLength:t.options.length,n=t.to,i=t.edgeType.via,r=t.from,this._calculateSpringForce(n,i,.5*e),this._calculateSpringForce(i,r,.5*e)):(e=void 0===t.options.length?1.5*this.options.springLength:t.options.length,this._calculateSpringForce(t.from,t.to,e)))}},{key:"_calculateSpringForce",value:function(e,t,n){var i=e.x-t.x,r=e.y-t.y,o=Math.max(Math.sqrt(i*i+r*r),.01),s=this.options.springConstant*(n-o)/o,a=i*s,l=r*s;void 0!==this.physicsBody.forces[e.id]&&(this.physicsBody.forces[e.id].x+=a,this.physicsBody.forces[e.id].y+=l),void 0!==this.physicsBody.forces[t.id]&&(this.physicsBody.forces[t.id].x-=a,this.physicsBody.forces[t.id].y-=l)}}]),e}(),BT=function(){function e(t,n,i){hh(this,e),this.body=t,this.physicsBody=n,this.setOptions(i)}return yh(e,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var e,t,n,i,r,o,s,a,l,u,c=this.body.edges,d=this.physicsBody.physicsEdgeIndices,h=this.physicsBody.physicsNodeIndices,f=this.physicsBody.forces,p=0;p<h.length;p++){var v=h[p];f[v].springFx=0,f[v].springFy=0}for(var y=0;y<d.length;y++)!0===(t=c[d[y]]).connected&&(e=void 0===t.options.length?this.options.springLength:t.options.length,n=t.from.x-t.to.x,i=t.from.y-t.to.y,a=0===(a=Math.sqrt(n*n+i*i))?.01:a,r=n*(s=this.options.springConstant*(e-a)/a),o=i*s,t.to.level!=t.from.level?(void 0!==f[t.toId]&&(f[t.toId].springFx-=r,f[t.toId].springFy-=o),void 0!==f[t.fromId]&&(f[t.fromId].springFx+=r,f[t.fromId].springFy+=o)):(void 0!==f[t.toId]&&(f[t.toId].x-=.5*r,f[t.toId].y-=.5*o),void 0!==f[t.fromId]&&(f[t.fromId].x+=.5*r,f[t.fromId].y+=.5*o)));s=1;for(var g=0;g<h.length;g++){var m=h[g];l=Math.min(s,Math.max(-s,f[m].springFx)),u=Math.min(s,Math.max(-s,f[m].springFy)),f[m].x+=l,f[m].y+=u}for(var b=0,w=0,_=0;_<h.length;_++){var k=h[_];b+=f[k].x,w+=f[k].y}for(var x=b/h.length,S=w/h.length,O=0;O<h.length;O++){var E=h[O];f[E].x-=x,f[E].y-=S}}}]),e}(),HT=function(){function e(t,n,i){hh(this,e),this.body=t,this.physicsBody=n,this.setOptions(i)}return yh(e,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var e,t,n,i,r=this.body.nodes,o=this.physicsBody.physicsNodeIndices,s=this.physicsBody.forces,a=0;a<o.length;a++)e=-(i=r[o[a]]).x,t=-i.y,n=Math.sqrt(e*e+t*t),this._calculateForces(n,e,t,s,i)}},{key:"_calculateForces",value:function(e,t,n,i,r){var o=0===e?0:this.options.centralGravity/e;i[r.id].x=t*o,i[r.id].y=n*o}}]),e}(),WT=function(e){function t(e,n,i){var r;return hh(this,t),(r=dE(this,vE(t).call(this,e,n,i)))._rng=Bn("FORCE ATLAS 2 BASED REPULSION SOLVER"),r}return mE(t,RT),yh(t,[{key:"_calculateForces",value:function(e,t,n,i,r){0===e&&(t=e=.1*this._rng()),this.overlapAvoidanceFactor<1&&i.shape.radius&&(e=Math.max(.1+this.overlapAvoidanceFactor*i.shape.radius,e-i.shape.radius));var o=i.edges.length+1,s=this.options.gravitationalConstant*r.mass*i.options.mass*o/Math.pow(e,2),a=t*s,l=n*s;this.physicsBody.forces[i.id].x+=a,this.physicsBody.forces[i.id].y+=l}}]),t}(),UT=function(e){function t(e,n,i){return hh(this,t),dE(this,vE(t).call(this,e,n,i))}return mE(t,HT),yh(t,[{key:"_calculateForces",value:function(e,t,n,i,r){if(e>0){var o=r.edges.length+1,s=this.options.centralGravity*o*r.options.mass;i[r.id].x=t*s,i[r.id].y=n*s}}}]),t}(),VT=function(){function e(t){hh(this,e),this.body=t,this.physicsBody={physicsNodeIndices:[],physicsEdgeIndices:[],forces:{},velocities:{}},this.physicsEnabled=!0,this.simulationInterval=1e3/60,this.requiresTimeout=!0,this.previousStates={},this.referenceState={},this.freezeCache={},this.renderTimer=void 0,this.adaptiveTimestep=!1,this.adaptiveTimestepEnabled=!1,this.adaptiveCounter=0,this.adaptiveInterval=3,this.stabilized=!1,this.startedStabilization=!1,this.stabilizationIterations=0,this.ready=!1,this.options={},this.defaultOptions={enabled:!0,barnesHut:{theta:.5,gravitationalConstant:-2e3,centralGravity:.3,springLength:95,springConstant:.04,damping:.09,avoidOverlap:0},forceAtlas2Based:{theta:.5,gravitationalConstant:-50,centralGravity:.01,springConstant:.08,springLength:100,damping:.4,avoidOverlap:0},repulsion:{centralGravity:.2,springLength:200,springConstant:.05,nodeDistance:100,damping:.09,avoidOverlap:0},hierarchicalRepulsion:{centralGravity:0,springLength:100,springConstant:.01,nodeDistance:120,damping:.09},maxVelocity:50,minVelocity:.75,solver:"barnesHut",stabilization:{enabled:!0,iterations:1e3,updateInterval:50,onlyDynamicEdges:!1,fit:!0},timestep:.5,adaptiveTimestep:!0,wind:{x:0,y:0}},es(this.options,this.defaultOptions),this.timestep=.5,this.layoutFailed=!1,this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("initPhysics",(function(){e.initPhysics()})),this.body.emitter.on("_layoutFailed",(function(){e.layoutFailed=!0})),this.body.emitter.on("resetPhysics",(function(){e.stopSimulation(),e.ready=!1})),this.body.emitter.on("disablePhysics",(function(){e.physicsEnabled=!1,e.stopSimulation()})),this.body.emitter.on("restorePhysics",(function(){e.setOptions(e.options),!0===e.ready&&e.startSimulation()})),this.body.emitter.on("startSimulation",(function(){!0===e.ready&&e.startSimulation()})),this.body.emitter.on("stopSimulation",(function(){e.stopSimulation()})),this.body.emitter.on("destroy",(function(){e.stopSimulation(!1),e.body.emitter.off()})),this.body.emitter.on("_dataChanged",(function(){e.updatePhysicsData()}))}},{key:"setOptions",value:function(e){if(void 0!==e)if(!1===e)this.options.enabled=!1,this.physicsEnabled=!1,this.stopSimulation();else if(!0===e)this.options.enabled=!0,this.physicsEnabled=!0,this.startSimulation();else{this.physicsEnabled=!0,is(["stabilization"],this.options,e),Hs(this.options,e,"stabilization"),void 0===e.enabled&&(this.options.enabled=!0),!1===this.options.enabled&&(this.physicsEnabled=!1,this.stopSimulation());var t=this.options.wind;t&&(("number"!=typeof t.x||FT(t.x))&&(t.x=0),("number"!=typeof t.y||FT(t.y))&&(t.y=0)),this.timestep=this.options.timestep}this.init()}},{key:"init",value:function(){var e;"forceAtlas2Based"===this.options.solver?(e=this.options.forceAtlas2Based,this.nodesSolver=new WT(this.body,this.physicsBody,e),this.edgesSolver=new YT(this.body,this.physicsBody,e),this.gravitySolver=new UT(this.body,this.physicsBody,e)):"repulsion"===this.options.solver?(e=this.options.repulsion,this.nodesSolver=new jT(this.body,this.physicsBody,e),this.edgesSolver=new YT(this.body,this.physicsBody,e),this.gravitySolver=new HT(this.body,this.physicsBody,e)):"hierarchicalRepulsion"===this.options.solver?(e=this.options.hierarchicalRepulsion,this.nodesSolver=new zT(this.body,this.physicsBody,e),this.edgesSolver=new BT(this.body,this.physicsBody,e),this.gravitySolver=new HT(this.body,this.physicsBody,e)):(e=this.options.barnesHut,this.nodesSolver=new RT(this.body,this.physicsBody,e),this.edgesSolver=new YT(this.body,this.physicsBody,e),this.gravitySolver=new HT(this.body,this.physicsBody,e)),this.modelOptions=e}},{key:"initPhysics",value:function(){!0===this.physicsEnabled&&!0===this.options.enabled?!0===this.options.stabilization.enabled?this.stabilize():(this.stabilized=!1,this.ready=!0,this.body.emitter.emit("fit",{},this.layoutFailed),this.startSimulation()):(this.ready=!0,this.body.emitter.emit("fit"))}},{key:"startSimulation",value:function(){var e;!0===this.physicsEnabled&&!0===this.options.enabled?(this.stabilized=!1,this.adaptiveTimestep=!1,this.body.emitter.emit("_resizeNodes"),void 0===this.viewFunction&&(this.viewFunction=K(e=this.simulationStep).call(e,this),this.body.emitter.on("initRedraw",this.viewFunction),this.body.emitter.emit("_startRendering"))):this.body.emitter.emit("_redraw")}},{key:"stopSimulation",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.stabilized=!0,!0===e&&this._emitStabilized(),void 0!==this.viewFunction&&(this.body.emitter.off("initRedraw",this.viewFunction),this.viewFunction=void 0,!0===e&&this.body.emitter.emit("_stopRendering"))}},{key:"simulationStep",value:function(){var e=AT();this.physicsTick(),(AT()-e<.4*this.simulationInterval||!0===this.runDoubleSpeed)&&!1===this.stabilized&&(this.physicsTick(),this.runDoubleSpeed=!0),!0===this.stabilized&&this.stopSimulation()}},{key:"_emitStabilized",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.stabilizationIterations;(this.stabilizationIterations>1||!0===this.startedStabilization)&&xh((function(){e.body.emitter.emit("stabilized",{iterations:t}),e.startedStabilization=!1,e.stabilizationIterations=0}),0)}},{key:"physicsStep",value:function(){this.gravitySolver.solve(),this.nodesSolver.solve(),this.edgesSolver.solve(),this.moveNodes()}},{key:"adjustTimeStep",value:function(){!0===this._evaluateStepQuality()?this.timestep=1.2*this.timestep:this.timestep/1.2<this.options.timestep?this.timestep=this.options.timestep:(this.adaptiveCounter=-1,this.timestep=Math.max(this.options.timestep,this.timestep/1.2))}},{key:"physicsTick",value:function(){this._startStabilizing(),!0!==this.stabilized&&(!0===this.adaptiveTimestep&&!0===this.adaptiveTimestepEnabled?(this.adaptiveCounter%this.adaptiveInterval==0?(this.timestep=2*this.timestep,this.physicsStep(),this.revert(),this.timestep=.5*this.timestep,this.physicsStep(),this.physicsStep(),this.adjustTimeStep()):this.physicsStep(),this.adaptiveCounter+=1):(this.timestep=this.options.timestep,this.physicsStep()),!0===this.stabilized&&this.revert(),this.stabilizationIterations++)}},{key:"updatePhysicsData",value:function(){this.physicsBody.forces={},this.physicsBody.physicsNodeIndices=[],this.physicsBody.physicsEdgeIndices=[];var e=this.body.nodes,t=this.body.edges;for(var n in e)e.hasOwnProperty(n)&&!0===e[n].options.physics&&this.physicsBody.physicsNodeIndices.push(e[n].id);for(var i in t)t.hasOwnProperty(i)&&!0===t[i].options.physics&&this.physicsBody.physicsEdgeIndices.push(t[i].id);for(var r=0;r<this.physicsBody.physicsNodeIndices.length;r++){var o=this.physicsBody.physicsNodeIndices[r];this.physicsBody.forces[o]={x:0,y:0},void 0===this.physicsBody.velocities[o]&&(this.physicsBody.velocities[o]={x:0,y:0})}for(var s in this.physicsBody.velocities)void 0===e[s]&&delete this.physicsBody.velocities[s]}},{key:"revert",value:function(){var e=jh(this.previousStates),t=this.body.nodes,n=this.physicsBody.velocities;this.referenceState={};for(var i=0;i<e.length;i++){var r=e[i];void 0!==t[r]?!0===t[r].options.physics&&(this.referenceState[r]={positions:{x:t[r].x,y:t[r].y}},n[r].x=this.previousStates[r].vx,n[r].y=this.previousStates[r].vy,t[r].x=this.previousStates[r].x,t[r].y=this.previousStates[r].y):delete this.previousStates[r]}}},{key:"_evaluateStepQuality",value:function(){var e,t,n=this.body.nodes,i=this.referenceState;for(var r in this.referenceState)if(this.referenceState.hasOwnProperty(r)&&void 0!==n[r]&&(e=n[r].x-i[r].positions.x,t=n[r].y-i[r].positions.y,Math.sqrt(Math.pow(e,2)+Math.pow(t,2))>.3))return!1;return!0}},{key:"moveNodes",value:function(){for(var e=this.physicsBody.physicsNodeIndices,t=0,n=0,i=0;i<e.length;i++){var r=e[i],o=this._performStep(r);t=Math.max(t,o),n+=o}this.adaptiveTimestepEnabled=n/e.length<5,this.stabilized=t<this.options.minVelocity}},{key:"calculateComponentVelocity",value:function(e,t,n){e+=(t-this.modelOptions.damping*e)/n*this.timestep;var i=this.options.maxVelocity||1e9;return Math.abs(e)>i&&(e=e>0?i:-i),e}},{key:"_performStep",value:function(e){var t=this.body.nodes[e],n=this.physicsBody.forces[e];this.options.wind&&(n.x+=this.options.wind.x,n.y+=this.options.wind.y);var i=this.physicsBody.velocities[e];return this.previousStates[e]={x:t.x,y:t.y,vx:i.x,vy:i.y},!1===t.options.fixed.x?(i.x=this.calculateComponentVelocity(i.x,n.x,t.options.mass),t.x+=i.x*this.timestep):(n.x=0,i.x=0),!1===t.options.fixed.y?(i.y=this.calculateComponentVelocity(i.y,n.y,t.options.mass),t.y+=i.y*this.timestep):(n.y=0,i.y=0),Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))}},{key:"_freezeNodes",value:function(){var e=this.body.nodes;for(var t in e)if(e.hasOwnProperty(t)&&e[t].x&&e[t].y){var n=e[t].options.fixed;this.freezeCache[t]={x:n.x,y:n.y},n.x=!0,n.y=!0}}},{key:"_restoreFrozenNodes",value:function(){var e=this.body.nodes;for(var t in e)e.hasOwnProperty(t)&&void 0!==this.freezeCache[t]&&(e[t].options.fixed.x=this.freezeCache[t].x,e[t].options.fixed.y=this.freezeCache[t].y);this.freezeCache={}}},{key:"stabilize",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.stabilization.iterations;"number"!=typeof t&&(t=this.options.stabilization.iterations,console.log("The stabilize method needs a numeric amount of iterations. Switching to default: ",t)),0!==this.physicsBody.physicsNodeIndices.length?(this.adaptiveTimestep=this.options.adaptiveTimestep,this.body.emitter.emit("_resizeNodes"),this.stopSimulation(),this.stabilized=!1,this.body.emitter.emit("_blockRedraw"),this.targetIterations=t,!0===this.options.stabilization.onlyDynamicEdges&&this._freezeNodes(),this.stabilizationIterations=0,xh((function(){return e._stabilizationBatch()}),0)):this.ready=!0}},{key:"_startStabilizing",value:function(){return!0!==this.startedStabilization&&(this.body.emitter.emit("startStabilizing"),this.startedStabilization=!0,!0)}},{key:"_stabilizationBatch",value:function(){var e=this,t=function(){return!1===e.stabilized&&e.stabilizationIterations<e.targetIterations},n=function(){e.body.emitter.emit("stabilizationProgress",{iterations:e.stabilizationIterations,total:e.targetIterations})};this._startStabilizing()&&n();for(var i,r=0;t()&&r<this.options.stabilization.updateInterval;)this.physicsTick(),r++;n(),t()?xh(K(i=this._stabilizationBatch).call(i,this),0):this._finalizeStabilization()}},{key:"_finalizeStabilization",value:function(){this.body.emitter.emit("_allowRedraw"),!0===this.options.stabilization.fit&&this.body.emitter.emit("fit"),!0===this.options.stabilization.onlyDynamicEdges&&this._restoreFrozenNodes(),this.body.emitter.emit("stabilizationIterationsDone"),this.body.emitter.emit("_requestRedraw"),!0===this.stabilized?this._emitStabilized():this.startSimulation(),this.ready=!0}},{key:"_drawForces",value:function(e){for(var t=0;t<this.physicsBody.physicsNodeIndices.length;t++){var n=this.physicsBody.physicsNodeIndices[t],i=this.body.nodes[n],r=this.physicsBody.forces[n],o=Math.sqrt(Math.pow(r.x,2)+Math.pow(r.x,2)),s=Math.min(Math.max(5,o),15),a=3*s,l=As((180-180*Math.min(1,Math.max(0,.03*o)))/360,1,1),u={x:i.x+20*r.x,y:i.y+20*r.y};e.lineWidth=s,e.strokeStyle=l,e.beginPath(),e.moveTo(i.x,i.y),e.lineTo(u.x,u.y),e.stroke();var c=Math.atan2(r.y,r.x);e.fillStyle=l,_T.draw(e,{type:"arrow",point:u,angle:c,length:a}),_E(e).call(e)}}}]),e}(),GT=[].reverse,qT=[1,2];U({target:"Array",proto:!0,forced:String(qT)===String(qT.reverse())},{reverse:function(){return Dl(this)&&(this.length=this.length),GT.call(this)}});for(var $T=Z("Array").reverse,ZT=Array.prototype,QT=function(e){var t=e.reverse;return e===ZT||e instanceof Array&&t===ZT.reverse?$T:t},XT=i((function(e){var t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(t){var n=new Uint8Array(16);e.exports=function(){return t(n),n}}else{var i=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),i[t]=e>>>((3&t)<<3)&255;return i}}})),KT=[],JT=0;JT<256;++JT)KT[JT]=(JT+256).toString(16).substr(1);var eM=function(e,t,n){var i=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var r=(e=e||{}).random||(e.rng||XT)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t)for(var o=0;o<16;++o)t[i+o]=r[o];return t||function(e,t){var n=t||0,i=KT;return[i[e[n++]],i[e[n++]],i[e[n++]],i[e[n++]],"-",i[e[n++]],i[e[n++]],"-",i[e[n++]],i[e[n++]],"-",i[e[n++]],i[e[n++]],"-",i[e[n++]],i[e[n++]],i[e[n++]],i[e[n++]],i[e[n++]],i[e[n++]]].join("")}(r)},tM=function(){function e(){hh(this,e)}return yh(e,null,[{key:"getRange",value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],i=1e9,r=-1e9,o=1e9,s=-1e9;if(n.length>0)for(var a=0;a<n.length;a++)o>(t=e[n[a]]).shape.boundingBox.left&&(o=t.shape.boundingBox.left),s<t.shape.boundingBox.right&&(s=t.shape.boundingBox.right),i>t.shape.boundingBox.top&&(i=t.shape.boundingBox.top),r<t.shape.boundingBox.bottom&&(r=t.shape.boundingBox.bottom);return 1e9===o&&-1e9===s&&1e9===i&&-1e9===r&&(i=0,r=0,o=0,s=0),{minX:o,maxX:s,minY:i,maxY:r}}},{key:"getRangeCore",value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],i=1e9,r=-1e9,o=1e9,s=-1e9;if(n.length>0)for(var a=0;a<n.length;a++)o>(t=e[n[a]]).x&&(o=t.x),s<t.x&&(s=t.x),i>t.y&&(i=t.y),r<t.y&&(r=t.y);return 1e9===o&&-1e9===s&&1e9===i&&-1e9===r&&(i=0,r=0,o=0,s=0),{minX:o,maxX:s,minY:i,maxY:r}}},{key:"findCenter",value:function(e){return{x:.5*(e.maxX+e.minX),y:.5*(e.maxY+e.minY)}}},{key:"cloneOptions",value:function(e,t){var n={};return void 0===t||"node"===t?(rs(n,e.options,!0),n.x=e.x,n.y=e.y,n.amountOfConnections=e.edges.length):rs(n,e.options,!0),n}}]),e}(),nM=function(e){function t(e,n,i,r,o,s){var a;return hh(this,t),(a=dE(this,vE(t).call(this,e,n,i,r,o,s))).isCluster=!0,a.containedNodes={},a.containedEdges={},a}return mE(t,KE),yh(t,[{key:"_openChildCluster",value:function(e){var t=this,n=this.body.nodes[e];if(void 0===this.containedNodes[e])throw new Error("node with id: "+e+" not in current cluster");if(!n.isCluster)throw new Error("node with id: "+e+" is not a cluster");delete this.containedNodes[e],ps(n.edges,(function(e){delete t.containedEdges[e.id]})),ps(n.containedNodes,(function(e,n){t.containedNodes[n]=e})),n.containedNodes={},ps(n.containedEdges,(function(e,n){t.containedEdges[n]=e})),n.containedEdges={},ps(n.edges,(function(e){ps(t.edges,(function(n){var i,r,o=Cu(i=n.clusteringEdgeReplacingIds).call(i,e.id);-1!==o&&(ps(e.clusteringEdgeReplacingIds,(function(e){n.clusteringEdgeReplacingIds.push(e),t.body.edges[e].edgeReplacedById=n.id})),hu(r=n.clusteringEdgeReplacingIds).call(r,o,1))}))})),n.edges=[]}}]),t}(),iM=function(){function e(t){var n=this;hh(this,e),this.body=t,this.clusteredNodes={},this.clusteredEdges={},this.options={},this.defaultOptions={},es(this.options,this.defaultOptions),this.body.emitter.on("_resetData",(function(){n.clusteredNodes={},n.clusteredEdges={}}))}return yh(e,[{key:"clusterByHubsize",value:function(e,t){void 0===e?e=this._getHubSize():"object"===BO(e)&&(t=this._checkOptions(e),e=this._getHubSize());for(var n=[],i=0;i<this.body.nodeIndices.length;i++){var r=this.body.nodes[this.body.nodeIndices[i]];r.edges.length>=e&&n.push(r.id)}for(var o=0;o<n.length;o++)this.clusterByConnection(n[o],t,!0);this.body.emitter.emit("_dataChanged")}},{key:"cluster",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(void 0===t.joinCondition)throw new Error("Cannot call clusterByNodeData without a joinCondition function in the options.");t=this._checkOptions(t);var i={},r={};ps(this.body.nodes,(function(n,o){n.options&&!0===t.joinCondition(n.options)&&(i[o]=n,ps(n.edges,(function(t){void 0===e.clusteredEdges[t.id]&&(r[t.id]=t)})))})),this._cluster(i,r,t,n)}},{key:"clusterByEdgeCount",value:function(e,t){var n=this,i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];t=this._checkOptions(t);for(var r,o,s,a=[],l={},u=function(i){var u={},c={},f=n.body.nodeIndices[i],p=n.body.nodes[f];if(void 0===l[f]){s=0,o=[];for(var v=0;v<p.edges.length;v++)r=p.edges[v],void 0===n.clusteredEdges[r.id]&&(r.toId!==r.fromId&&s++,o.push(r));if(s===e){d=function(e){if(void 0===t.joinCondition||null===t.joinCondition)return!0;var n=tM.cloneOptions(e);return t.joinCondition(n)};for(var y=!0,g=0;g<o.length;g++){r=o[g];var m=n._getConnectedId(r,f);if(!d(p)){y=!1;break}c[r.id]=r,u[f]=p,u[m]=n.body.nodes[m],l[f]=!0}if(jh(u).length>0&&jh(c).length>0&&!0===y)if(void 0!==(h=function(){for(var e=0;e<a.length;++e)for(var t in u)if(void 0!==a[e].nodes[t])return a[e]}())){for(var b in u)void 0===h.nodes[b]&&(h.nodes[b]=u[b]);for(var w in c)void 0===h.edges[w]&&(h.edges[w]=c[w])}else a.push({nodes:u,edges:c})}}},c=0;c<this.body.nodeIndices.length;c++){var d,h;u(c)}for(var f=0;f<a.length;f++)this._cluster(a[f].nodes,a[f].edges,t,!1);!0===i&&this.body.emitter.emit("_dataChanged")}},{key:"clusterOutliers",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.clusterByEdgeCount(1,e,t)}},{key:"clusterBridges",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.clusterByEdgeCount(2,e,t)}},{key:"clusterByConnection",value:function(e,t){var n,i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new Error("No nodeId supplied to clusterByConnection!");if(void 0===this.body.nodes[e])throw new Error("The nodeId given to clusterByConnection does not exist!");var r=this.body.nodes[e];void 0===(t=this._checkOptions(t,r)).clusterNodeProperties.x&&(t.clusterNodeProperties.x=r.x),void 0===t.clusterNodeProperties.y&&(t.clusterNodeProperties.y=r.y),void 0===t.clusterNodeProperties.fixed&&(t.clusterNodeProperties.fixed={},t.clusterNodeProperties.fixed.x=r.options.fixed.x,t.clusterNodeProperties.fixed.y=r.options.fixed.y);var o={},s={},a=r.id,l=tM.cloneOptions(r);o[a]=r;for(var u=0;u<r.edges.length;u++){var c=r.edges[u];if(void 0===this.clusteredEdges[c.id]){var d=this._getConnectedId(c,a);if(void 0===this.clusteredNodes[d])if(d!==a)if(void 0===t.joinCondition)s[c.id]=c,o[d]=this.body.nodes[d];else{var h=tM.cloneOptions(this.body.nodes[d]);!0===t.joinCondition(l,h)&&(s[c.id]=c,o[d]=this.body.nodes[d])}else s[c.id]=c}}var f=mc(n=jh(o)).call(n,(function(e){return o[e].id}));for(p in o)if(o.hasOwnProperty(p))for(var p=o[p],v=0;v<p.edges.length;v++){var y=p.edges[v];Cu(f).call(f,this._getConnectedId(y,p.id))>-1&&(s[y.id]=y)}this._cluster(o,s,t,i)}},{key:"_createClusterEdges",value:function(e,t,n,i){for(var r,o,s,a,l,u,c=jh(e),d=[],h=0;h<c.length;h++){s=e[o=c[h]];for(var f=0;f<s.edges.length;f++)r=s.edges[f],void 0===this.clusteredEdges[r.id]&&(r.toId==r.fromId?t[r.id]=r:r.toId==o?(a=n.id,u=l=r.fromId):(a=r.toId,l=n.id,u=a),void 0===e[u]&&d.push({edge:r,fromId:l,toId:a}))}for(var p=[],v=function(e){for(var t=0;t<p.length;t++){var n=p[t],i=e.fromId===n.fromId&&e.toId===n.toId,r=e.fromId===n.toId&&e.toId===n.fromId;if(i||r)return n}return null},y=0;y<d.length;y++){var g=d[y],m=g.edge,b=v(g);null===b?(b=this._createClusteredEdge(g.fromId,g.toId,m,i),p.push(b)):b.clusteringEdgeReplacingIds.push(m.id),this.body.edges[m.id].edgeReplacedById=b.id,this._backupEdgeOptions(m),m.setOptions({physics:!1})}}},{key:"_checkOptions",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return void 0===e.clusterEdgeProperties&&(e.clusterEdgeProperties={}),void 0===e.clusterNodeProperties&&(e.clusterNodeProperties={}),e}},{key:"_cluster",value:function(e,t,n){var i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=[];for(var o in e)e.hasOwnProperty(o)&&void 0!==this.clusteredNodes[o]&&r.push(o);for(var s=0;s<r.length;++s)delete e[r[s]];if(0!=jh(e).length&&(1!=jh(e).length||1==n.clusterNodeProperties.allowSingleNodeCluster)){var a=rs({},n.clusterNodeProperties);if(void 0!==n.processProperties){var l=[];for(var u in e)if(e.hasOwnProperty(u)){var c=tM.cloneOptions(e[u]);l.push(c)}var d=[];for(var h in t)if(t.hasOwnProperty(h)&&"clusterEdge:"!==h.substr(0,12)){var f=tM.cloneOptions(t[h],"edge");d.push(f)}if(!(a=n.processProperties(a,l,d)))throw new Error("The processProperties function does not return properties!")}void 0===a.id&&(a.id="cluster:"+eM());var p=a.id;void 0===a.label&&(a.label="cluster");var v=void 0;void 0===a.x&&(v=this._getClusterPosition(e),a.x=v.x),void 0===a.y&&(void 0===v&&(v=this._getClusterPosition(e)),a.y=v.y),a.id=p;var y=this.body.functions.createNode(a,nM);y.containedNodes=e,y.containedEdges=t,y.clusterEdgeProperties=n.clusterEdgeProperties,this.body.nodes[a.id]=y,this._clusterEdges(e,t,a,n.clusterEdgeProperties),a.id=void 0,!0===i&&this.body.emitter.emit("_dataChanged")}}},{key:"_backupEdgeOptions",value:function(e){void 0===this.clusteredEdges[e.id]&&(this.clusteredEdges[e.id]={physics:e.options.physics})}},{key:"_restoreEdge",value:function(e){var t=this.clusteredEdges[e.id];void 0!==t&&(e.setOptions({physics:t.physics}),delete this.clusteredEdges[e.id])}},{key:"isCluster",value:function(e){return void 0!==this.body.nodes[e]?!0===this.body.nodes[e].isCluster:(console.log("Node does not exist."),!1)}},{key:"_getClusterPosition",value:function(e){for(var t,n=jh(e),i=e[n[0]].x,r=e[n[0]].x,o=e[n[0]].y,s=e[n[0]].y,a=1;a<n.length;a++)i=(t=e[n[a]]).x<i?t.x:i,r=t.x>r?t.x:r,o=t.y<o?t.y:o,s=t.y>s?t.y:s;return{x:.5*(i+r),y:.5*(o+s)}}},{key:"openCluster",value:function(e,t){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new Error("No clusterNodeId supplied to openCluster.");var i=this.body.nodes[e];if(void 0===i)throw new Error("The clusterNodeId supplied to openCluster does not exist.");if(!0!==i.isCluster||void 0===i.containedNodes||void 0===i.containedEdges)throw new Error("The node:"+e+" is not a valid cluster.");var r=this.findNode(e),o=Cu(r).call(r,e)-1;if(o>=0){var s=r[o],a=this.body.nodes[s];return a._openChildCluster(e),delete this.body.nodes[e],void(!0===n&&this.body.emitter.emit("_dataChanged"))}var l=i.containedNodes,u=i.containedEdges;if(void 0!==t&&void 0!==t.releaseFunction&&"function"==typeof t.releaseFunction){var c={},d={x:i.x,y:i.y};for(var h in l)if(l.hasOwnProperty(h)){var f=this.body.nodes[h];c[h]={x:f.x,y:f.y}}var p=t.releaseFunction(d,c);for(var v in l)if(l.hasOwnProperty(v)){var y=this.body.nodes[v];void 0!==p[v]&&(y.x=void 0===p[v].x?i.x:p[v].x,y.y=void 0===p[v].y?i.y:p[v].y)}}else ps(l,(function(e){!1===e.options.fixed.x&&(e.x=i.x),!1===e.options.fixed.y&&(e.y=i.y)}));for(var g in l)if(l.hasOwnProperty(g)){var m=this.body.nodes[g];m.vx=i.vx,m.vy=i.vy,m.setOptions({physics:!0}),delete this.clusteredNodes[g]}for(var b=[],w=0;w<i.edges.length;w++)b.push(i.edges[w]);for(var _=0;_<b.length;_++){for(var k=b[_],x=this._getConnectedId(k,e),S=this.clusteredNodes[x],O=0;O<k.clusteringEdgeReplacingIds.length;O++){var E=k.clusteringEdgeReplacingIds[O],T=this.body.edges[E];if(void 0!==T)if(void 0!==S){var M=this.body.nodes[S.clusterId];M.containedEdges[T.id]=T,delete u[T.id];var D=T.fromId,C=T.toId;T.toId==x?C=S.clusterId:D=S.clusterId,this._createClusteredEdge(D,C,T,M.clusterEdgeProperties,{hidden:!1,physics:!0})}else this._restoreEdge(T)}k.remove()}for(var P in u)u.hasOwnProperty(P)&&this._restoreEdge(u[P]);delete this.body.nodes[e],!0===n&&this.body.emitter.emit("_dataChanged")}},{key:"getNodesInCluster",value:function(e){var t=[];if(!0===this.isCluster(e)){var n=this.body.nodes[e].containedNodes;for(var i in n)n.hasOwnProperty(i)&&t.push(this.body.nodes[i].id)}return t}},{key:"findNode",value:function(e){for(var t,n=[],i=0;void 0!==this.clusteredNodes[e]&&i<100;){if(void 0===(t=this.body.nodes[e]))return[];n.push(t.id),e=this.clusteredNodes[e].clusterId,i++}return void 0===(t=this.body.nodes[e])?[]:(n.push(t.id),QT(n).call(n),n)}},{key:"updateClusteredNode",value:function(e,t){if(void 0===e)throw new Error("No clusteredNodeId supplied to updateClusteredNode.");if(void 0===t)throw new Error("No newOptions supplied to updateClusteredNode.");if(void 0===this.body.nodes[e])throw new Error("The clusteredNodeId supplied to updateClusteredNode does not exist.");this.body.nodes[e].setOptions(t),this.body.emitter.emit("_dataChanged")}},{key:"updateEdge",value:function(e,t){if(void 0===e)throw new Error("No startEdgeId supplied to updateEdge.");if(void 0===t)throw new Error("No newOptions supplied to updateEdge.");if(void 0===this.body.edges[e])throw new Error("The startEdgeId supplied to updateEdge does not exist.");for(var n=this.getClusteredEdges(e),i=0;i<n.length;i++)this.body.edges[n[i]].setOptions(t);this.body.emitter.emit("_dataChanged")}},{key:"getClusteredEdges",value:function(e){for(var t=[],n=0;void 0!==e&&void 0!==this.body.edges[e]&&n<100;)t.push(this.body.edges[e].id),e=this.body.edges[e].edgeReplacedById,n++;return QT(t).call(t),t}},{key:"getBaseEdge",value:function(e){return this.getBaseEdges(e)[0]}},{key:"getBaseEdges",value:function(e){for(var t=[e],n=[],i=[],r=0;t.length>0&&r<100;){var o=t.pop();if(void 0!==o){var s=this.body.edges[o];if(void 0!==s){r++;var a=s.clusteringEdgeReplacingIds;if(void 0===a)i.push(o);else for(var l=0;l<a.length;++l){var u=a[l];-1===Cu(t).call(t,a)&&-1===Cu(n).call(n,a)&&t.push(u)}n.push(o)}}}return i}},{key:"_getConnectedId",value:function(e,t){return e.toId!=t?e.toId:(e.fromId,e.fromId)}},{key:"_getHubSize",value:function(){for(var e=0,t=0,n=0,i=0,r=0;r<this.body.nodeIndices.length;r++){var o=this.body.nodes[this.body.nodeIndices[r]];o.edges.length>i&&(i=o.edges.length),e+=o.edges.length,t+=Math.pow(o.edges.length,2),n+=1}e/=n;var s=(t/=n)-Math.pow(e,2),a=Math.sqrt(s),l=Math.floor(e+2*a);return l>i&&(l=i),l}},{key:"_createClusteredEdge",value:function(e,t,n,i,r){var o=tM.cloneOptions(n,"edge");rs(o,i),o.from=e,o.to=t,o.id="clusterEdge:"+eM(),void 0!==r&&rs(o,r);var s=this.body.functions.createEdge(o);return s.clusteringEdgeReplacingIds=[n.id],s.connect(),this.body.edges[s.id]=s,s}},{key:"_clusterEdges",value:function(e,t,n,i){if(t instanceof NT){var r=t,o={};o[r.id]=r,t=o}if(e instanceof KE){var s=e,a={};a[s.id]=s,e=a}if(null==n)throw new Error("_clusterEdges: parameter clusterNode required");for(var l in void 0===i&&(i=n.clusterEdgeProperties),this._createClusterEdges(e,t,n,i),t)if(t.hasOwnProperty(l)&&void 0!==this.body.edges[l]){var u=this.body.edges[l];this._backupEdgeOptions(u),u.setOptions({physics:!1})}for(var c in e)e.hasOwnProperty(c)&&(this.clusteredNodes[c]={clusterId:n.id,node:this.body.nodes[c]},this.body.nodes[c].setOptions({physics:!1}))}},{key:"_getClusterNodeForNode",value:function(e){if(void 0!==e){var t=this.clusteredNodes[e];if(void 0!==t){var n=t.clusterId;if(void 0!==n)return this.body.nodes[n]}}}},{key:"_filter",value:function(e,t){var n=[];return ps(e,(function(e){t(e)&&n.push(e)})),n}},{key:"_updateState",value:function(){var e,t=this,n=[],i={},r=function(e){ps(t.body.nodes,(function(t){!0===t.isCluster&&e(t)}))};for(e in this.clusteredNodes)this.clusteredNodes.hasOwnProperty(e)&&void 0===this.body.nodes[e]&&n.push(e);r((function(e){for(var t=0;t<n.length;t++)delete e.containedNodes[n[t]]}));for(var o=0;o<n.length;o++)delete this.clusteredNodes[n[o]];ps(this.clusteredEdges,(function(e){var n=t.body.edges[e];void 0!==n&&n.endPointsValid()||(i[e]=e)})),r((function(e){ps(e.containedEdges,(function(e,t){e.endPointsValid()||i[t]||(i[t]=t)}))})),ps(this.body.edges,(function(e,n){var r=!0,o=e.clusteringEdgeReplacingIds;if(void 0!==o){var s=0;ps(o,(function(e){var n=t.body.edges[e];void 0!==n&&n.endPointsValid()&&(s+=1)})),r=s>0}e.endPointsValid()&&r||(i[n]=n)})),r((function(e){ps(i,(function(n){delete e.containedEdges[n],ps(e.edges,(function(r,o){r.id!==n?r.clusteringEdgeReplacingIds=t._filter(r.clusteringEdgeReplacingIds,(function(e){return!i[e]})):e.edges[o]=null})),e.edges=t._filter(e.edges,(function(e){return null!==e}))}))})),ps(i,(function(e){delete t.clusteredEdges[e]})),ps(i,(function(e){delete t.body.edges[e]})),ps(jh(this.body.edges),(function(e){var n=t.body.edges[e],i=t._isClusteredNode(n.fromId)||t._isClusteredNode(n.toId);if(i!==t._isClusteredEdge(n.id))if(i){var r=t._getClusterNodeForNode(n.fromId);void 0!==r&&t._clusterEdges(t.body.nodes[n.fromId],n,r);var o=t._getClusterNodeForNode(n.toId);void 0!==o&&t._clusterEdges(t.body.nodes[n.toId],n,o)}else delete t._clusterEdges[e],t._restoreEdge(n)}));for(var s=!1,a=!0,l=function(){var e=[];r((function(t){var n=jh(t.containedNodes).length,i=!0===t.options.allowSingleNodeCluster;(i&&n<1||!i&&n<2)&&e.push(t.id)}));for(var n=0;n<e.length;++n)t.openCluster(e[n],{},!1);a=e.length>0,s=s||a};a;)l();s&&this._updateState()}},{key:"_isClusteredNode",value:function(e){return void 0!==this.clusteredNodes[e]}},{key:"_isClusteredEdge",value:function(e){return void 0!==this.clusteredEdges[e]}}]),e}(),rM=function(){function e(t,n){var i;hh(this,e),void 0!==window&&(i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame),window.requestAnimationFrame=void 0===i?function(e){e()}:i,this.body=t,this.canvas=n,this.redrawRequested=!1,this.renderTimer=void 0,this.requiresTimeout=!0,this.renderingActive=!1,this.renderRequests=0,this.allowRedraw=!0,this.dragging=!1,this.zooming=!1,this.options={},this.defaultOptions={hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1},es(this.options,this.defaultOptions),this._determineBrowserMethod(),this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e,t=this;this.body.emitter.on("dragStart",(function(){t.dragging=!0})),this.body.emitter.on("dragEnd",(function(){t.dragging=!1})),this.body.emitter.on("zoom",(function(){t.zooming=!0,window.clearTimeout(t.zoomTimeoutId),t.zoomTimeoutId=window.setTimeout((function(){var e;t.zooming=!1,K(e=t._requestRedraw).call(e,t)()}),250)})),this.body.emitter.on("_resizeNodes",(function(){t._resizeNodes()})),this.body.emitter.on("_redraw",(function(){!1===t.renderingActive&&t._redraw()})),this.body.emitter.on("_blockRedraw",(function(){t.allowRedraw=!1})),this.body.emitter.on("_allowRedraw",(function(){t.allowRedraw=!0,t.redrawRequested=!1})),this.body.emitter.on("_requestRedraw",K(e=this._requestRedraw).call(e,this)),this.body.emitter.on("_startRendering",(function(){t.renderRequests+=1,t.renderingActive=!0,t._startRendering()})),this.body.emitter.on("_stopRendering",(function(){t.renderRequests-=1,t.renderingActive=t.renderRequests>0,t.renderTimer=void 0})),this.body.emitter.on("destroy",(function(){t.renderRequests=0,t.allowRedraw=!1,t.renderingActive=!1,!0===t.requiresTimeout?clearTimeout(t.renderTimer):window.cancelAnimationFrame(t.renderTimer),t.body.emitter.off()}))}},{key:"setOptions",value:function(e){void 0!==e&&ns(["hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag"],this.options,e)}},{key:"_requestNextFrame",value:function(e,t){if("undefined"!=typeof window){var n,i=window;return!0===this.requiresTimeout?n=i.setTimeout(e,t):i.requestAnimationFrame&&(n=i.requestAnimationFrame(e)),n}}},{key:"_startRendering",value:function(){var e;!0===this.renderingActive&&void 0===this.renderTimer&&(this.renderTimer=this._requestNextFrame(K(e=this._renderStep).call(e,this),this.simulationInterval))}},{key:"_renderStep",value:function(){!0===this.renderingActive&&(this.renderTimer=void 0,!0===this.requiresTimeout&&this._startRendering(),this._redraw(),!1===this.requiresTimeout&&this._startRendering())}},{key:"redraw",value:function(){this.body.emitter.emit("setSize"),this._redraw()}},{key:"_requestRedraw",value:function(){var e=this;!0!==this.redrawRequested&&!1===this.renderingActive&&!0===this.allowRedraw&&(this.redrawRequested=!0,this._requestNextFrame((function(){e._redraw(!1)}),0))}},{key:"_redraw",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!0===this.allowRedraw){this.body.emitter.emit("initRedraw"),this.redrawRequested=!1,0!==this.canvas.frame.canvas.width&&0!==this.canvas.frame.canvas.height||this.canvas.setSize(),this.canvas.setTransform();var t=this.canvas.getContext(),n=this.canvas.frame.canvas.clientWidth,i=this.canvas.frame.canvas.clientHeight;if(t.clearRect(0,0,n,i),0===this.canvas.frame.clientWidth)return;t.save(),t.translate(this.body.view.translation.x,this.body.view.translation.y),t.scale(this.body.view.scale,this.body.view.scale),t.beginPath(),this.body.emitter.emit("beforeDrawing",t),t.closePath(),!1===e&&(!1===this.dragging||!0===this.dragging&&!1===this.options.hideEdgesOnDrag)&&(!1===this.zooming||!0===this.zooming&&!1===this.options.hideEdgesOnZoom)&&this._drawEdges(t),(!1===this.dragging||!0===this.dragging&&!1===this.options.hideNodesOnDrag)&&this._drawNodes(t,e),t.beginPath(),this.body.emitter.emit("afterDrawing",t),t.closePath(),t.restore(),!0===e&&t.clearRect(0,0,n,i)}}},{key:"_resizeNodes",value:function(){this.canvas.setTransform();var e=this.canvas.getContext();e.save(),e.translate(this.body.view.translation.x,this.body.view.translation.y),e.scale(this.body.view.scale,this.body.view.scale);var t,n=this.body.nodes;for(var i in n)n.hasOwnProperty(i)&&((t=n[i]).resize(e),t.updateBoundingBox(e,t.selected));e.restore()}},{key:"_drawNodes",value:function(e){for(var t,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=this.body.nodes,r=this.body.nodeIndices,o=[],s=20,a=this.canvas.DOMtoCanvas({x:-s,y:-s}),l=this.canvas.DOMtoCanvas({x:this.canvas.frame.canvas.clientWidth+s,y:this.canvas.frame.canvas.clientHeight+s}),u={top:a.y,left:a.x,bottom:l.y,right:l.x},c=0;c<r.length;c++)(t=i[r[c]]).isSelected()?o.push(r[c]):!0===n?t.draw(e):!0===t.isBoundingBoxOverlappingWith(u)?t.draw(e):t.updateBoundingBox(e,t.selected);for(var d=0;d<o.length;d++)(t=i[o[d]]).draw(e)}},{key:"_drawEdges",value:function(e){for(var t,n=this.body.edges,i=this.body.edgeIndices,r=0;r<i.length;r++)!0===(t=n[i[r]]).connected&&t.draw(e)}},{key:"_determineBrowserMethod",value:function(){if("undefined"!=typeof window){var e=navigator.userAgent.toLowerCase();this.requiresTimeout=!1,-1!=Cu(e).call(e,"msie 9.0")?this.requiresTimeout=!0:-1!=Cu(e).call(e,"safari")&&Cu(e).call(e,"chrome")<=-1&&(this.requiresTimeout=!0)}else this.requiresTimeout=!0}}]),e}(),oM=F.setInterval,sM=i((function(e,t){t.onTouch=function(e,t){t.inputHandler=function(e){e.isFirst&&t(e)},e.on("hammer.input",t.inputHandler)},t.onRelease=function(e,t){return t.inputHandler=function(e){e.isFinal&&t(e)},e.on("hammer.input",t.inputHandler)},t.offTouch=function(e,t){e.off("hammer.input",t.inputHandler)},t.offRelease=t.offTouch,t.disablePreventDefaultVertically=function(e){return e.getTouchAction=function(){return["pan-y"]},e}})),aM=(sM.onTouch,sM.onRelease,sM.offTouch,sM.offRelease,sM.disablePreventDefaultVertically,function(){function e(t){var n;hh(this,e),this.body=t,this.pixelRatio=1,this.resizeTimer=void 0,this.resizeFunction=K(n=this._onResize).call(n,this),this.cameraState={},this.initialized=!1,this.canvasViewCenter={},this.options={},this.defaultOptions={autoResize:!0,height:"100%",width:"100%"},es(this.options,this.defaultOptions),this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e,t=this;this.body.emitter.once("resize",(function(e){0!==e.width&&(t.body.view.translation.x=.5*e.width),0!==e.height&&(t.body.view.translation.y=.5*e.height)})),this.body.emitter.on("setSize",K(e=this.setSize).call(e,this)),this.body.emitter.on("destroy",(function(){t.hammerFrame.destroy(),t.hammer.destroy(),t._cleanUp()}))}},{key:"setOptions",value:function(e){var t,n=this;void 0!==e&&ns(["width","height","autoResize"],this.options,e),!0===this.options.autoResize&&(this._cleanUp(),this.resizeTimer=oM((function(){!0===n.setSize()&&n.body.emitter.emit("_requestRedraw")}),1e3),this.resizeFunction=K(t=this._onResize).call(t,this),ms(window,"resize",this.resizeFunction))}},{key:"_cleanUp",value:function(){void 0!==this.resizeTimer&&clearInterval(this.resizeTimer),bs(window,"resize",this.resizeFunction),this.resizeFunction=void 0}},{key:"_onResize",value:function(){this.setSize(),this.body.emitter.emit("_redraw")}},{key:"_getCameraState",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.pixelRatio;!0===this.initialized&&(this.cameraState.previousWidth=this.frame.canvas.width/e,this.cameraState.previousHeight=this.frame.canvas.height/e,this.cameraState.scale=this.body.view.scale,this.cameraState.position=this.DOMtoCanvas({x:.5*this.frame.canvas.width/e,y:.5*this.frame.canvas.height/e}))}},{key:"_setCameraState",value:function(){if(void 0!==this.cameraState.scale&&0!==this.frame.canvas.clientWidth&&0!==this.frame.canvas.clientHeight&&0!==this.pixelRatio&&this.cameraState.previousWidth>0&&this.cameraState.previousHeight>0){var e=this.frame.canvas.width/this.pixelRatio/this.cameraState.previousWidth,t=this.frame.canvas.height/this.pixelRatio/this.cameraState.previousHeight,n=this.cameraState.scale;1!=e&&1!=t?n=.5*this.cameraState.scale*(e+t):1!=e?n=this.cameraState.scale*e:1!=t&&(n=this.cameraState.scale*t),this.body.view.scale=n;var i=this.DOMtoCanvas({x:.5*this.frame.canvas.clientWidth,y:.5*this.frame.canvas.clientHeight}),r={x:i.x-this.cameraState.position.x,y:i.y-this.cameraState.position.y};this.body.view.translation.x+=r.x*this.body.view.scale,this.body.view.translation.y+=r.y*this.body.view.scale}}},{key:"_prepareValue",value:function(e){if("number"==typeof e)return e+"px";if("string"==typeof e){if(-1!==Cu(e).call(e,"%")||-1!==Cu(e).call(e,"px"))return e;if(-1===Cu(e).call(e,"%"))return e+"px"}throw new Error("Could not use the value supplied for width or height:"+e)}},{key:"_create",value:function(){for(;this.body.container.hasChildNodes();)this.body.container.removeChild(this.body.container.firstChild);if(this.frame=document.createElement("div"),this.frame.className="vis-network",this.frame.style.position="relative",this.frame.style.overflow="hidden",this.frame.tabIndex=900,this.frame.canvas=document.createElement("canvas"),this.frame.canvas.style.position="relative",this.frame.appendChild(this.frame.canvas),this.frame.canvas.getContext)this._setPixelRatio(),this.setTransform();else{var e=document.createElement("DIV");e.style.color="red",e.style.fontWeight="bold",e.style.padding="10px",e.innerHTML="Error: your browser does not support HTML canvas",this.frame.canvas.appendChild(e)}this.body.container.appendChild(this.frame),this.body.view.scale=1,this.body.view.translation={x:.5*this.frame.canvas.clientWidth,y:.5*this.frame.canvas.clientHeight},this._bindHammer()}},{key:"_bindHammer",value:function(){var e=this;void 0!==this.hammer&&this.hammer.destroy(),this.drag={},this.pinch={},this.hammer=new ah(this.frame.canvas),this.hammer.get("pinch").set({enable:!0}),this.hammer.get("pan").set({threshold:5,direction:ah.DIRECTION_ALL}),sM.onTouch(this.hammer,(function(t){e.body.eventListeners.onTouch(t)})),this.hammer.on("tap",(function(t){e.body.eventListeners.onTap(t)})),this.hammer.on("doubletap",(function(t){e.body.eventListeners.onDoubleTap(t)})),this.hammer.on("press",(function(t){e.body.eventListeners.onHold(t)})),this.hammer.on("panstart",(function(t){e.body.eventListeners.onDragStart(t)})),this.hammer.on("panmove",(function(t){e.body.eventListeners.onDrag(t)})),this.hammer.on("panend",(function(t){e.body.eventListeners.onDragEnd(t)})),this.hammer.on("pinch",(function(t){e.body.eventListeners.onPinch(t)})),this.frame.canvas.addEventListener("wheel",(function(t){e.body.eventListeners.onMouseWheel(t)})),this.frame.canvas.addEventListener("mousemove",(function(t){e.body.eventListeners.onMouseMove(t)})),this.frame.canvas.addEventListener("contextmenu",(function(t){e.body.eventListeners.onContext(t)})),this.hammerFrame=new ah(this.frame),sM.onRelease(this.hammerFrame,(function(t){e.body.eventListeners.onRelease(t)}))}},{key:"setSize",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.width,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.height;e=this._prepareValue(e),t=this._prepareValue(t);var n=!1,i=this.frame.canvas.width,r=this.frame.canvas.height,o=this.pixelRatio;if(this._setPixelRatio(),e!=this.options.width||t!=this.options.height||this.frame.style.width!=e||this.frame.style.height!=t)this._getCameraState(o),this.frame.style.width=e,this.frame.style.height=t,this.frame.canvas.style.width="100%",this.frame.canvas.style.height="100%",this.frame.canvas.width=Math.round(this.frame.canvas.clientWidth*this.pixelRatio),this.frame.canvas.height=Math.round(this.frame.canvas.clientHeight*this.pixelRatio),this.options.width=e,this.options.height=t,this.canvasViewCenter={x:.5*this.frame.clientWidth,y:.5*this.frame.clientHeight},n=!0;else{var s=Math.round(this.frame.canvas.clientWidth*this.pixelRatio),a=Math.round(this.frame.canvas.clientHeight*this.pixelRatio);this.frame.canvas.width===s&&this.frame.canvas.height===a||this._getCameraState(o),this.frame.canvas.width!==s&&(this.frame.canvas.width=s,n=!0),this.frame.canvas.height!==a&&(this.frame.canvas.height=a,n=!0)}return!0===n&&(this.body.emitter.emit("resize",{width:Math.round(this.frame.canvas.width/this.pixelRatio),height:Math.round(this.frame.canvas.height/this.pixelRatio),oldWidth:Math.round(i/this.pixelRatio),oldHeight:Math.round(r/this.pixelRatio)}),this._setCameraState()),this.initialized=!0,n}},{key:"getContext",value:function(){return this.frame.canvas.getContext("2d")}},{key:"_determinePixelRatio",value:function(){var e=this.getContext();if(void 0===e)throw new Error("Could not get canvax context");var t=1;return"undefined"!=typeof window&&(t=window.devicePixelRatio||1),t/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)}},{key:"_setPixelRatio",value:function(){this.pixelRatio=this._determinePixelRatio()}},{key:"setTransform",value:function(){var e=this.getContext();if(void 0===e)throw new Error("Could not get canvax context");e.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0)}},{key:"_XconvertDOMtoCanvas",value:function(e){return(e-this.body.view.translation.x)/this.body.view.scale}},{key:"_XconvertCanvasToDOM",value:function(e){return e*this.body.view.scale+this.body.view.translation.x}},{key:"_YconvertDOMtoCanvas",value:function(e){return(e-this.body.view.translation.y)/this.body.view.scale}},{key:"_YconvertCanvasToDOM",value:function(e){return e*this.body.view.scale+this.body.view.translation.y}},{key:"canvasToDOM",value:function(e){return{x:this._XconvertCanvasToDOM(e.x),y:this._YconvertCanvasToDOM(e.y)}}},{key:"DOMtoCanvas",value:function(e){return{x:this._XconvertDOMtoCanvas(e.x),y:this._YconvertDOMtoCanvas(e.y)}}}]),e}()),lM=o.isFinite,uM=Number.isFinite||function(e){return"number"==typeof e&&lM(e)};U({target:"Number",stat:!0},{isFinite:uM});var cM=F.Number.isFinite,dM=function(){function e(t,n){var i,r,o=this;hh(this,e),this.body=t,this.canvas=n,this.animationSpeed=1/this.renderRefreshRate,this.animationEasingFunction="easeInOutQuint",this.easingTime=0,this.sourceScale=0,this.targetScale=0,this.sourceTranslation=0,this.targetTranslation=0,this.lockedOnNodeId=void 0,this.lockedOnNodeOffset=void 0,this.touchTime=0,this.viewFunction=void 0,this.body.emitter.on("fit",K(i=this.fit).call(i,this)),this.body.emitter.on("animationFinished",(function(){o.body.emitter.emit("_stopRendering")})),this.body.emitter.on("unlockNode",K(r=this.releaseNode).call(r,this))}return yh(e,[{key:"setOptions",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.options=e}},{key:"fit",value:function(){var e,t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{nodes:[]},i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];void 0!==(n=rE({},n)).nodes&&0!==n.nodes.length||(n.nodes=this.body.nodeIndices);var r=this.canvas.frame.canvas.clientWidth,o=this.canvas.frame.canvas.clientHeight;if(0===r||0===o)t=1,e=tM.getRange(this.body.nodes,n.nodes);else if(!0===i){var s=0;for(var a in this.body.nodes)if(this.body.nodes.hasOwnProperty(a)){var l=this.body.nodes[a];!0===l.predefinedPosition&&(s+=1)}if(s>.5*this.body.nodeIndices.length)return void this.fit(n,!1);e=tM.getRange(this.body.nodes,n.nodes);var u=this.body.nodeIndices.length;t=12.662/(u+7.4147)+.0964822;var c=Math.min(r/600,o/600);t*=c}else{this.body.emitter.emit("_resizeNodes"),e=tM.getRange(this.body.nodes,n.nodes);var d=1.1*Math.abs(e.maxX-e.minX),h=1.1*Math.abs(e.maxY-e.minY),f=r/d,p=o/h;t=f<=p?f:p}t>1?t=1:0===t&&(t=1);var v=tM.findCenter(e),y={position:v,scale:t,animation:n.animation};this.moveTo(y)}},{key:"focus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(void 0!==this.body.nodes[e]){var n={x:this.body.nodes[e].x,y:this.body.nodes[e].y};t.position=n,t.lockedOnNode=e,this.moveTo(t)}else console.log("Node: "+e+" cannot be found.")}},{key:"moveTo",value:function(e){if(void 0!==e){if(null!=e.offset){if(null!=e.offset.x){if(e.offset.x=+e.offset.x,!cM(e.offset.x))throw new TypeError('The option "offset.x" has to be a finite number.')}else e.offset.x=0;if(null!=e.offset.y){if(e.offset.y=+e.offset.y,!cM(e.offset.y))throw new TypeError('The option "offset.y" has to be a finite number.')}else e.offset.x=0}else e.offset={x:0,y:0};if(null!=e.position){if(null!=e.position.x){if(e.position.x=+e.position.x,!cM(e.position.x))throw new TypeError('The option "position.x" has to be a finite number.')}else e.position.x=0;if(null!=e.position.y){if(e.position.y=+e.position.y,!cM(e.position.y))throw new TypeError('The option "position.y" has to be a finite number.')}else e.position.x=0}else e.position=this.getViewPosition();if(null!=e.scale){if(e.scale=+e.scale,!(e.scale>0))throw new TypeError('The option "scale" has to be a number greater than zero.')}else e.scale=this.body.view.scale;void 0===e.animation&&(e.animation={duration:0}),!1===e.animation&&(e.animation={duration:0}),!0===e.animation&&(e.animation={}),void 0===e.animation.duration&&(e.animation.duration=1e3),void 0===e.animation.easingFunction&&(e.animation.easingFunction="easeInOutQuad"),this.animateView(e)}else e={}}},{key:"animateView",value:function(e){if(void 0!==e){this.animationEasingFunction=e.animation.easingFunction,this.releaseNode(),!0===e.locked&&(this.lockedOnNodeId=e.lockedOnNode,this.lockedOnNodeOffset=e.offset),0!=this.easingTime&&this._transitionRedraw(!0),this.sourceScale=this.body.view.scale,this.sourceTranslation=this.body.view.translation,this.targetScale=e.scale,this.body.view.scale=this.targetScale;var t,n,i=this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight}),r=i.x-e.position.x,o=i.y-e.position.y;this.targetTranslation={x:this.sourceTranslation.x+r*this.targetScale+e.offset.x,y:this.sourceTranslation.y+o*this.targetScale+e.offset.y},0===e.animation.duration?null!=this.lockedOnNodeId?(this.viewFunction=K(t=this._lockedRedraw).call(t,this),this.body.emitter.on("initRedraw",this.viewFunction)):(this.body.view.scale=this.targetScale,this.body.view.translation=this.targetTranslation,this.body.emitter.emit("_requestRedraw")):(this.animationSpeed=1/(60*e.animation.duration*.001)||1/60,this.animationEasingFunction=e.animation.easingFunction,this.viewFunction=K(n=this._transitionRedraw).call(n,this),this.body.emitter.on("initRedraw",this.viewFunction),this.body.emitter.emit("_startRendering"))}}},{key:"_lockedRedraw",value:function(){var e=this.body.nodes[this.lockedOnNodeId].x,t=this.body.nodes[this.lockedOnNodeId].y,n=this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight}),i=n.x-e,r=n.y-t,o=this.body.view.translation,s={x:o.x+i*this.body.view.scale+this.lockedOnNodeOffset.x,y:o.y+r*this.body.view.scale+this.lockedOnNodeOffset.y};this.body.view.translation=s}},{key:"releaseNode",value:function(){void 0!==this.lockedOnNodeId&&void 0!==this.viewFunction&&(this.body.emitter.off("initRedraw",this.viewFunction),this.lockedOnNodeId=void 0,this.lockedOnNodeOffset=void 0)}},{key:"_transitionRedraw",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.easingTime+=this.animationSpeed,this.easingTime=!0===e?1:this.easingTime;var t,n=Vs[this.animationEasingFunction](this.easingTime);(this.body.view.scale=this.sourceScale+(this.targetScale-this.sourceScale)*n,this.body.view.translation={x:this.sourceTranslation.x+(this.targetTranslation.x-this.sourceTranslation.x)*n,y:this.sourceTranslation.y+(this.targetTranslation.y-this.sourceTranslation.y)*n},this.easingTime>=1)&&(this.body.emitter.off("initRedraw",this.viewFunction),this.easingTime=0,null!=this.lockedOnNodeId&&(this.viewFunction=K(t=this._lockedRedraw).call(t,this),this.body.emitter.on("initRedraw",this.viewFunction)),this.body.emitter.emit("animationFinished"))}},{key:"getScale",value:function(){return this.body.view.scale}},{key:"getViewPosition",value:function(){return this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight})}}]),e}(),hM=function(){function e(t,n){var i=this;hh(this,e),this.body=t,this.canvas=n,this.iconsCreated=!1,this.navigationHammers=[],this.boundFunctions={},this.touchTime=0,this.activated=!1,this.body.emitter.on("activate",(function(){i.activated=!0,i.configureKeyboardBindings()})),this.body.emitter.on("deactivate",(function(){i.activated=!1,i.configureKeyboardBindings()})),this.body.emitter.on("destroy",(function(){void 0!==i.keycharm&&i.keycharm.destroy()})),this.options={}}return yh(e,[{key:"setOptions",value:function(e){void 0!==e&&(this.options=e,this.create())}},{key:"create",value:function(){!0===this.options.navigationButtons?!1===this.iconsCreated&&this.loadNavigationElements():!0===this.iconsCreated&&this.cleanNavigation(),this.configureKeyboardBindings()}},{key:"cleanNavigation",value:function(){if(0!=this.navigationHammers.length){for(var e=0;e<this.navigationHammers.length;e++)this.navigationHammers[e].destroy();this.navigationHammers=[]}this.navigationDOM&&this.navigationDOM.wrapper&&this.navigationDOM.wrapper.parentNode&&this.navigationDOM.wrapper.parentNode.removeChild(this.navigationDOM.wrapper),this.iconsCreated=!1}},{key:"loadNavigationElements",value:function(){var e=this;this.cleanNavigation(),this.navigationDOM={};var t=["up","down","left","right","zoomIn","zoomOut","zoomExtends"],n=["_moveUp","_moveDown","_moveLeft","_moveRight","_zoomIn","_zoomOut","_fit"];this.navigationDOM.wrapper=document.createElement("div"),this.navigationDOM.wrapper.className="vis-navigation",this.canvas.frame.appendChild(this.navigationDOM.wrapper);for(var i=0;i<t.length;i++){this.navigationDOM[t[i]]=document.createElement("div"),this.navigationDOM[t[i]].className="vis-button vis-"+t[i],this.navigationDOM.wrapper.appendChild(this.navigationDOM[t[i]]);var r,o,s=new ah(this.navigationDOM[t[i]]);"_fit"===n[i]?sM.onTouch(s,K(r=this._fit).call(r,this)):sM.onTouch(s,K(o=this.bindToRedraw).call(o,this,n[i])),this.navigationHammers.push(s)}var a=new ah(this.canvas.frame);sM.onRelease(a,(function(){e._stopMovement()})),this.navigationHammers.push(a),this.iconsCreated=!0}},{key:"bindToRedraw",value:function(e){var t;void 0===this.boundFunctions[e]&&(this.boundFunctions[e]=K(t=this[e]).call(t,this),this.body.emitter.on("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_startRendering"))}},{key:"unbindFromRedraw",value:function(e){void 0!==this.boundFunctions[e]&&(this.body.emitter.off("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_stopRendering"),delete this.boundFunctions[e])}},{key:"_fit",value:function(){(new Date).valueOf()-this.touchTime>700&&(this.body.emitter.emit("fit",{duration:700}),this.touchTime=(new Date).valueOf())}},{key:"_stopMovement",value:function(){for(var e in this.boundFunctions)this.boundFunctions.hasOwnProperty(e)&&(this.body.emitter.off("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_stopRendering"));this.boundFunctions={}}},{key:"_moveUp",value:function(){this.body.view.translation.y+=this.options.keyboard.speed.y}},{key:"_moveDown",value:function(){this.body.view.translation.y-=this.options.keyboard.speed.y}},{key:"_moveLeft",value:function(){this.body.view.translation.x+=this.options.keyboard.speed.x}},{key:"_moveRight",value:function(){this.body.view.translation.x-=this.options.keyboard.speed.x}},{key:"_zoomIn",value:function(){var e=this.body.view.scale,t=this.body.view.scale*(1+this.options.keyboard.speed.zoom),n=this.body.view.translation,i=t/e,r=(1-i)*this.canvas.canvasViewCenter.x+n.x*i,o=(1-i)*this.canvas.canvasViewCenter.y+n.y*i;this.body.view.scale=t,this.body.view.translation={x:r,y:o},this.body.emitter.emit("zoom",{direction:"+",scale:this.body.view.scale,pointer:null})}},{key:"_zoomOut",value:function(){var e=this.body.view.scale,t=this.body.view.scale/(1+this.options.keyboard.speed.zoom),n=this.body.view.translation,i=t/e,r=(1-i)*this.canvas.canvasViewCenter.x+n.x*i,o=(1-i)*this.canvas.canvasViewCenter.y+n.y*i;this.body.view.scale=t,this.body.view.translation={x:r,y:o},this.body.emitter.emit("zoom",{direction:"-",scale:this.body.view.scale,pointer:null})}},{key:"configureKeyboardBindings",value:function(){var e,t,n,i,r,o,s,a,l,u,c,d,h,f,p,v,y,g,m,b,w,_,k,x,S=this;void 0!==this.keycharm&&this.keycharm.destroy(),!0===this.options.keyboard.enabled&&(!0===this.options.keyboard.bindToWindow?this.keycharm=kc({container:window,preventDefault:!0}):this.keycharm=kc({container:this.canvas.frame,preventDefault:!0}),this.keycharm.reset(),!0===this.activated&&(K(e=this.keycharm).call(e,"up",(function(){S.bindToRedraw("_moveUp")}),"keydown"),K(t=this.keycharm).call(t,"down",(function(){S.bindToRedraw("_moveDown")}),"keydown"),K(n=this.keycharm).call(n,"left",(function(){S.bindToRedraw("_moveLeft")}),"keydown"),K(i=this.keycharm).call(i,"right",(function(){S.bindToRedraw("_moveRight")}),"keydown"),K(r=this.keycharm).call(r,"=",(function(){S.bindToRedraw("_zoomIn")}),"keydown"),K(o=this.keycharm).call(o,"num+",(function(){S.bindToRedraw("_zoomIn")}),"keydown"),K(s=this.keycharm).call(s,"num-",(function(){S.bindToRedraw("_zoomOut")}),"keydown"),K(a=this.keycharm).call(a,"-",(function(){S.bindToRedraw("_zoomOut")}),"keydown"),K(l=this.keycharm).call(l,"[",(function(){S.bindToRedraw("_zoomOut")}),"keydown"),K(u=this.keycharm).call(u,"]",(function(){S.bindToRedraw("_zoomIn")}),"keydown"),K(c=this.keycharm).call(c,"pageup",(function(){S.bindToRedraw("_zoomIn")}),"keydown"),K(d=this.keycharm).call(d,"pagedown",(function(){S.bindToRedraw("_zoomOut")}),"keydown"),K(h=this.keycharm).call(h,"up",(function(){S.unbindFromRedraw("_moveUp")}),"keyup"),K(f=this.keycharm).call(f,"down",(function(){S.unbindFromRedraw("_moveDown")}),"keyup"),K(p=this.keycharm).call(p,"left",(function(){S.unbindFromRedraw("_moveLeft")}),"keyup"),K(v=this.keycharm).call(v,"right",(function(){S.unbindFromRedraw("_moveRight")}),"keyup"),K(y=this.keycharm).call(y,"=",(function(){S.unbindFromRedraw("_zoomIn")}),"keyup"),K(g=this.keycharm).call(g,"num+",(function(){S.unbindFromRedraw("_zoomIn")}),"keyup"),K(m=this.keycharm).call(m,"num-",(function(){S.unbindFromRedraw("_zoomOut")}),"keyup"),K(b=this.keycharm).call(b,"-",(function(){S.unbindFromRedraw("_zoomOut")}),"keyup"),K(w=this.keycharm).call(w,"[",(function(){S.unbindFromRedraw("_zoomOut")}),"keyup"),K(_=this.keycharm).call(_,"]",(function(){S.unbindFromRedraw("_zoomIn")}),"keyup"),K(k=this.keycharm).call(k,"pageup",(function(){S.unbindFromRedraw("_zoomIn")}),"keyup"),K(x=this.keycharm).call(x,"pagedown",(function(){S.unbindFromRedraw("_zoomOut")}),"keyup")))}}]),e}(),fM=function(){function e(t,n){hh(this,e),this.container=t,this.overflowMethod=n||"cap",this.x=0,this.y=0,this.padding=5,this.hidden=!1,this.frame=document.createElement("div"),this.frame.className="vis-tooltip",this.container.appendChild(this.frame)}return yh(e,[{key:"setPosition",value:function(e,t){this.x=DO(e),this.y=DO(t)}},{key:"setText",value:function(e){e instanceof Element?(this.frame.innerHTML="",this.frame.appendChild(e)):this.frame.innerHTML=e}},{key:"show",value:function(e){if(void 0===e&&(e=!0),!0===e){var t=this.frame.clientHeight,n=this.frame.clientWidth,i=this.frame.parentNode.clientHeight,r=this.frame.parentNode.clientWidth,o=0,s=0;if("flip"==this.overflowMethod){var a=!1,l=!0;this.y-t<this.padding&&(l=!1),this.x+n>r-this.padding&&(a=!0),o=a?this.x-n:this.x,s=l?this.y-t:this.y}else(s=this.y-t)+t+this.padding>i&&(s=i-t-this.padding),s<this.padding&&(s=this.padding),(o=this.x)+n+this.padding>r&&(o=r-n-this.padding),o<this.padding&&(o=this.padding);this.frame.style.left=o+"px",this.frame.style.top=s+"px",this.frame.style.visibility="visible",this.hidden=!1}else this.hide()}},{key:"hide",value:function(){this.hidden=!0,this.frame.style.left="0",this.frame.style.top="0",this.frame.style.visibility="hidden"}},{key:"destroy",value:function(){this.frame.parentNode.removeChild(this.frame)}}]),e}(),pM=function(){function e(t,n,i){var r,o,s,a,l,u,c,d,h,f,p,v,y;hh(this,e),this.body=t,this.canvas=n,this.selectionHandler=i,this.navigationHandler=new hM(t,n),this.body.eventListeners.onTap=K(r=this.onTap).call(r,this),this.body.eventListeners.onTouch=K(o=this.onTouch).call(o,this),this.body.eventListeners.onDoubleTap=K(s=this.onDoubleTap).call(s,this),this.body.eventListeners.onHold=K(a=this.onHold).call(a,this),this.body.eventListeners.onDragStart=K(l=this.onDragStart).call(l,this),this.body.eventListeners.onDrag=K(u=this.onDrag).call(u,this),this.body.eventListeners.onDragEnd=K(c=this.onDragEnd).call(c,this),this.body.eventListeners.onMouseWheel=K(d=this.onMouseWheel).call(d,this),this.body.eventListeners.onPinch=K(h=this.onPinch).call(h,this),this.body.eventListeners.onMouseMove=K(f=this.onMouseMove).call(f,this),this.body.eventListeners.onRelease=K(p=this.onRelease).call(p,this),this.body.eventListeners.onContext=K(v=this.onContext).call(v,this),this.touchTime=0,this.drag={},this.pinch={},this.popup=void 0,this.popupObj=void 0,this.popupTimer=void 0,this.body.functions.getPointer=K(y=this.getPointer).call(y,this),this.options={},this.defaultOptions={dragNodes:!0,dragView:!0,hover:!1,keyboard:{enabled:!1,speed:{x:10,y:10,zoom:.02},bindToWindow:!0},navigationButtons:!1,tooltipDelay:300,zoomView:!0,zoomSpeed:1},es(this.options,this.defaultOptions),this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("destroy",(function(){clearTimeout(e.popupTimer),delete e.body.functions.getPointer}))}},{key:"setOptions",value:function(e){void 0!==e&&(is(["hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag","keyboard","multiselect","selectable","selectConnectedEdges"],this.options,e),Hs(this.options,e,"keyboard"),e.tooltip&&(es(this.options.tooltip,e.tooltip),e.tooltip.color&&(this.options.tooltip.color=Ts(e.tooltip.color)))),this.navigationHandler.setOptions(this.options)}},{key:"getPointer",value:function(e){return{x:e.x-us(this.canvas.frame.canvas),y:e.y-ds(this.canvas.frame.canvas)}}},{key:"onTouch",value:function(e){(new Date).valueOf()-this.touchTime>50&&(this.drag.pointer=this.getPointer(e.center),this.drag.pinched=!1,this.pinch.scale=this.body.view.scale,this.touchTime=(new Date).valueOf())}},{key:"onTap",value:function(e){var t=this.getPointer(e.center),n=this.selectionHandler.options.multiselect&&(e.changedPointers[0].ctrlKey||e.changedPointers[0].metaKey);this.checkSelectionChanges(t,e,n),this.selectionHandler._generateClickEvent("click",e,t)}},{key:"onDoubleTap",value:function(e){var t=this.getPointer(e.center);this.selectionHandler._generateClickEvent("doubleClick",e,t)}},{key:"onHold",value:function(e){var t=this.getPointer(e.center),n=this.selectionHandler.options.multiselect;this.checkSelectionChanges(t,e,n),this.selectionHandler._generateClickEvent("click",e,t),this.selectionHandler._generateClickEvent("hold",e,t)}},{key:"onRelease",value:function(e){if((new Date).valueOf()-this.touchTime>10){var t=this.getPointer(e.center);this.selectionHandler._generateClickEvent("release",e,t),this.touchTime=(new Date).valueOf()}}},{key:"onContext",value:function(e){var t=this.getPointer({x:e.clientX,y:e.clientY});this.selectionHandler._generateClickEvent("oncontext",e,t)}},{key:"checkSelectionChanges",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=this.selectionHandler.getSelection(),r=!1;r=!0===n?this.selectionHandler.selectAdditionalOnPoint(e):this.selectionHandler.selectOnPoint(e);var o=this.selectionHandler.getSelection(),s=this._determineDifference(i,o),a=this._determineDifference(o,i);s.edges.length>0&&(this.selectionHandler._generateClickEvent("deselectEdge",t,e,i),r=!0),s.nodes.length>0&&(this.selectionHandler._generateClickEvent("deselectNode",t,e,i),r=!0),a.nodes.length>0&&(this.selectionHandler._generateClickEvent("selectNode",t,e),r=!0),a.edges.length>0&&(this.selectionHandler._generateClickEvent("selectEdge",t,e),r=!0),!0===r&&this.selectionHandler._generateClickEvent("select",t,e)}},{key:"_determineDifference",value:function(e,t){var n=function(e,t){for(var n=[],i=0;i<e.length;i++){var r=e[i];-1===Cu(t).call(t,r)&&n.push(r)}return n};return{nodes:n(e.nodes,t.nodes),edges:n(e.edges,t.edges)}}},{key:"onDragStart",value:function(e){void 0===this.drag.pointer&&this.onTouch(e);var t=this.selectionHandler.getNodeAt(this.drag.pointer);if(this.drag.dragging=!0,this.drag.selection=[],this.drag.translation=es({},this.body.view.translation),this.drag.nodeId=void 0,void 0!==t&&!0===this.options.dragNodes){this.drag.nodeId=t.id,!1===t.isSelected()&&(this.selectionHandler.unselectAll(),this.selectionHandler.selectObject(t)),this.selectionHandler._generateClickEvent("dragStart",e,this.drag.pointer);var n=this.selectionHandler.selectionObj.nodes;for(var i in n)if(n.hasOwnProperty(i)){var r=n[i],o={id:r.id,node:r,x:r.x,y:r.y,xFixed:r.options.fixed.x,yFixed:r.options.fixed.y};r.options.fixed.x=!0,r.options.fixed.y=!0,this.drag.selection.push(o)}}else this.selectionHandler._generateClickEvent("dragStart",e,this.drag.pointer,void 0,!0)}},{key:"onDrag",value:function(e){var t=this;if(!0!==this.drag.pinched){this.body.emitter.emit("unlockNode");var n=this.getPointer(e.center),i=this.drag.selection;if(i&&i.length&&!0===this.options.dragNodes){this.selectionHandler._generateClickEvent("dragging",e,n);var r=n.x-this.drag.pointer.x,o=n.y-this.drag.pointer.y;ql(i).call(i,(function(e){var n=e.node;!1===e.xFixed&&(n.x=t.canvas._XconvertDOMtoCanvas(t.canvas._XconvertCanvasToDOM(e.x)+r)),!1===e.yFixed&&(n.y=t.canvas._YconvertDOMtoCanvas(t.canvas._YconvertCanvasToDOM(e.y)+o))})),this.body.emitter.emit("startSimulation")}else if(!0===this.options.dragView){if(this.selectionHandler._generateClickEvent("dragging",e,n,void 0,!0),void 0===this.drag.pointer)return void this.onDragStart(e);var s=n.x-this.drag.pointer.x,a=n.y-this.drag.pointer.y;this.body.view.translation={x:this.drag.translation.x+s,y:this.drag.translation.y+a},this.body.emitter.emit("_requestRedraw")}}}},{key:"onDragEnd",value:function(e){this.drag.dragging=!1;var t=this.drag.selection;t&&t.length?(ql(t).call(t,(function(e){e.node.options.fixed.x=e.xFixed,e.node.options.fixed.y=e.yFixed})),this.selectionHandler._generateClickEvent("dragEnd",e,this.getPointer(e.center)),this.body.emitter.emit("startSimulation")):(this.selectionHandler._generateClickEvent("dragEnd",e,this.getPointer(e.center),void 0,!0),this.body.emitter.emit("_requestRedraw"))}},{key:"onPinch",value:function(e){var t=this.getPointer(e.center);this.drag.pinched=!0,void 0===this.pinch.scale&&(this.pinch.scale=1);var n=this.pinch.scale*e.scale;this.zoom(n,t)}},{key:"zoom",value:function(e,t){if(!0===this.options.zoomView){var n=this.body.view.scale;e<1e-5&&(e=1e-5),e>10&&(e=10);var i=void 0;void 0!==this.drag&&!0===this.drag.dragging&&(i=this.canvas.DOMtoCanvas(this.drag.pointer));var r=this.body.view.translation,o=e/n,s=(1-o)*t.x+r.x*o,a=(1-o)*t.y+r.y*o;if(this.body.view.scale=e,this.body.view.translation={x:s,y:a},null!=i){var l=this.canvas.canvasToDOM(i);this.drag.pointer.x=l.x,this.drag.pointer.y=l.y}this.body.emitter.emit("_requestRedraw"),n<e?this.body.emitter.emit("zoom",{direction:"+",scale:this.body.view.scale,pointer:t}):this.body.emitter.emit("zoom",{direction:"-",scale:this.body.view.scale,pointer:t})}}},{key:"onMouseWheel",value:function(e){if(!0===this.options.zoomView){if(0!==e.deltaY){var t=this.body.view.scale;t*=1+(e.deltaY<0?1:-1)*(.1*this.options.zoomSpeed);var n=this.getPointer({x:e.clientX,y:e.clientY});this.zoom(t,n)}e.preventDefault()}}},{key:"onMouseMove",value:function(e){var t=this,n=this.getPointer({x:e.clientX,y:e.clientY}),i=!1;void 0!==this.popup&&(!1===this.popup.hidden&&this._checkHidePopup(n),!1===this.popup.hidden&&(i=!0,this.popup.setPosition(n.x+3,n.y-5),this.popup.show())),!1===this.options.keyboard.bindToWindow&&!0===this.options.keyboard.enabled&&this.canvas.frame.focus(),!1===i&&(void 0!==this.popupTimer&&(clearInterval(this.popupTimer),this.popupTimer=void 0),this.drag.dragging||(this.popupTimer=xh((function(){return t._checkShowPopup(n)}),this.options.tooltipDelay))),!0===this.options.hover&&this.selectionHandler.hoverObject(e,n)}},{key:"_checkShowPopup",value:function(e){var t=this.canvas._XconvertDOMtoCanvas(e.x),n=this.canvas._YconvertDOMtoCanvas(e.y),i={left:t,top:n,right:t,bottom:n},r=void 0===this.popupObj?void 0:this.popupObj.id,o=!1,s="node";if(void 0===this.popupObj){for(var a,l=this.body.nodeIndices,u=this.body.nodes,c=[],d=0;d<l.length;d++)!0===(a=u[l[d]]).isOverlappingWith(i)&&(o=!0,void 0!==a.getTitle()&&c.push(l[d]));c.length>0&&(this.popupObj=u[c[c.length-1]],o=!0)}if(void 0===this.popupObj&&!1===o){for(var h,f=this.body.edgeIndices,p=this.body.edges,v=[],y=0;y<f.length;y++)!0===(h=p[f[y]]).isOverlappingWith(i)&&!0===h.connected&&void 0!==h.getTitle()&&v.push(f[y]);v.length>0&&(this.popupObj=p[v[v.length-1]],s="edge")}void 0!==this.popupObj?this.popupObj.id!==r&&(void 0===this.popup&&(this.popup=new fM(this.canvas.frame)),this.popup.popupTargetType=s,this.popup.popupTargetId=this.popupObj.id,this.popup.setPosition(e.x+3,e.y-5),this.popup.setText(this.popupObj.getTitle()),this.popup.show(),this.body.emitter.emit("showPopup",this.popupObj.id)):void 0!==this.popup&&(this.popup.hide(),this.body.emitter.emit("hidePopup"))}},{key:"_checkHidePopup",value:function(e){var t=this.selectionHandler._pointerToPositionObject(e),n=!1;if("node"===this.popup.popupTargetType){if(void 0!==this.body.nodes[this.popup.popupTargetId]&&!0===(n=this.body.nodes[this.popup.popupTargetId].isOverlappingWith(t))){var i=this.selectionHandler.getNodeAt(e);n=void 0!==i&&i.id===this.popup.popupTargetId}}else void 0===this.selectionHandler.getNodeAt(e)&&void 0!==this.body.edges[this.popup.popupTargetId]&&(n=this.body.edges[this.popup.popupTargetId].isOverlappingWith(t));!1===n&&(this.popupObj=void 0,this.popup.hide(),this.body.emitter.emit("hidePopup"))}}]),e}(),vM=function(){function e(t,n){var i=this;hh(this,e),this.body=t,this.canvas=n,this.selectionObj={nodes:[],edges:[]},this.hoverObj={nodes:{},edges:{}},this.options={},this.defaultOptions={multiselect:!1,selectable:!0,selectConnectedEdges:!0,hoverConnectedEdges:!0},es(this.options,this.defaultOptions),this.body.emitter.on("_dataChanged",(function(){i.updateSelection()}))}return yh(e,[{key:"setOptions",value:function(e){void 0!==e&&ns(["multiselect","hoverConnectedEdges","selectable","selectConnectedEdges"],this.options,e)}},{key:"selectOnPoint",value:function(e){var t=!1;if(!0===this.options.selectable){var n=this.getNodeAt(e)||this.getEdgeAt(e);this.unselectAll(),void 0!==n&&(t=this.selectObject(n)),this.body.emitter.emit("_requestRedraw")}return t}},{key:"selectAdditionalOnPoint",value:function(e){var t=!1;if(!0===this.options.selectable){var n=this.getNodeAt(e)||this.getEdgeAt(e);void 0!==n&&(t=!0,!0===n.isSelected()?this.deselectObject(n):this.selectObject(n),this.body.emitter.emit("_requestRedraw"))}return t}},{key:"_initBaseEvent",value:function(e,t){var n={};return n.pointer={DOM:{x:t.x,y:t.y},canvas:this.canvas.DOMtoCanvas(t)},n.event=e,n}},{key:"_generateClickEvent",value:function(e,t,n,i){var r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=this._initBaseEvent(t,n);if(!0===r)o.nodes=[],o.edges=[];else{var s=this.getSelection();o.nodes=s.nodes,o.edges=s.edges}void 0!==i&&(o.previousSelection=i),"click"==e&&(o.items=this.getClickedItems(n)),void 0!==t.controlEdge&&(o.controlEdge=t.controlEdge),this.body.emitter.emit(e,o)}},{key:"selectObject",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.selectConnectedEdges;return void 0!==e&&(e instanceof KE&&!0===t&&this._selectConnectedEdges(e),e.select(),this._addToSelection(e),!0)}},{key:"deselectObject",value:function(e){!0===e.isSelected()&&(e.selected=!1,this._removeFromSelection(e))}},{key:"_getAllNodesOverlappingWith",value:function(e){for(var t=[],n=this.body.nodes,i=0;i<this.body.nodeIndices.length;i++){var r=this.body.nodeIndices[i];n[r].isOverlappingWith(e)&&t.push(r)}return t}},{key:"_pointerToPositionObject",value:function(e){var t=this.canvas.DOMtoCanvas(e);return{left:t.x-1,top:t.y+1,right:t.x+1,bottom:t.y-1}}},{key:"getNodeAt",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this._pointerToPositionObject(e),i=this._getAllNodesOverlappingWith(n);return i.length>0?!0===t?this.body.nodes[i[i.length-1]]:i[i.length-1]:void 0}},{key:"_getEdgesOverlappingWith",value:function(e,t){for(var n=this.body.edges,i=0;i<this.body.edgeIndices.length;i++){var r=this.body.edgeIndices[i];n[r].isOverlappingWith(e)&&t.push(r)}}},{key:"_getAllEdgesOverlappingWith",value:function(e){var t=[];return this._getEdgesOverlappingWith(e,t),t}},{key:"getEdgeAt",value:function(e){for(var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this.canvas.DOMtoCanvas(e),i=10,r=null,o=this.body.edges,s=0;s<this.body.edgeIndices.length;s++){var a=this.body.edgeIndices[s],l=o[a];if(l.connected){var u=l.from.x,c=l.from.y,d=l.to.x,h=l.to.y,f=l.edgeType.getDistanceToEdge(u,c,d,h,n.x,n.y);f<i&&(r=a,i=f)}}return null!==r?!0===t?this.body.edges[r]:r:void 0}},{key:"_addToSelection",value:function(e){e instanceof KE?this.selectionObj.nodes[e.id]=e:this.selectionObj.edges[e.id]=e}},{key:"_addToHover",value:function(e){e instanceof KE?this.hoverObj.nodes[e.id]=e:this.hoverObj.edges[e.id]=e}},{key:"_removeFromSelection",value:function(e){e instanceof KE?(delete this.selectionObj.nodes[e.id],this._unselectConnectedEdges(e)):delete this.selectionObj.edges[e.id]}},{key:"unselectAll",value:function(){for(var e in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(e)&&this.selectionObj.nodes[e].unselect();for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&this.selectionObj.edges[t].unselect();this.selectionObj={nodes:{},edges:{}}}},{key:"_getSelectedNodeCount",value:function(){var e=0;for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&(e+=1);return e}},{key:"_getSelectedNode",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e))return this.selectionObj.nodes[e]}},{key:"_getSelectedEdge",value:function(){for(var e in this.selectionObj.edges)if(this.selectionObj.edges.hasOwnProperty(e))return this.selectionObj.edges[e]}},{key:"_getSelectedEdgeCount",value:function(){var e=0;for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&(e+=1);return e}},{key:"_getSelectedObjectCount",value:function(){var e=0;for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&(e+=1);for(var n in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(n)&&(e+=1);return e}},{key:"_selectionIsEmpty",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e))return!1;for(var t in this.selectionObj.edges)if(this.selectionObj.edges.hasOwnProperty(t))return!1;return!0}},{key:"_clusterInSelection",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e)&&this.selectionObj.nodes[e].clusterSize>1)return!0;return!1}},{key:"_selectConnectedEdges",value:function(e){for(var t=0;t<e.edges.length;t++){var n=e.edges[t];n.select(),this._addToSelection(n)}}},{key:"_hoverConnectedEdges",value:function(e){for(var t=0;t<e.edges.length;t++){var n=e.edges[t];n.hover=!0,this._addToHover(n)}}},{key:"_unselectConnectedEdges",value:function(e){for(var t=0;t<e.edges.length;t++){var n=e.edges[t];n.unselect(),this._removeFromSelection(n)}}},{key:"emitBlurEvent",value:function(e,t,n){var i=this._initBaseEvent(e,t);!0===n.hover&&(n.hover=!1,n instanceof KE?(i.node=n.id,this.body.emitter.emit("blurNode",i)):(i.edge=n.id,this.body.emitter.emit("blurEdge",i)))}},{key:"emitHoverEvent",value:function(e,t,n){var i=this._initBaseEvent(e,t),r=!1;return!1===n.hover&&(n.hover=!0,this._addToHover(n),r=!0,n instanceof KE?(i.node=n.id,this.body.emitter.emit("hoverNode",i)):(i.edge=n.id,this.body.emitter.emit("hoverEdge",i))),r}},{key:"hoverObject",value:function(e,t){var n=this.getNodeAt(t);void 0===n&&(n=this.getEdgeAt(t));var i=!1;for(var r in this.hoverObj.nodes)this.hoverObj.nodes.hasOwnProperty(r)&&(void 0===n||n instanceof KE&&n.id!=r||n instanceof NT)&&(this.emitBlurEvent(e,t,this.hoverObj.nodes[r]),delete this.hoverObj.nodes[r],i=!0);for(var o in this.hoverObj.edges)this.hoverObj.edges.hasOwnProperty(o)&&(!0===i?(this.hoverObj.edges[o].hover=!1,delete this.hoverObj.edges[o]):(void 0===n||n instanceof NT&&n.id!=o||n instanceof KE&&!n.hover)&&(this.emitBlurEvent(e,t,this.hoverObj.edges[o]),delete this.hoverObj.edges[o],i=!0));if(void 0!==n){var s=jh(this.hoverObj.edges).length,a=jh(this.hoverObj.nodes).length;(i||n instanceof NT&&0===s&&0===a||n instanceof KE&&0===s&&0===a)&&(i=this.emitHoverEvent(e,t,n)),n instanceof KE&&!0===this.options.hoverConnectedEdges&&this._hoverConnectedEdges(n)}!0===i&&this.body.emitter.emit("_requestRedraw")}},{key:"getSelection",value:function(){return{nodes:this.getSelectedNodes(),edges:this.getSelectedEdges()}}},{key:"getSelectedNodes",value:function(){var e=[];if(!0===this.options.selectable)for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&e.push(this.selectionObj.nodes[t].id);return e}},{key:"getSelectedEdges",value:function(){var e=[];if(!0===this.options.selectable)for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&e.push(this.selectionObj.edges[t].id);return e}},{key:"setSelection",value:function(e){var t,n,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||!e.nodes&&!e.edges)throw"Selection must be an object with nodes and/or edges properties";if((i.unselectAll||void 0===i.unselectAll)&&this.unselectAll(),e.nodes)for(t=0;t<e.nodes.length;t++){n=e.nodes[t];var r=this.body.nodes[n];if(!r)throw new RangeError('Node with id "'+n+'" not found');this.selectObject(r,i.highlightEdges)}if(e.edges)for(t=0;t<e.edges.length;t++){n=e.edges[t];var o=this.body.edges[n];if(!o)throw new RangeError('Edge with id "'+n+'" not found');this.selectObject(o)}this.body.emitter.emit("_requestRedraw")}},{key:"selectNodes",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!e||void 0===e.length)throw"Selection must be an array with ids";this.setSelection({nodes:e},{highlightEdges:t})}},{key:"selectEdges",value:function(e){if(!e||void 0===e.length)throw"Selection must be an array with ids";this.setSelection({edges:e})}},{key:"updateSelection",value:function(){for(var e in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(e)&&(this.body.nodes.hasOwnProperty(e)||delete this.selectionObj.nodes[e]);for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&(this.body.edges.hasOwnProperty(t)||delete this.selectionObj.edges[t])}},{key:"getClickedItems",value:function(e){for(var t=this.canvas.DOMtoCanvas(e),n=[],i=this.body.nodeIndices,r=this.body.nodes,o=i.length-1;o>=0;o--){var s=r[i[o]].getItemsOnPoint(t);n.push.apply(n,s)}for(var a=this.body.edgeIndices,l=this.body.edges,u=a.length-1;u>=0;u--){var c=l[a[u]].getItemsOnPoint(t);n.push.apply(n,c)}return n}}]),e}(),yM=!s((function(){return Object.isExtensible(Object.preventExtensions({}))})),gM=i((function(e){var t=Y.f,n=la("meta"),i=0,r=Object.isExtensible||function(){return!0},o=function(e){t(e,n,{value:{objectID:"O"+ ++i,weakData:{}}})},s=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!m(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!_(e,n)){if(!r(e))return"F";if(!t)return"E";o(e)}return e[n].objectID},getWeakData:function(e,t){if(!_(e,n)){if(!r(e))return!0;if(!t)return!1;o(e)}return e[n].weakData},onFreeze:function(e){return yM&&s.REQUIRED&&r(e)&&!_(e,n)&&o(e),e}};da[n]=!0})),mM=(gM.REQUIRED,gM.fastKey,gM.getWeakData,gM.onFreeze,Na("iterator")),bM=Array.prototype,wM=function(e,t,n,i){try{return i?t(L(n)[0],n[1]):t(n)}catch(t){var r=e.return;throw void 0!==r&&L(r.call(e)),t}},_M=i((function(e){var t=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,n,i,r,o){var s,a,l,u,c,d,h,f,p=j(n,i,r?2:1);if(o)s=e;else{if("function"!=typeof(a=Dh(e)))throw TypeError("Target is not iterable");if(void 0!==(f=a)&&(Qs.Array===f||bM[mM]===f)){for(l=0,u=Ya(e.length);u>l;l++)if((c=r?p(L(h=e[l])[0],h[1]):p(e[l]))&&c instanceof t)return c;return new t(!1)}s=a.call(e)}for(d=s.next;!(h=d.call(s)).done;)if("object"==typeof(c=wM(s,p,h.value,r))&&c&&c instanceof t)return c;return new t(!1)}).stop=function(e){return new t(!0,e)}})),kM=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e},xM=Y.f,SM=Al.forEach,OM=_a.set,EM=_a.getterFor,TM=function(e,t,n){var i,r=-1!==e.indexOf("Map"),l=-1!==e.indexOf("Weak"),u=r?"set":"add",c=o[e],d=c&&c.prototype,h={};if(a&&"function"==typeof c&&(l||d.forEach&&!s((function(){(new c).entries().next()})))){i=t((function(t,n){OM(kM(t,i,e),{type:e,collection:new c}),null!=n&&_M(n,t[u],t,r)}));var f=EM(e);SM(["add","clear","delete","forEach","get","has","set","keys","values","entries"],(function(e){var t="add"==e||"set"==e;e in d&&(!l||"clear"!=e)&&B(i.prototype,e,(function(n,i){var r=f(this).collection;if(!t&&l&&!m(n))return"get"==e&&void 0;var o=r[e](0===n?0:n,i);return t?this:o}))})),l||xM(i.prototype,"size",{configurable:!0,get:function(){return f(this).collection.size}})}else i=n.getConstructor(t,e,r,u),gM.REQUIRED=!0;return fl(i,e,!1,!0),h[e]=i,U({global:!0,forced:!0},h),l||n.setStrong(i,e,r),i},MM=function(e,t,n){for(var i in t)n&&n.unsafe&&e[i]?e[i]=t[i]:gl(e,i,t[i],n);return e},DM=Na("species"),CM=Y.f,PM=gM.fastKey,NM=_a.set,IM=_a.getterFor,AM={getConstructor:function(e,t,n,i){var r=e((function(e,o){kM(e,r,t),NM(e,{type:t,index:rl(null),first:void 0,last:void 0,size:0}),a||(e.size=0),null!=o&&_M(o,e[i],e,n)})),o=IM(t),s=function(e,t,n){var i,r,s=o(e),u=l(e,t);return u?u.value=n:(s.last=u={index:r=PM(t,!0),key:t,value:n,previous:i=s.last,next:void 0,removed:!1},s.first||(s.first=u),i&&(i.next=u),a?s.size++:e.size++,"F"!==r&&(s.index[r]=u)),e},l=function(e,t){var n,i=o(e),r=PM(t);if("F"!==r)return i.index[r];for(n=i.first;n;n=n.next)if(n.key==t)return n};return MM(r.prototype,{clear:function(){for(var e=o(this),t=e.index,n=e.first;n;)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete t[n.index],n=n.next;e.first=e.last=void 0,a?e.size=0:this.size=0},delete:function(e){var t=o(this),n=l(this,e);if(n){var i=n.next,r=n.previous;delete t.index[n.index],n.removed=!0,r&&(r.next=i),i&&(i.previous=r),t.first==n&&(t.first=i),t.last==n&&(t.last=r),a?t.size--:this.size--}return!!n},forEach:function(e){for(var t,n=o(this),i=j(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:n.first;)for(i(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!l(this,e)}}),MM(r.prototype,n?{get:function(e){var t=l(this,e);return t&&t.value},set:function(e,t){return s(this,0===e?0:e,t)}}:{add:function(e){return s(this,e=0===e?0:e,e)}}),a&&CM(r.prototype,"size",{get:function(){return o(this).size}}),r},setStrong:function(e,t,n){var i=t+" Iterator",r=IM(t),o=IM(i);kl(e,t,(function(e,t){NM(this,{type:i,target:e,state:r(e),kind:t,last:void 0})}),(function(){for(var e=o(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?"keys"==t?{value:n.key,done:!1}:"values"==t?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),n?"entries":"values",!n,!0),function(e){var t=Ka(e),n=Y.f;a&&t&&!t[DM]&&n(t,DM,{configurable:!0,get:function(){return this}})}(t)}},FM=(TM("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),AM),F.Map),RM=function(e){return function(t,n,i,r){R(n);var o=ka(t),s=v(o),a=Ya(o.length),l=e?a-1:0,u=e?-1:1;if(i<2)for(;;){if(l in s){r=s[l],l+=u;break}if(l+=u,e?l<0:a<=l)throw TypeError("Reduce of empty array with no initial value")}for(;e?l>=0:a>l;l+=u)l in s&&(r=n(r,s[l],l,o));return r}},jM=[RM(!1),RM(!0)][0],LM=Fl("reduce"),zM=zl("reduce",{1:0});U({target:"Array",proto:!0,forced:!LM||!zM},{reduce:function(e){return jM(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}});var YM=Z("Array").reduce,BM=Array.prototype,HM=[],WM=HM.sort,UM=s((function(){HM.sort(void 0)})),VM=s((function(){HM.sort(null)})),GM=Fl("sort");U({target:"Array",proto:!0,forced:UM||!VM||!GM},{sort:function(e){return void 0===e?WM.call(ka(this)):WM.call(ka(this),R(e))}});var qM,$M=Z("Array").sort,ZM=Array.prototype,QM=function(e){var t=e.sort;return e===ZM||e instanceof Array&&t===ZM.sort?$M:t},XM=i((function(e,t){!function(e){e.__esModule=!0,e.sort=function(e,n,i,a){if(!Array.isArray(e))throw new TypeError("Can only sort arrays");n?"function"!=typeof n&&(a=i,i=n,n=r):n=r,i||(i=0),a||(a=e.length);var l=a-i;if(!(l<2)){var c=0;if(l<t)return void s(e,i,a,i+(c=o(e,i,a,n)),n);var d=new u(e,n),h=function(e){for(var n=0;e>=t;)n|=1&e,e>>=1;return e+n}(l);do{if((c=o(e,i,a,n))<h){var f=l;f>h&&(f=h),s(e,i,i+f,i+c,n),c=f}d.pushRun(i,c),d.mergeRuns(),l-=c,i+=c}while(0!==l);d.forceMergeRuns()}};var t=32,n=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9];function i(e){return e<1e5?e<100?e<10?0:1:e<1e4?e<1e3?2:3:4:e<1e7?e<1e6?5:6:e<1e9?e<1e8?7:8:9}function r(e,t){if(e===t)return 0;if(~~e===e&&~~t===t){if(0===e||0===t)return e<t?-1:1;if(e<0||t<0){if(t>=0)return-1;if(e>=0)return 1;e=-e,t=-t}var r=i(e),o=i(t),s=0;return r<o?(e*=n[o-r-1],t/=10,s=-1):r>o&&(t*=n[r-o-1],e/=10,s=1),e===t?s:e<t?-1:1}var a=String(e),l=String(t);return a===l?0:a<l?-1:1}function o(e,t,n,i){var r=t+1;if(r===n)return 1;if(i(e[r++],e[t])<0){for(;r<n&&i(e[r],e[r-1])<0;)r++;!function(e,t,n){for(n--;t<n;){var i=e[t];e[t++]=e[n],e[n--]=i}}(e,t,r)}else for(;r<n&&i(e[r],e[r-1])>=0;)r++;return r-t}function s(e,t,n,i,r){for(i===t&&i++;i<n;i++){for(var o=e[i],s=t,a=i;s<a;){var l=s+a>>>1;r(o,e[l])<0?a=l:s=l+1}var u=i-s;switch(u){case 3:e[s+3]=e[s+2];case 2:e[s+2]=e[s+1];case 1:e[s+1]=e[s];break;default:for(;u>0;)e[s+u]=e[s+u-1],u--}e[s]=o}}function a(e,t,n,i,r,o){var s=0,a=0,l=1;if(o(e,t[n+r])>0){for(a=i-r;l<a&&o(e,t[n+r+l])>0;)s=l,(l=1+(l<<1))<=0&&(l=a);l>a&&(l=a),s+=r,l+=r}else{for(a=r+1;l<a&&o(e,t[n+r-l])<=0;)s=l,(l=1+(l<<1))<=0&&(l=a);l>a&&(l=a);var u=s;s=r-l,l=r-u}for(s++;s<l;){var c=s+(l-s>>>1);o(e,t[n+c])>0?s=c+1:l=c}return l}function l(e,t,n,i,r,o){var s=0,a=0,l=1;if(o(e,t[n+r])<0){for(a=r+1;l<a&&o(e,t[n+r-l])<0;)s=l,(l=1+(l<<1))<=0&&(l=a);l>a&&(l=a);var u=s;s=r-l,l=r-u}else{for(a=i-r;l<a&&o(e,t[n+r+l])>=0;)s=l,(l=1+(l<<1))<=0&&(l=a);l>a&&(l=a),s+=r,l+=r}for(s++;s<l;){var c=s+(l-s>>>1);o(e,t[n+c])<0?l=c:s=c+1}return l}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.array=null,this.compare=null,this.minGallop=7,this.length=0,this.tmpStorageLength=256,this.stackLength=0,this.runStart=null,this.runLength=null,this.stackSize=0,this.array=t,this.compare=n,this.length=t.length,this.length<512&&(this.tmpStorageLength=this.length>>>1),this.tmp=new Array(this.tmpStorageLength),this.stackLength=this.length<120?5:this.length<1542?10:this.length<119151?19:40,this.runStart=new Array(this.stackLength),this.runLength=new Array(this.stackLength)}return e.prototype.pushRun=function(e,t){this.runStart[this.stackSize]=e,this.runLength[this.stackSize]=t,this.stackSize+=1},e.prototype.mergeRuns=function(){for(;this.stackSize>1;){var e=this.stackSize-2;if(e>=1&&this.runLength[e-1]<=this.runLength[e]+this.runLength[e+1]||e>=2&&this.runLength[e-2]<=this.runLength[e]+this.runLength[e-1])this.runLength[e-1]<this.runLength[e+1]&&e--;else if(this.runLength[e]>this.runLength[e+1])break;this.mergeAt(e)}},e.prototype.forceMergeRuns=function(){for(;this.stackSize>1;){var e=this.stackSize-2;e>0&&this.runLength[e-1]<this.runLength[e+1]&&e--,this.mergeAt(e)}},e.prototype.mergeAt=function(e){var t=this.compare,n=this.array,i=this.runStart[e],r=this.runLength[e],o=this.runStart[e+1],s=this.runLength[e+1];this.runLength[e]=r+s,e===this.stackSize-3&&(this.runStart[e+1]=this.runStart[e+2],this.runLength[e+1]=this.runLength[e+2]),this.stackSize--;var u=l(n[o],n,i,r,0,t);i+=u,0!=(r-=u)&&0!==(s=a(n[i+r-1],n,o,s,s-1,t))&&(r<=s?this.mergeLow(i,r,o,s):this.mergeHigh(i,r,o,s))},e.prototype.mergeLow=function(e,t,n,i){var r=this.compare,o=this.array,s=this.tmp,u=0;for(u=0;u<t;u++)s[u]=o[e+u];var c=0,d=n,h=e;if(o[h++]=o[d++],0!=--i)if(1!==t){for(var f=this.minGallop;;){var p=0,v=0,y=!1;do{if(r(o[d],s[c])<0){if(o[h++]=o[d++],v++,p=0,0==--i){y=!0;break}}else if(o[h++]=s[c++],p++,v=0,1==--t){y=!0;break}}while((p|v)<f);if(y)break;do{if(0!==(p=l(o[d],s,c,t,0,r))){for(u=0;u<p;u++)o[h+u]=s[c+u];if(h+=p,c+=p,(t-=p)<=1){y=!0;break}}if(o[h++]=o[d++],0==--i){y=!0;break}if(0!==(v=a(s[c],o,d,i,0,r))){for(u=0;u<v;u++)o[h+u]=o[d+u];if(h+=v,d+=v,0==(i-=v)){y=!0;break}}if(o[h++]=s[c++],1==--t){y=!0;break}f--}while(p>=7||v>=7);if(y)break;f<0&&(f=0),f+=2}if(this.minGallop=f,f<1&&(this.minGallop=1),1===t){for(u=0;u<i;u++)o[h+u]=o[d+u];o[h+i]=s[c]}else{if(0===t)throw new Error("mergeLow preconditions were not respected");for(u=0;u<t;u++)o[h+u]=s[c+u]}}else{for(u=0;u<i;u++)o[h+u]=o[d+u];o[h+i]=s[c]}else for(u=0;u<t;u++)o[h+u]=s[c+u]},e.prototype.mergeHigh=function(e,t,n,i){var r=this.compare,o=this.array,s=this.tmp,u=0;for(u=0;u<i;u++)s[u]=o[n+u];var c=e+t-1,d=i-1,h=n+i-1,f=0,p=0;if(o[h--]=o[c--],0!=--t)if(1!==i){for(var v=this.minGallop;;){var y=0,g=0,m=!1;do{if(r(s[d],o[c])<0){if(o[h--]=o[c--],y++,g=0,0==--t){m=!0;break}}else if(o[h--]=s[d--],g++,y=0,1==--i){m=!0;break}}while((y|g)<v);if(m)break;do{if(0!=(y=t-l(s[d],o,e,t,t-1,r))){for(t-=y,p=1+(h-=y),f=1+(c-=y),u=y-1;u>=0;u--)o[p+u]=o[f+u];if(0===t){m=!0;break}}if(o[h--]=s[d--],1==--i){m=!0;break}if(0!=(g=i-a(o[c],s,0,i,i-1,r))){for(i-=g,p=1+(h-=g),f=1+(d-=g),u=0;u<g;u++)o[p+u]=s[f+u];if(i<=1){m=!0;break}}if(o[h--]=o[c--],0==--t){m=!0;break}v--}while(y>=7||g>=7);if(m)break;v<0&&(v=0),v+=2}if(this.minGallop=v,v<1&&(this.minGallop=1),1===i){for(p=1+(h-=t),f=1+(c-=t),u=t-1;u>=0;u--)o[p+u]=o[f+u];o[h]=s[d]}else{if(0===i)throw new Error("mergeHigh preconditions were not respected");for(f=h-(i-1),u=0;u<i;u++)o[f+u]=s[u]}}else{for(p=1+(h-=t),f=1+(c-=t),u=t-1;u>=0;u--)o[p+u]=o[f+u];o[h]=s[d]}else for(f=h-(i-1),u=0;u<i;u++)o[f+u]=s[u]},e}()}(t)}));(qM=XM)&&qM.__esModule&&Object.prototype.hasOwnProperty.call(qM,"default")&&qM.default;var KM=XM,JM=KM.sort,eD=function(){function e(){hh(this,e)}return yh(e,[{key:"abstract",value:function(){throw new Error("Can't instantiate abstract class!")}},{key:"fake_use",value:function(){}},{key:"curveType",value:function(){return this.abstract()}},{key:"getPosition",value:function(e){return this.fake_use(e),this.abstract()}},{key:"setPosition",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;this.fake_use(e,t,n),this.abstract()}},{key:"getTreeSize",value:function(e){return this.fake_use(e),this.abstract()}},{key:"sort",value:function(e){this.fake_use(e),this.abstract()}},{key:"fix",value:function(e,t){this.fake_use(e,t),this.abstract()}},{key:"shift",value:function(e,t){this.fake_use(e,t),this.abstract()}}]),e}(),tD=function(e){function t(e){var n;return hh(this,t),(n=dE(this,vE(t).call(this))).layout=e,n}return mE(t,eD),yh(t,[{key:"curveType",value:function(){return"horizontal"}},{key:"getPosition",value:function(e){return e.x}},{key:"setPosition",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;void 0!==n&&this.layout.hierarchical.addToOrdering(e,n),e.x=t}},{key:"getTreeSize",value:function(e){var t=this.layout.hierarchical.getTreeSize(this.layout.body.nodes,e);return{min:t.min_x,max:t.max_x}}},{key:"sort",value:function(e){JM(e,(function(e,t){return e.x-t.x}))}},{key:"fix",value:function(e,t){e.y=this.layout.options.hierarchical.levelSeparation*t,e.options.fixed.y=!0}},{key:"shift",value:function(e,t){this.layout.body.nodes[e].x+=t}}]),t}(),nD=function(e){function t(e){var n;return hh(this,t),(n=dE(this,vE(t).call(this))).layout=e,n}return mE(t,eD),yh(t,[{key:"curveType",value:function(){return"vertical"}},{key:"getPosition",value:function(e){return e.y}},{key:"setPosition",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;void 0!==n&&this.layout.hierarchical.addToOrdering(e,n),e.y=t}},{key:"getTreeSize",value:function(e){var t=this.layout.hierarchical.getTreeSize(this.layout.body.nodes,e);return{min:t.min_y,max:t.max_y}}},{key:"sort",value:function(e){JM(e,(function(e,t){return e.y-t.y}))}},{key:"fix",value:function(e,t){e.x=this.layout.options.hierarchical.levelSeparation*t,e.options.fixed.x=!0}},{key:"shift",value:function(e,t){this.layout.body.nodes[e].y+=t}}]),t}(),iD=Al.every,rD=Fl("every"),oD=zl("every");U({target:"Array",proto:!0,forced:!rD||!oD},{every:function(e){return iD(this,e,arguments.length>1?arguments[1]:void 0)}});var sD=Z("Array").every,aD=Array.prototype,lD=function(e){var t=e.every;return e===aD||e instanceof Array&&t===aD.every?sD:t},uD=(TM("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),AM),F.Set);function cD(e,t){var n=new uD;return ql(e).call(e,(function(e){var t;ql(t=e.edges).call(t,(function(e){e.connected&&n.add(e)}))})),ql(n).call(n,(function(e){var n=e.from.id,i=e.to.id;null==t[n]&&(t[n]=0),(null==t[i]||t[n]>=t[i])&&(t[i]=t[n]+1)})),t}function dD(e,t,n,i,r){var o=i.size,s=n+"Id",a="to"===n?1:-1,l=!0,u=!1,c=void 0;try{for(var d,h=function(){var l=IO(d.value,2),u=l[0],c=l[1];if(!i.has(u)||!e(c))return"continue";r[u]=0;for(var h=[c],f=0,p=void 0,v=function(){var e,l;if(!i.has(u))return"continue";var c=r[p.id]+a;if(ql(e=CS(l=p.edges).call(l,(function(e){return e.connected&&e.to!==e.from&&e[n]!==p&&i.has(e.toId)&&i.has(e.fromId)}))).call(e,(function(e){var i=e[s],o=r[i];(null==o||t(c,o))&&(r[i]=c,h.push(e[n]))})),f>o)return{v:{v:cD(i,r)}};++f};p=h.pop();){var y=v();switch(y){case"continue":continue;default:if("object"===BO(y))return y.v}}},f=Ch(i);!(l=(d=f.next()).done);l=!0){var p=h();switch(p){case"continue":continue;default:if("object"===BO(p))return p.v}}}catch(e){u=!0,c=e}finally{try{l||null==f.return||f.return()}finally{if(u)throw c}}return r}var hD=function(){function e(){hh(this,e),this.childrenReference={},this.parentReference={},this.trees={},this.distributionOrdering={},this.levels={},this.distributionIndex={},this.isTree=!1,this.treeIndex=-1}return yh(e,[{key:"addRelation",value:function(e,t){void 0===this.childrenReference[e]&&(this.childrenReference[e]=[]),this.childrenReference[e].push(t),void 0===this.parentReference[t]&&(this.parentReference[t]=[]),this.parentReference[t].push(e)}},{key:"checkIfTree",value:function(){for(var e in this.parentReference)if(this.parentReference[e].length>1)return void(this.isTree=!1);this.isTree=!0}},{key:"numTrees",value:function(){return this.treeIndex+1}},{key:"setTreeIndex",value:function(e,t){void 0!==t&&void 0===this.trees[e.id]&&(this.trees[e.id]=t,this.treeIndex=Math.max(t,this.treeIndex))}},{key:"ensureLevel",value:function(e){void 0===this.levels[e]&&(this.levels[e]=0)}},{key:"getMaxLevel",value:function(e){var t=this,n={};return function e(i){if(void 0!==n[i])return n[i];var r=t.levels[i];if(t.childrenReference[i]){var o=t.childrenReference[i];if(o.length>0)for(var s=0;s<o.length;s++)r=Math.max(r,e(o[s]))}return n[i]=r,r}(e)}},{key:"levelDownstream",value:function(e,t){void 0===this.levels[t.id]&&(void 0===this.levels[e.id]&&(this.levels[e.id]=0),this.levels[t.id]=this.levels[e.id]+1)}},{key:"setMinLevelToZero",value:function(e){var t=1e9;for(var n in e)e.hasOwnProperty(n)&&void 0!==this.levels[n]&&(t=Math.min(this.levels[n],t));for(var i in e)e.hasOwnProperty(i)&&void 0!==this.levels[i]&&(this.levels[i]-=t)}},{key:"getTreeSize",value:function(e,t){var n=1e9,i=-1e9,r=1e9,o=-1e9;for(var s in this.trees)if(this.trees.hasOwnProperty(s)&&this.trees[s]===t){var a=e[s];n=Math.min(a.x,n),i=Math.max(a.x,i),r=Math.min(a.y,r),o=Math.max(a.y,o)}return{min_x:n,max_x:i,min_y:r,max_y:o}}},{key:"hasSameParent",value:function(e,t){var n=this.parentReference[e.id],i=this.parentReference[t.id];if(void 0===n||void 0===i)return!1;for(var r=0;r<n.length;r++)for(var o=0;o<i.length;o++)if(n[r]==i[o])return!0;return!1}},{key:"inSameSubNetwork",value:function(e,t){return this.trees[e.id]===this.trees[t.id]}},{key:"getLevels",value:function(){return jh(this.distributionOrdering)}},{key:"addToOrdering",value:function(e,t){void 0===this.distributionOrdering[t]&&(this.distributionOrdering[t]=[]);var n=!1,i=this.distributionOrdering[t];for(var r in i)if(i[r]===e){n=!0;break}n||(this.distributionOrdering[t].push(e),this.distributionIndex[e.id]=this.distributionOrdering[t].length-1)}}]),e}(),fD=function(){function e(t){hh(this,e),this.body=t,this._resetRNG(Math.random()+":"+AT()),this.setPhysics=!1,this.options={},this.optionsBackup={physics:{}},this.defaultOptions={randomSeed:void 0,improvedLayout:!0,clusterThreshold:150,hierarchical:{enabled:!1,levelSeparation:150,nodeSpacing:100,treeSpacing:200,blockShifting:!0,edgeMinimization:!0,parentCentralization:!0,direction:"UD",sortMethod:"hubsize"}},es(this.options,this.defaultOptions),this.bindEventListeners()}return yh(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("_dataChanged",(function(){e.setupHierarchicalLayout()})),this.body.emitter.on("_dataLoaded",(function(){e.layoutNetwork()})),this.body.emitter.on("_resetHierarchicalLayout",(function(){e.setupHierarchicalLayout()})),this.body.emitter.on("_adjustEdgesForHierarchicalLayout",(function(){if(!0===e.options.hierarchical.enabled){var t=e.direction.curveType();e.body.emitter.emit("_forceDisableDynamicCurves",t,!1)}}))}},{key:"setOptions",value:function(e,t){if(void 0!==e){var n=this.options.hierarchical,i=n.enabled;if(ns(["randomSeed","improvedLayout","clusterThreshold"],this.options,e),Hs(this.options,e,"hierarchical"),void 0!==e.randomSeed&&this._resetRNG(e.randomSeed),!0===n.enabled)return!0===i&&this.body.emitter.emit("refresh",!0),"RL"===n.direction||"DU"===n.direction?n.levelSeparation>0&&(n.levelSeparation*=-1):n.levelSeparation<0&&(n.levelSeparation*=-1),this.setDirectionStrategy(),this.body.emitter.emit("_resetHierarchicalLayout"),this.adaptAllOptionsForHierarchicalLayout(t);if(!0===i)return this.body.emitter.emit("refresh"),rs(t,this.optionsBackup)}return t}},{key:"_resetRNG",value:function(e){this.initialRandomSeed=e,this._rng=Bn(this.initialRandomSeed)}},{key:"adaptAllOptionsForHierarchicalLayout",value:function(e){if(!0===this.options.hierarchical.enabled){var t=this.optionsBackup.physics;void 0===e.physics||!0===e.physics?(e.physics={enabled:void 0===t.enabled||t.enabled,solver:"hierarchicalRepulsion"},t.enabled=void 0===t.enabled||t.enabled,t.solver=t.solver||"barnesHut"):"object"===BO(e.physics)?(t.enabled=void 0===e.physics.enabled||e.physics.enabled,t.solver=e.physics.solver||"barnesHut",e.physics.solver="hierarchicalRepulsion"):!1!==e.physics&&(t.solver="barnesHut",e.physics={solver:"hierarchicalRepulsion"});var n=this.direction.curveType();if(void 0===e.edges)this.optionsBackup.edges={smooth:{enabled:!0,type:"dynamic"}},e.edges={smooth:!1};else if(void 0===e.edges.smooth)this.optionsBackup.edges={smooth:{enabled:!0,type:"dynamic"}},e.edges.smooth=!1;else if("boolean"==typeof e.edges.smooth)this.optionsBackup.edges={smooth:e.edges.smooth},e.edges.smooth={enabled:e.edges.smooth,type:n};else{var i=e.edges.smooth;void 0!==i.type&&"dynamic"!==i.type&&(n=i.type),this.optionsBackup.edges={smooth:void 0===i.enabled||i.enabled,type:void 0===i.type?"dynamic":i.type,roundness:void 0===i.roundness?.5:i.roundness,forceDirection:void 0!==i.forceDirection&&i.forceDirection},e.edges.smooth={enabled:void 0===i.enabled||i.enabled,type:n,roundness:void 0===i.roundness?.5:i.roundness,forceDirection:void 0!==i.forceDirection&&i.forceDirection}}this.body.emitter.emit("_forceDisableDynamicCurves",n)}return e}},{key:"positionInitially",value:function(e){if(!0!==this.options.hierarchical.enabled){this._resetRNG(this.initialRandomSeed);for(var t=e.length+50,n=0;n<e.length;n++){var i=e[n],r=2*Math.PI*this._rng();void 0===i.x&&(i.x=t*Math.cos(r)),void 0===i.y&&(i.y=t*Math.sin(r))}}}},{key:"layoutNetwork",value:function(){if(!0!==this.options.hierarchical.enabled&&!0===this.options.improvedLayout){for(var e=this.body.nodeIndices,t=0,n=0;n<e.length;n++)!0===this.body.nodes[e[n]].predefinedPosition&&(t+=1);if(t<.5*e.length){var i=0,r=this.options.clusterThreshold,o={clusterNodeProperties:{shape:"ellipse",label:"",group:"",font:{multi:!1}},clusterEdgeProperties:{label:"",font:{multi:!1},smooth:{enabled:!1}}};if(e.length>r){for(var s=e.length;e.length>r&&i<=10;){i+=1;var a=e.length;if(i%3==0?this.body.modules.clustering.clusterBridges(o):this.body.modules.clustering.clusterOutliers(o),a==e.length&&i%3!=0)return this._declusterAll(),this.body.emitter.emit("_layoutFailed"),void console.info("This network could not be positioned by this version of the improved layout algorithm. Please disable improvedLayout for better performance.")}this.body.modules.kamadaKawai.setOptions({springLength:Math.max(150,2*s)})}i>10&&console.info("The clustering didn't succeed within the amount of interations allowed, progressing with partial result."),this.body.modules.kamadaKawai.solve(e,this.body.edgeIndices,!0),this._shiftToCenter();for(var l=0;l<e.length;l++){var u=this.body.nodes[e[l]];!1===u.predefinedPosition&&(u.x+=70*(.5-this._rng()),u.y+=70*(.5-this._rng()))}this._declusterAll(),this.body.emitter.emit("_repositionBezierNodes")}}}},{key:"_shiftToCenter",value:function(){for(var e=tM.getRangeCore(this.body.nodes,this.body.nodeIndices),t=tM.findCenter(e),n=0;n<this.body.nodeIndices.length;n++){var i=this.body.nodes[this.body.nodeIndices[n]];i.x-=t.x,i.y-=t.y}}},{key:"_declusterAll",value:function(){for(var e=!0;!0===e;){e=!1;for(var t=0;t<this.body.nodeIndices.length;t++)!0===this.body.nodes[this.body.nodeIndices[t]].isCluster&&(e=!0,this.body.modules.clustering.openCluster(this.body.nodeIndices[t],{},!1));!0===e&&this.body.emitter.emit("_dataChanged")}}},{key:"getSeed",value:function(){return this.initialRandomSeed}},{key:"setupHierarchicalLayout",value:function(){if(!0===this.options.hierarchical.enabled&&this.body.nodeIndices.length>0){var e,t,n=!1,i=!1;for(t in this.lastNodeOnLevel={},this.hierarchical=new hD,this.body.nodes)this.body.nodes.hasOwnProperty(t)&&(void 0!==(e=this.body.nodes[t]).options.level?(n=!0,this.hierarchical.levels[t]=e.options.level):i=!0);if(!0===i&&!0===n)throw new Error("To use the hierarchical layout, nodes require either no predefined levels or levels have to be defined for all nodes.");if(!0===i){var r=this.options.hierarchical.sortMethod;"hubsize"===r?this._determineLevelsByHubsize():"directed"===r?this._determineLevelsDirected():"custom"===r&&this._determineLevelsCustomCallback()}for(var o in this.body.nodes)this.body.nodes.hasOwnProperty(o)&&this.hierarchical.ensureLevel(o);var s=this._getDistribution();this._generateMap(),this._placeNodesByHierarchy(s),this._condenseHierarchy(),this._shiftToCenter()}}},{key:"_condenseHierarchy",value:function(){var e=this,t=!1,n={},i=function(t,n){var i=e.hierarchical.trees;for(var r in i)i.hasOwnProperty(r)&&i[r]===t&&e.direction.shift(r,n)},r=function t(n,i){if(!i[n.id]&&(i[n.id]=!0,e.hierarchical.childrenReference[n.id])){var r=e.hierarchical.childrenReference[n.id];if(r.length>0)for(var o=0;o<r.length;o++)t(e.body.nodes[r[o]],i)}},o=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e9,i=1e9,r=1e9,o=1e9,s=-1e9;for(var a in t)if(t.hasOwnProperty(a)){var l=e.body.nodes[a],u=e.hierarchical.levels[l.id],c=e.direction.getPosition(l),d=e._getSpaceAroundNode(l,t),h=IO(d,2),f=h[0],p=h[1];i=Math.min(f,i),r=Math.min(p,r),u<=n&&(o=Math.min(c,o),s=Math.max(c,s))}return[o,s,i,r]},s=function(t,n){var i=e.hierarchical.getMaxLevel(t.id),r=e.hierarchical.getMaxLevel(n.id);return Math.min(i,r)},a=function(t,n,i){for(var r=e.hierarchical,o=0;o<n.length;o++){var s=n[o],a=r.distributionOrdering[s];if(a.length>1)for(var l=0;l<a.length-1;l++){var u=a[l],c=a[l+1];r.hasSameParent(u,c)&&r.inSameSubNetwork(u,c)&&t(u,c,i)}}},l=function(n,i){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=e.direction.getPosition(n),u=e.direction.getPosition(i),c=Math.abs(u-l),d=e.options.hierarchical.nodeSpacing;if(c>d){var h={},f={};r(n,h),r(i,f);var p=s(n,i),v=o(h,p),y=o(f,p),g=v[1],m=y[0],b=y[2],w=Math.abs(g-m);if(w>d){var _=g-m+d;_<-b+d&&(_=-b+d),_<0&&(e._shiftBlock(i.id,_),t=!0,!0===a&&e._centerParent(i))}}},u=function(i,s){for(var a=s.id,l=s.edges,u=e.hierarchical.levels[s.id],c=e.options.hierarchical.levelSeparation*e.options.hierarchical.levelSeparation,d={},h=[],f=0;f<l.length;f++){var p=l[f];if(p.toId!=p.fromId){var v=p.toId==a?p.from:p.to;d[l[f].id]=v,e.hierarchical.levels[v.id]<u&&h.push(p)}}var y=function(t,n){for(var i=0,r=0;r<n.length;r++)if(void 0!==d[n[r].id]){var o=e.direction.getPosition(d[n[r].id])-t;i+=o/Math.sqrt(o*o+c)}return i},g=function(t,n){for(var i=0,r=0;r<n.length;r++)if(void 0!==d[n[r].id]){var o=e.direction.getPosition(d[n[r].id])-t;i-=c*Math.pow(o*o+c,-1.5)}return i},m=function(t,n){for(var i=e.direction.getPosition(s),r={},o=0;o<t;o++){var a=y(i,n),l=g(i,n);if(void 0!==r[i-=Math.max(-40,Math.min(40,Math.round(a/l)))])break;r[i]=o}return i},b=m(i,h);!function(i){var a=e.direction.getPosition(s);if(void 0===n[s.id]){var l={};r(s,l),n[s.id]=l}var u=o(n[s.id]),c=u[2],d=u[3],h=i-a,f=0;h>0?f=Math.min(h,d-e.options.hierarchical.nodeSpacing):h<0&&(f=-Math.min(-h,c-e.options.hierarchical.nodeSpacing)),0!=f&&(e._shiftBlock(s.id,f),t=!0)}(b),function(n){var i=e.direction.getPosition(s),r=e._getSpaceAroundNode(s),o=IO(r,2),a=o[0],l=o[1],u=n-i,c=i;u>0?c=Math.min(i+(l-e.options.hierarchical.nodeSpacing),n):u<0&&(c=Math.max(i-(a-e.options.hierarchical.nodeSpacing),n)),c!==i&&(e.direction.setPosition(s,c),t=!0)}(b=m(i,l))};!0===this.options.hierarchical.blockShifting&&(function(n){var i=e.hierarchical.getLevels();i=QT(i).call(i);for(var r=0;r<5&&(t=!1,a(l,i,!0),!0===t);r++);}(),function(){for(var t in e.body.nodes)e.body.nodes.hasOwnProperty(t)&&e._centerParent(e.body.nodes[t])}()),!0===this.options.hierarchical.edgeMinimization&&function(n){var i=e.hierarchical.getLevels();i=QT(i).call(i);for(var r=0;r<20;r++){t=!1;for(var o=0;o<i.length;o++)for(var s=i[o],a=e.hierarchical.distributionOrdering[s],l=0;l<a.length;l++)u(1e3,a[l]);if(!0!==t)break}}(),!0===this.options.hierarchical.parentCentralization&&function(){var t=e.hierarchical.getLevels();t=QT(t).call(t);for(var n=0;n<t.length;n++)for(var i=t[n],r=e.hierarchical.distributionOrdering[i],o=0;o<r.length;o++)e._centerParent(r[o])}(),function(){for(var t=function(){for(var t=[],n=0;n<e.hierarchical.numTrees();n++)t.push(e.direction.getTreeSize(n));return t}(),n=0,r=0;r<t.length-1;r++)n+=t[r].max-t[r+1].min+e.options.hierarchical.treeSpacing,i(r+1,n)}()}},{key:"_getSpaceAroundNode",value:function(e,t){var n=!0;void 0===t&&(n=!1);var i=this.hierarchical.levels[e.id];if(void 0!==i){var r=this.hierarchical.distributionIndex[e.id],o=this.direction.getPosition(e),s=this.hierarchical.distributionOrdering[i],a=1e9,l=1e9;if(0!==r){var u=s[r-1];(!0===n&&void 0===t[u.id]||!1===n)&&(a=o-this.direction.getPosition(u))}if(r!=s.length-1){var c=s[r+1];if(!0===n&&void 0===t[c.id]||!1===n){var d=this.direction.getPosition(c);l=Math.min(l,d-o)}}return[a,l]}return[0,0]}},{key:"_centerParent",value:function(e){if(this.hierarchical.parentReference[e.id])for(var t=this.hierarchical.parentReference[e.id],n=0;n<t.length;n++){var i=t[n],r=this.body.nodes[i],o=this.hierarchical.childrenReference[i];if(void 0!==o){var s=this._getCenterPosition(o),a=this.direction.getPosition(r),l=this._getSpaceAroundNode(r),u=IO(l,2),c=u[0],d=u[1],h=a-s;(h<0&&Math.abs(h)<d-this.options.hierarchical.nodeSpacing||h>0&&Math.abs(h)<c-this.options.hierarchical.nodeSpacing)&&this.direction.setPosition(r,s)}}}},{key:"_placeNodesByHierarchy",value:function(e){for(var t in this.positionedNodes={},e)if(e.hasOwnProperty(t)){var n,i=jh(e[t]);i=this._indexArrayToNodes(i),QM(n=this.direction).call(n,i);for(var r=0,o=0;o<i.length;o++){var s=i[o];if(void 0===this.positionedNodes[s.id]){var a=this.options.hierarchical.nodeSpacing,l=a*r;r>0&&(l=this.direction.getPosition(i[o-1])+a),this.direction.setPosition(s,l,t),this._validatePositionAndContinue(s,t,l),r++}}}}},{key:"_placeBranchNodes",value:function(e,t){var n,i=this.hierarchical.childrenReference[e];if(void 0!==i){for(var r=[],o=0;o<i.length;o++)r.push(this.body.nodes[i[o]]);QM(n=this.direction).call(n,r);for(var s=0;s<r.length;s++){var a=r[s],l=this.hierarchical.levels[a.id];if(!(l>t&&void 0===this.positionedNodes[a.id]))return;var u,c=this.options.hierarchical.nodeSpacing;u=0===s?this.direction.getPosition(this.body.nodes[e]):this.direction.getPosition(r[s-1])+c,this.direction.setPosition(a,u,l),this._validatePositionAndContinue(a,l,u)}var d=this._getCenterPosition(r);this.direction.setPosition(this.body.nodes[e],d,t)}}},{key:"_validatePositionAndContinue",value:function(e,t,n){if(this.hierarchical.isTree){if(void 0!==this.lastNodeOnLevel[t]){var i=this.direction.getPosition(this.body.nodes[this.lastNodeOnLevel[t]]);if(n-i<this.options.hierarchical.nodeSpacing){var r=i+this.options.hierarchical.nodeSpacing-n,o=this._findCommonParent(this.lastNodeOnLevel[t],e.id);this._shiftBlock(o.withChild,r)}}this.lastNodeOnLevel[t]=e.id,this.positionedNodes[e.id]=!0,this._placeBranchNodes(e.id,t)}}},{key:"_indexArrayToNodes",value:function(e){for(var t=[],n=0;n<e.length;n++)t.push(this.body.nodes[e[n]]);return t}},{key:"_getDistribution",value:function(){var e,t,n={};for(e in this.body.nodes)if(this.body.nodes.hasOwnProperty(e)){t=this.body.nodes[e];var i=void 0===this.hierarchical.levels[e]?0:this.hierarchical.levels[e];this.direction.fix(t,i),void 0===n[i]&&(n[i]={}),n[i][e]=t}return n}},{key:"_getActiveEdges",value:function(e){var t=this,n=[];return ps(e.edges,(function(e){var i;-1!==Cu(i=t.body.edgeIndices).call(i,e.id)&&n.push(e)})),n}},{key:"_getHubSizes",value:function(){var e=this,t={};ps(this.body.nodeIndices,(function(n){var i=e.body.nodes[n],r=e._getActiveEdges(i).length;t[r]=!0}));var n=[];return ps(t,(function(e){n.push(Number(e))})),QM(KM).call(KM,n,(function(e,t){return t-e})),n}},{key:"_determineLevelsByHubsize",value:function(){for(var e=this,t=function(t,n){e.hierarchical.levelDownstream(t,n)},n=this._getHubSizes(),i=function(i){var r=n[i];if(0===r)return"break";ps(e.body.nodeIndices,(function(n){var i=e.body.nodes[n];r===e._getActiveEdges(i).length&&e._crawlNetwork(t,n)}))},r=0;r<n.length&&"break"!==i(r);++r);}},{key:"_determineLevelsCustomCallback",value:function(){var e=this;this._crawlNetwork((function(t,n,i){var r=e.hierarchical.levels[t.id];void 0===r&&(r=e.hierarchical.levels[t.id]=1e5);var o=(tM.cloneOptions(t,"node"),tM.cloneOptions(n,"node"),void tM.cloneOptions(i,"edge"));e.hierarchical.levels[n.id]=r+o})),this.hierarchical.setMinLevelToZero(this.body.nodes)}},{key:"_determineLevelsDirected",value:function(){var e,t=this,n=function(e){var t=e.reduce;return e===BM||e instanceof Array&&t===BM.reduce?YM:t}(e=this.body.nodeIndices).call(e,(function(e,n){return e.set(n,t.body.nodes[n]),e}),new FM),i=this.hierarchical.levels;"roots"===this.options.hierarchical.shakeTowards?this.hierarchical.levels=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Iu(null);return dD((function(t){var n,i;return lD(n=CS(i=t.edges).call(i,(function(t){return e.has(t.toId)}))).call(n,(function(e){return e.from===t}))}),(function(e,t){return t<e}),"to",e,t)}(n,i):this.hierarchical.levels=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Iu(null);return dD((function(t){var n,i;return lD(n=CS(i=t.edges).call(i,(function(t){return e.has(t.toId)}))).call(n,(function(e){return e.to===t}))}),(function(e,t){return t>e}),"from",e,t)}(n,i),this.hierarchical.setMinLevelToZero(this.body.nodes)}},{key:"_generateMap",value:function(){var e=this;this._crawlNetwork((function(t,n){e.hierarchical.levels[n.id]>e.hierarchical.levels[t.id]&&e.hierarchical.addRelation(t.id,n.id)})),this.hierarchical.checkIfTree()}},{key:"_crawlNetwork",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){},n=arguments.length>1?arguments[1]:void 0,i={},r=function n(r,o){if(void 0===i[r.id]){var s;e.hierarchical.setTreeIndex(r,o),i[r.id]=!0;for(var a=e._getActiveEdges(r),l=0;l<a.length;l++){var u=a[l];!0===u.connected&&(s=u.toId==r.id?u.from:u.to,r.id!=s.id&&(t(r,s,u),n(s,o)))}}};if(void 0===n)for(var o=0,s=0;s<this.body.nodeIndices.length;s++){var a=this.body.nodeIndices[s];if(void 0===i[a]){var l=this.body.nodes[a];r(l,o),o+=1}}else{var u=this.body.nodes[n];if(void 0===u)return void console.error("Node not found:",n);r(u)}}},{key:"_shiftBlock",value:function(e,t){var n=this,i={};!function e(r){if(!i[r]){i[r]=!0,n.direction.shift(r,t);var o=n.hierarchical.childrenReference[r];if(void 0!==o)for(var s=0;s<o.length;s++)e(o[s])}}(e)}},{key:"_findCommonParent",value:function(e,t){var n=this,i={};return function e(t,i){var r=n.hierarchical.parentReference[i];if(void 0!==r)for(var o=0;o<r.length;o++){var s=r[o];t[s]=!0,e(t,s)}}(i,e),function e(t,i){var r=n.hierarchical.parentReference[i];if(void 0!==r)for(var o=0;o<r.length;o++){var s=r[o];if(void 0!==t[s])return{foundParent:s,withChild:i};var a=e(t,s);if(null!==a.foundParent)return a}return{foundParent:null,withChild:i}}(i,t)}},{key:"setDirectionStrategy",value:function(){var e="UD"===this.options.hierarchical.direction||"DU"===this.options.hierarchical.direction;this.direction=e?new tD(this):new nD(this)}},{key:"_getCenterPosition",value:function(e){for(var t=1e9,n=-1e9,i=0;i<e.length;i++){var r=void 0;if(void 0!==e[i].id)r=e[i];else{var o=e[i];r=this.body.nodes[o]}var s=this.direction.getPosition(r);t=Math.min(t,s),n=Math.max(n,s)}return.5*(t+n)}}]),e}(),pD=function(){function e(t,n,i,r){var o,s,a=this;hh(this,e),this.body=t,this.canvas=n,this.selectionHandler=i,this.interactionHandler=r,this.editMode=!1,this.manipulationDiv=void 0,this.editModeDiv=void 0,this.closeDiv=void 0,this.manipulationHammers=[],this.temporaryUIFunctions={},this.temporaryEventFunctions=[],this.touchTime=0,this.temporaryIds={nodes:[],edges:[]},this.guiEnabled=!1,this.inMode=!1,this.selectedControlNode=void 0,this.options={},this.defaultOptions={enabled:!1,initiallyActive:!1,addNode:!0,addEdge:!0,editNode:void 0,editEdge:!0,deleteNode:!0,deleteEdge:!0,controlNodeStyle:{shape:"dot",size:6,color:{background:"#ff0000",border:"#3c3c3c",highlight:{background:"#07f968",border:"#3c3c3c"}},borderWidth:2,borderWidthSelected:2}},es(this.options,this.defaultOptions),this.body.emitter.on("destroy",(function(){a._clean()})),this.body.emitter.on("_dataChanged",K(o=this._restore).call(o,this)),this.body.emitter.on("_resetData",K(s=this._restore).call(s,this))}return yh(e,[{key:"_restore",value:function(){!1!==this.inMode&&(!0===this.options.initiallyActive?this.enableEditMode():this.disableEditMode())}},{key:"setOptions",value:function(e,t,n){void 0!==t&&(void 0!==t.locale?this.options.locale=t.locale:this.options.locale=n.locale,void 0!==t.locales?this.options.locales=t.locales:this.options.locales=n.locales),void 0!==e&&("boolean"==typeof e?this.options.enabled=e:(this.options.enabled=!0,rs(this.options,e)),!0===this.options.initiallyActive&&(this.editMode=!0),this._setup())}},{key:"toggleEditMode",value:function(){!0===this.editMode?this.disableEditMode():this.enableEditMode()}},{key:"enableEditMode",value:function(){this.editMode=!0,this._clean(),!0===this.guiEnabled&&(this.manipulationDiv.style.display="block",this.closeDiv.style.display="block",this.editModeDiv.style.display="none",this.showManipulatorToolbar())}},{key:"disableEditMode",value:function(){this.editMode=!1,this._clean(),!0===this.guiEnabled&&(this.manipulationDiv.style.display="none",this.closeDiv.style.display="none",this.editModeDiv.style.display="block",this._createEditButton())}},{key:"showManipulatorToolbar",value:function(){if(this._clean(),this.manipulationDOM={},!0===this.guiEnabled){var e,t;this.editMode=!0,this.manipulationDiv.style.display="block",this.closeDiv.style.display="block";var n=this.selectionHandler._getSelectedNodeCount(),i=this.selectionHandler._getSelectedEdgeCount(),r=n+i,o=this.options.locales[this.options.locale],s=!1;!1!==this.options.addNode&&(this._createAddNodeButton(o),s=!0),!1!==this.options.addEdge&&(!0===s?this._createSeperator(1):s=!0,this._createAddEdgeButton(o)),1===n&&"function"==typeof this.options.editNode?(!0===s?this._createSeperator(2):s=!0,this._createEditNodeButton(o)):1===i&&0===n&&!1!==this.options.editEdge&&(!0===s?this._createSeperator(3):s=!0,this._createEditEdgeButton(o)),0!==r&&(n>0&&!1!==this.options.deleteNode?(!0===s&&this._createSeperator(4),this._createDeleteButton(o)):0===n&&!1!==this.options.deleteEdge&&(!0===s&&this._createSeperator(4),this._createDeleteButton(o))),this._bindHammerToDiv(this.closeDiv,K(e=this.toggleEditMode).call(e,this)),this._temporaryBindEvent("select",K(t=this.showManipulatorToolbar).call(t,this))}this.body.emitter.emit("_redraw")}},{key:"addNodeMode",value:function(){var e;if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="addNode",!0===this.guiEnabled){var t,n=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(n),this._createSeperator(),this._createDescription(n.addDescription||this.options.locales.en.addDescription),this._bindHammerToDiv(this.closeDiv,K(t=this.toggleEditMode).call(t,this))}this._temporaryBindEvent("click",K(e=this._performAddNode).call(e,this))}},{key:"editNode",value:function(){var e=this;!0!==this.editMode&&this.enableEditMode(),this._clean();var t=this.selectionHandler._getSelectedNode();if(void 0!==t){if(this.inMode="editNode","function"!=typeof this.options.editNode)throw new Error("No function has been configured to handle the editing of nodes.");if(!0!==t.isCluster){var n=rs({},t.options,!1);if(n.x=t.x,n.y=t.y,2!==this.options.editNode.length)throw new Error("The function for edit does not support two arguments (data, callback)");this.options.editNode(n,(function(t){null!=t&&"editNode"===e.inMode&&e.body.data.nodes.getDataSet().update(t),e.showManipulatorToolbar()}))}else alert(this.options.locales[this.options.locale].editClusterError||this.options.locales.en.editClusterError)}else this.showManipulatorToolbar()}},{key:"addEdgeMode",value:function(){var e,t,n,i,r;if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="addEdge",!0===this.guiEnabled){var o,s=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(s),this._createSeperator(),this._createDescription(s.edgeDescription||this.options.locales.en.edgeDescription),this._bindHammerToDiv(this.closeDiv,K(o=this.toggleEditMode).call(o,this))}this._temporaryBindUI("onTouch",K(e=this._handleConnect).call(e,this)),this._temporaryBindUI("onDragEnd",K(t=this._finishConnect).call(t,this)),this._temporaryBindUI("onDrag",K(n=this._dragControlNode).call(n,this)),this._temporaryBindUI("onRelease",K(i=this._finishConnect).call(i,this)),this._temporaryBindUI("onDragStart",K(r=this._dragStartEdge).call(r,this)),this._temporaryBindUI("onHold",(function(){}))}},{key:"editEdgeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="editEdge","object"!==BO(this.options.editEdge)||"function"!=typeof this.options.editEdge.editWithoutDrag||(this.edgeBeingEditedId=this.selectionHandler.getSelectedEdges()[0],void 0===this.edgeBeingEditedId)){if(!0===this.guiEnabled){var e,t=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(t),this._createSeperator(),this._createDescription(t.editEdgeDescription||this.options.locales.en.editEdgeDescription),this._bindHammerToDiv(this.closeDiv,K(e=this.toggleEditMode).call(e,this))}if(this.edgeBeingEditedId=this.selectionHandler.getSelectedEdges()[0],void 0!==this.edgeBeingEditedId){var n,i,r,o,s=this.body.edges[this.edgeBeingEditedId],a=this._getNewTargetNode(s.from.x,s.from.y),l=this._getNewTargetNode(s.to.x,s.to.y);this.temporaryIds.nodes.push(a.id),this.temporaryIds.nodes.push(l.id),this.body.nodes[a.id]=a,this.body.nodeIndices.push(a.id),this.body.nodes[l.id]=l,this.body.nodeIndices.push(l.id),this._temporaryBindUI("onTouch",K(n=this._controlNodeTouch).call(n,this)),this._temporaryBindUI("onTap",(function(){})),this._temporaryBindUI("onHold",(function(){})),this._temporaryBindUI("onDragStart",K(i=this._controlNodeDragStart).call(i,this)),this._temporaryBindUI("onDrag",K(r=this._controlNodeDrag).call(r,this)),this._temporaryBindUI("onDragEnd",K(o=this._controlNodeDragEnd).call(o,this)),this._temporaryBindUI("onMouseMove",(function(){})),this._temporaryBindEvent("beforeDrawing",(function(e){var t=s.edgeType.findBorderPositions(e);!1===a.selected&&(a.x=t.from.x,a.y=t.from.y),!1===l.selected&&(l.x=t.to.x,l.y=t.to.y)})),this.body.emitter.emit("_redraw")}else this.showManipulatorToolbar()}else{var u=this.body.edges[this.edgeBeingEditedId];this._performEditEdge(u.from.id,u.to.id)}}},{key:"deleteSelected",value:function(){var e=this;!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="delete";var t=this.selectionHandler.getSelectedNodes(),n=this.selectionHandler.getSelectedEdges(),i=void 0;if(t.length>0){for(var r=0;r<t.length;r++)if(!0===this.body.nodes[t[r]].isCluster)return void alert(this.options.locales[this.options.locale].deleteClusterError||this.options.locales.en.deleteClusterError);"function"==typeof this.options.deleteNode&&(i=this.options.deleteNode)}else n.length>0&&"function"==typeof this.options.deleteEdge&&(i=this.options.deleteEdge);if("function"==typeof i){var o={nodes:t,edges:n};if(2!==i.length)throw new Error("The function for delete does not support two arguments (data, callback)");i(o,(function(t){null!=t&&"delete"===e.inMode?(e.body.data.edges.getDataSet().remove(t.edges),e.body.data.nodes.getDataSet().remove(t.nodes),e.body.emitter.emit("startSimulation"),e.showManipulatorToolbar()):(e.body.emitter.emit("startSimulation"),e.showManipulatorToolbar())}))}else this.body.data.edges.getDataSet().remove(n),this.body.data.nodes.getDataSet().remove(t),this.body.emitter.emit("startSimulation"),this.showManipulatorToolbar()}},{key:"_setup",value:function(){!0===this.options.enabled?(this.guiEnabled=!0,this._createWrappers(),!1===this.editMode?this._createEditButton():this.showManipulatorToolbar()):(this._removeManipulationDOM(),this.guiEnabled=!1)}},{key:"_createWrappers",value:function(){void 0===this.manipulationDiv&&(this.manipulationDiv=document.createElement("div"),this.manipulationDiv.className="vis-manipulation",!0===this.editMode?this.manipulationDiv.style.display="block":this.manipulationDiv.style.display="none",this.canvas.frame.appendChild(this.manipulationDiv)),void 0===this.editModeDiv&&(this.editModeDiv=document.createElement("div"),this.editModeDiv.className="vis-edit-mode",!0===this.editMode?this.editModeDiv.style.display="none":this.editModeDiv.style.display="block",this.canvas.frame.appendChild(this.editModeDiv)),void 0===this.closeDiv&&(this.closeDiv=document.createElement("div"),this.closeDiv.className="vis-close",this.closeDiv.style.display=this.manipulationDiv.style.display,this.canvas.frame.appendChild(this.closeDiv))}},{key:"_getNewTargetNode",value:function(e,t){var n=rs({},this.options.controlNodeStyle);n.id="targetNode"+eM(),n.hidden=!1,n.physics=!1,n.x=e,n.y=t;var i=this.body.functions.createNode(n);return i.shape.boundingBox={left:e,right:e,top:t,bottom:t},i}},{key:"_createEditButton",value:function(){var e;this._clean(),this.manipulationDOM={},$o(this.editModeDiv);var t=this.options.locales[this.options.locale],n=this._createButton("editMode","vis-button vis-edit vis-edit-mode",t.edit||this.options.locales.en.edit);this.editModeDiv.appendChild(n),this._bindHammerToDiv(n,K(e=this.toggleEditMode).call(e,this))}},{key:"_clean",value:function(){this.inMode=!1,!0===this.guiEnabled&&($o(this.editModeDiv),$o(this.manipulationDiv),this._cleanManipulatorHammers()),this._cleanupTemporaryNodesAndEdges(),this._unbindTemporaryUIs(),this._unbindTemporaryEvents(),this.body.emitter.emit("restorePhysics")}},{key:"_cleanManipulatorHammers",value:function(){if(0!=this.manipulationHammers.length){for(var e=0;e<this.manipulationHammers.length;e++)this.manipulationHammers[e].destroy();this.manipulationHammers=[]}}},{key:"_removeManipulationDOM",value:function(){this._clean(),$o(this.manipulationDiv),$o(this.editModeDiv),$o(this.closeDiv),this.manipulationDiv&&this.canvas.frame.removeChild(this.manipulationDiv),this.editModeDiv&&this.canvas.frame.removeChild(this.editModeDiv),this.closeDiv&&this.canvas.frame.removeChild(this.closeDiv),this.manipulationDiv=void 0,this.editModeDiv=void 0,this.closeDiv=void 0}},{key:"_createSeperator",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;this.manipulationDOM["seperatorLineDiv"+e]=document.createElement("div"),this.manipulationDOM["seperatorLineDiv"+e].className="vis-separator-line",this.manipulationDiv.appendChild(this.manipulationDOM["seperatorLineDiv"+e])}},{key:"_createAddNodeButton",value:function(e){var t,n=this._createButton("addNode","vis-button vis-add",e.addNode||this.options.locales.en.addNode);this.manipulationDiv.appendChild(n),this._bindHammerToDiv(n,K(t=this.addNodeMode).call(t,this))}},{key:"_createAddEdgeButton",value:function(e){var t,n=this._createButton("addEdge","vis-button vis-connect",e.addEdge||this.options.locales.en.addEdge);this.manipulationDiv.appendChild(n),this._bindHammerToDiv(n,K(t=this.addEdgeMode).call(t,this))}},{key:"_createEditNodeButton",value:function(e){var t,n=this._createButton("editNode","vis-button vis-edit",e.editNode||this.options.locales.en.editNode);this.manipulationDiv.appendChild(n),this._bindHammerToDiv(n,K(t=this.editNode).call(t,this))}},{key:"_createEditEdgeButton",value:function(e){var t,n=this._createButton("editEdge","vis-button vis-edit",e.editEdge||this.options.locales.en.editEdge);this.manipulationDiv.appendChild(n),this._bindHammerToDiv(n,K(t=this.editEdgeMode).call(t,this))}},{key:"_createDeleteButton",value:function(e){var t,n;n=this.options.rtl?"vis-button vis-delete-rtl":"vis-button vis-delete";var i=this._createButton("delete",n,e.del||this.options.locales.en.del);this.manipulationDiv.appendChild(i),this._bindHammerToDiv(i,K(t=this.deleteSelected).call(t,this))}},{key:"_createBackButton",value:function(e){var t,n=this._createButton("back","vis-button vis-back",e.back||this.options.locales.en.back);this.manipulationDiv.appendChild(n),this._bindHammerToDiv(n,K(t=this.showManipulatorToolbar).call(t,this))}},{key:"_createButton",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vis-label";return this.manipulationDOM[e+"Div"]=document.createElement("div"),this.manipulationDOM[e+"Div"].className=t,this.manipulationDOM[e+"Label"]=document.createElement("div"),this.manipulationDOM[e+"Label"].className=i,this.manipulationDOM[e+"Label"].innerHTML=n,this.manipulationDOM[e+"Div"].appendChild(this.manipulationDOM[e+"Label"]),this.manipulationDOM[e+"Div"]}},{key:"_createDescription",value:function(e){this.manipulationDiv.appendChild(this._createButton("description","vis-button vis-none",e))}},{key:"_temporaryBindEvent",value:function(e,t){this.temporaryEventFunctions.push({event:e,boundFunction:t}),this.body.emitter.on(e,t)}},{key:"_temporaryBindUI",value:function(e,t){if(void 0===this.body.eventListeners[e])throw new Error("This UI function does not exist. Typo? You tried: "+e+" possible are: "+qE(jh(this.body.eventListeners)));this.temporaryUIFunctions[e]=this.body.eventListeners[e],this.body.eventListeners[e]=t}},{key:"_unbindTemporaryUIs",value:function(){for(var e in this.temporaryUIFunctions)this.temporaryUIFunctions.hasOwnProperty(e)&&(this.body.eventListeners[e]=this.temporaryUIFunctions[e],delete this.temporaryUIFunctions[e]);this.temporaryUIFunctions={}}},{key:"_unbindTemporaryEvents",value:function(){for(var e=0;e<this.temporaryEventFunctions.length;e++){var t=this.temporaryEventFunctions[e].event,n=this.temporaryEventFunctions[e].boundFunction;this.body.emitter.off(t,n)}this.temporaryEventFunctions=[]}},{key:"_bindHammerToDiv",value:function(e,t){var n=new ah(e,{});sM.onTouch(n,t),this.manipulationHammers.push(n)}},{key:"_cleanupTemporaryNodesAndEdges",value:function(){for(var e=0;e<this.temporaryIds.edges.length;e++){var t;this.body.edges[this.temporaryIds.edges[e]].disconnect(),delete this.body.edges[this.temporaryIds.edges[e]];var n,i=Cu(t=this.body.edgeIndices).call(t,this.temporaryIds.edges[e]);-1!==i&&hu(n=this.body.edgeIndices).call(n,i,1)}for(var r=0;r<this.temporaryIds.nodes.length;r++){var o;delete this.body.nodes[this.temporaryIds.nodes[r]];var s,a=Cu(o=this.body.nodeIndices).call(o,this.temporaryIds.nodes[r]);-1!==a&&hu(s=this.body.nodeIndices).call(s,a,1)}this.temporaryIds={nodes:[],edges:[]}}},{key:"_controlNodeTouch",value:function(e){this.selectionHandler.unselectAll(),this.lastTouch=this.body.functions.getPointer(e.center),this.lastTouch.translation=es({},this.body.view.translation)}},{key:"_controlNodeDragStart",value:function(e){var t=this.lastTouch,n=this.selectionHandler._pointerToPositionObject(t),i=this.body.nodes[this.temporaryIds.nodes[0]],r=this.body.nodes[this.temporaryIds.nodes[1]],o=this.body.edges[this.edgeBeingEditedId];this.selectedControlNode=void 0;var s=i.isOverlappingWith(n),a=r.isOverlappingWith(n);!0===s?(this.selectedControlNode=i,o.edgeType.from=i):!0===a&&(this.selectedControlNode=r,o.edgeType.to=r),void 0!==this.selectedControlNode&&this.selectionHandler.selectObject(this.selectedControlNode),this.body.emitter.emit("_redraw")}},{key:"_controlNodeDrag",value:function(e){this.body.emitter.emit("disablePhysics");var t=this.body.functions.getPointer(e.center),n=this.canvas.DOMtoCanvas(t);void 0!==this.selectedControlNode?(this.selectedControlNode.x=n.x,this.selectedControlNode.y=n.y):this.interactionHandler.onDrag(e),this.body.emitter.emit("_redraw")}},{key:"_controlNodeDragEnd",value:function(e){var t=this.body.functions.getPointer(e.center),n=this.selectionHandler._pointerToPositionObject(t),i=this.body.edges[this.edgeBeingEditedId];if(void 0!==this.selectedControlNode){this.selectionHandler.unselectAll();for(var r=this.selectionHandler._getAllNodesOverlappingWith(n),o=void 0,s=r.length-1;s>=0;s--)if(r[s]!==this.selectedControlNode.id){o=this.body.nodes[r[s]];break}if(void 0!==o&&void 0!==this.selectedControlNode)if(!0===o.isCluster)alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError);else{var a=this.body.nodes[this.temporaryIds.nodes[0]];this.selectedControlNode.id===a.id?this._performEditEdge(o.id,i.to.id):this._performEditEdge(i.from.id,o.id)}else i.updateEdgeType(),this.body.emitter.emit("restorePhysics");this.body.emitter.emit("_redraw")}}},{key:"_handleConnect",value:function(e){if((new Date).valueOf()-this.touchTime>100){this.lastTouch=this.body.functions.getPointer(e.center),this.lastTouch.translation=es({},this.body.view.translation);var t=this.lastTouch,n=this.selectionHandler.getNodeAt(t);if(void 0!==n)if(!0===n.isCluster)alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError);else{var i=this._getNewTargetNode(n.x,n.y);this.body.nodes[i.id]=i,this.body.nodeIndices.push(i.id);var r=this.body.functions.createEdge({id:"connectionEdge"+eM(),from:n.id,to:i.id,physics:!1,smooth:{enabled:!0,type:"continuous",roundness:.5}});this.body.edges[r.id]=r,this.body.edgeIndices.push(r.id),this.temporaryIds.nodes.push(i.id),this.temporaryIds.edges.push(r.id)}this.touchTime=(new Date).valueOf()}}},{key:"_dragControlNode",value:function(e){var t=this.body.functions.getPointer(e.center),n=this.selectionHandler._pointerToPositionObject(t),i=void 0;void 0!==this.temporaryIds.edges[0]&&(i=this.body.edges[this.temporaryIds.edges[0]].fromId);for(var r=this.selectionHandler._getAllNodesOverlappingWith(n),o=void 0,s=r.length-1;s>=0;s--){var a;if(-1===Cu(a=this.temporaryIds.nodes).call(a,r[s])){o=this.body.nodes[r[s]];break}}if(e.controlEdge={from:i,to:o?o.id:void 0},this.selectionHandler._generateClickEvent("controlNodeDragging",e,t),void 0!==this.temporaryIds.nodes[0]){var l=this.body.nodes[this.temporaryIds.nodes[0]];l.x=this.canvas._XconvertDOMtoCanvas(t.x),l.y=this.canvas._YconvertDOMtoCanvas(t.y),this.body.emitter.emit("_redraw")}else this.interactionHandler.onDrag(e)}},{key:"_finishConnect",value:function(e){var t=this.body.functions.getPointer(e.center),n=this.selectionHandler._pointerToPositionObject(t),i=void 0;void 0!==this.temporaryIds.edges[0]&&(i=this.body.edges[this.temporaryIds.edges[0]].fromId);for(var r=this.selectionHandler._getAllNodesOverlappingWith(n),o=void 0,s=r.length-1;s>=0;s--){var a;if(-1===Cu(a=this.temporaryIds.nodes).call(a,r[s])){o=this.body.nodes[r[s]];break}}this._cleanupTemporaryNodesAndEdges(),void 0!==o&&(!0===o.isCluster?alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError):void 0!==this.body.nodes[i]&&void 0!==this.body.nodes[o.id]&&this._performAddEdge(i,o.id)),e.controlEdge={from:i,to:o?o.id:void 0},this.selectionHandler._generateClickEvent("controlNodeDragEnd",e,t),this.body.emitter.emit("_redraw")}},{key:"_dragStartEdge",value:function(e){var t=this.lastTouch;this.selectionHandler._generateClickEvent("dragStart",e,t,void 0,!0)}},{key:"_performAddNode",value:function(e){var t=this,n={id:eM(),x:e.pointer.canvas.x,y:e.pointer.canvas.y,label:"new"};if("function"==typeof this.options.addNode){if(2!==this.options.addNode.length)throw this.showManipulatorToolbar(),new Error("The function for add does not support two arguments (data,callback)");this.options.addNode(n,(function(e){null!=e&&"addNode"===t.inMode&&t.body.data.nodes.getDataSet().add(e),t.showManipulatorToolbar()}))}else this.body.data.nodes.getDataSet().add(n),this.showManipulatorToolbar()}},{key:"_performAddEdge",value:function(e,t){var n=this,i={from:e,to:t};if("function"==typeof this.options.addEdge){if(2!==this.options.addEdge.length)throw new Error("The function for connect does not support two arguments (data,callback)");this.options.addEdge(i,(function(e){null!=e&&"addEdge"===n.inMode&&(n.body.data.edges.getDataSet().add(e),n.selectionHandler.unselectAll(),n.showManipulatorToolbar())}))}else this.body.data.edges.getDataSet().add(i),this.selectionHandler.unselectAll(),this.showManipulatorToolbar()}},{key:"_performEditEdge",value:function(e,t){var n=this,i={id:this.edgeBeingEditedId,from:e,to:t,label:this.body.data.edges.get(this.edgeBeingEditedId).label},r=this.options.editEdge;if("object"===BO(r)&&(r=r.editWithoutDrag),"function"==typeof r){if(2!==r.length)throw new Error("The function for edit does not support two arguments (data, callback)");r(i,(function(e){null==e||"editEdge"!==n.inMode?(n.body.edges[i.id].updateEdgeType(),n.body.emitter.emit("_redraw"),n.showManipulatorToolbar()):(n.body.data.edges.getDataSet().update(e),n.selectionHandler.unselectAll(),n.showManipulatorToolbar())}))}else this.body.data.edges.getDataSet().update(i),this.selectionHandler.unselectAll(),this.showManipulatorToolbar()}}]),e}(),vD={black:"#000000",navy:"#000080",darkblue:"#00008B",mediumblue:"#0000CD",blue:"#0000FF",darkgreen:"#006400",green:"#008000",teal:"#008080",darkcyan:"#008B8B",deepskyblue:"#00BFFF",darkturquoise:"#00CED1",mediumspringgreen:"#00FA9A",lime:"#00FF00",springgreen:"#00FF7F",aqua:"#00FFFF",cyan:"#00FFFF",midnightblue:"#191970",dodgerblue:"#1E90FF",lightseagreen:"#20B2AA",forestgreen:"#228B22",seagreen:"#2E8B57",darkslategray:"#2F4F4F",limegreen:"#32CD32",mediumseagreen:"#3CB371",turquoise:"#40E0D0",royalblue:"#4169E1",steelblue:"#4682B4",darkslateblue:"#483D8B",mediumturquoise:"#48D1CC",indigo:"#4B0082",darkolivegreen:"#556B2F",cadetblue:"#5F9EA0",cornflowerblue:"#6495ED",mediumaquamarine:"#66CDAA",dimgray:"#696969",slateblue:"#6A5ACD",olivedrab:"#6B8E23",slategray:"#708090",lightslategray:"#778899",mediumslateblue:"#7B68EE",lawngreen:"#7CFC00",chartreuse:"#7FFF00",aquamarine:"#7FFFD4",maroon:"#800000",purple:"#800080",olive:"#808000",gray:"#808080",skyblue:"#87CEEB",lightskyblue:"#87CEFA",blueviolet:"#8A2BE2",darkred:"#8B0000",darkmagenta:"#8B008B",saddlebrown:"#8B4513",darkseagreen:"#8FBC8F",lightgreen:"#90EE90",mediumpurple:"#9370D8",darkviolet:"#9400D3",palegreen:"#98FB98",darkorchid:"#9932CC",yellowgreen:"#9ACD32",sienna:"#A0522D",brown:"#A52A2A",darkgray:"#A9A9A9",lightblue:"#ADD8E6",greenyellow:"#ADFF2F",paleturquoise:"#AFEEEE",lightsteelblue:"#B0C4DE",powderblue:"#B0E0E6",firebrick:"#B22222",darkgoldenrod:"#B8860B",mediumorchid:"#BA55D3",rosybrown:"#BC8F8F",darkkhaki:"#BDB76B",silver:"#C0C0C0",mediumvioletred:"#C71585",indianred:"#CD5C5C",peru:"#CD853F",chocolate:"#D2691E",tan:"#D2B48C",lightgrey:"#D3D3D3",palevioletred:"#D87093",thistle:"#D8BFD8",orchid:"#DA70D6",goldenrod:"#DAA520",crimson:"#DC143C",gainsboro:"#DCDCDC",plum:"#DDA0DD",burlywood:"#DEB887",lightcyan:"#E0FFFF",lavender:"#E6E6FA",darksalmon:"#E9967A",violet:"#EE82EE",palegoldenrod:"#EEE8AA",lightcoral:"#F08080",khaki:"#F0E68C",aliceblue:"#F0F8FF",honeydew:"#F0FFF0",azure:"#F0FFFF",sandybrown:"#F4A460",wheat:"#F5DEB3",beige:"#F5F5DC",whitesmoke:"#F5F5F5",mintcream:"#F5FFFA",ghostwhite:"#F8F8FF",salmon:"#FA8072",antiquewhite:"#FAEBD7",linen:"#FAF0E6",lightgoldenrodyellow:"#FAFAD2",oldlace:"#FDF5E6",red:"#FF0000",fuchsia:"#FF00FF",magenta:"#FF00FF",deeppink:"#FF1493",orangered:"#FF4500",tomato:"#FF6347",hotpink:"#FF69B4",coral:"#FF7F50",darkorange:"#FF8C00",lightsalmon:"#FFA07A",orange:"#FFA500",lightpink:"#FFB6C1",pink:"#FFC0CB",gold:"#FFD700",peachpuff:"#FFDAB9",navajowhite:"#FFDEAD",moccasin:"#FFE4B5",bisque:"#FFE4C4",mistyrose:"#FFE4E1",blanchedalmond:"#FFEBCD",papayawhip:"#FFEFD5",lavenderblush:"#FFF0F5",seashell:"#FFF5EE",cornsilk:"#FFF8DC",lemonchiffon:"#FFFACD",floralwhite:"#FFFAF0",snow:"#FFFAFA",yellow:"#FFFF00",lightyellow:"#FFFFE0",ivory:"#FFFFF0",white:"#FFFFFF"},yD=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;hh(this,e),this.pixelRatio=t,this.generated=!1,this.centerCoordinates={x:144.5,y:144.5},this.r=289*.49,this.color={r:255,g:255,b:255,a:1},this.hueCircle=void 0,this.initialColor={r:255,g:255,b:255,a:1},this.previousColor=void 0,this.applied=!1,this.updateCallback=function(){},this.closeCallback=function(){},this._create()}return yh(e,[{key:"insertTo",value:function(e){void 0!==this.hammer&&(this.hammer.destroy(),this.hammer=void 0),this.container=e,this.container.appendChild(this.frame),this._bindHammer(),this._setSize()}},{key:"setUpdateCallback",value:function(e){if("function"!=typeof e)throw new Error("Function attempted to set as colorPicker update callback is not a function.");this.updateCallback=e}},{key:"setCloseCallback",value:function(e){if("function"!=typeof e)throw new Error("Function attempted to set as colorPicker closing callback is not a function.");this.closeCallback=e}},{key:"_isColorString",value:function(e){if("string"==typeof e)return vD[e]}},{key:"setColor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if("none"!==e){var n,i=this._isColorString(e);if(void 0!==i&&(e=i),!0===Zo(e)){if(!0===js(e)){var r=e.substr(4).substr(0,e.length-5).split(",");n={r:r[0],g:r[1],b:r[2],a:1}}else if(!0===Ls(e)){var o=e.substr(5).substr(0,e.length-6).split(",");n={r:o[0],g:o[1],b:o[2],a:o[3]}}else if(!0===Rs(e)){var s=Ss(e);n={r:s.r,g:s.g,b:s.b,a:1}}}else if(e instanceof Object&&void 0!==e.r&&void 0!==e.g&&void 0!==e.b){var a=void 0!==e.a?e.a:"1.0";n={r:e.r,g:e.g,b:e.b,a:a}}if(void 0===n)throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: "+qE(e));this._setColor(n,t)}}},{key:"show",value:function(){void 0!==this.closeCallback&&(this.closeCallback(),this.closeCallback=void 0),this.applied=!1,this.frame.style.display="block",this._generateHueCircle()}},{key:"_hide",value:function(){var e=this,t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];!0===t&&(this.previousColor=es({},this.color)),!0===this.applied&&this.updateCallback(this.initialColor),this.frame.style.display="none",xh((function(){void 0!==e.closeCallback&&(e.closeCallback(),e.closeCallback=void 0)}),0)}},{key:"_save",value:function(){this.updateCallback(this.color),this.applied=!1,this._hide()}},{key:"_apply",value:function(){this.applied=!0,this.updateCallback(this.color),this._updatePicker(this.color)}},{key:"_loadLast",value:function(){void 0!==this.previousColor?this.setColor(this.previousColor,!1):alert("There is no last color to load...")}},{key:"_setColor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];!0===t&&(this.initialColor=es({},e)),this.color=e;var n=Ms(e.r,e.g,e.b),i=2*Math.PI,r=this.r*n.s,o=this.centerCoordinates.x+r*Math.sin(i*n.h),s=this.centerCoordinates.y+r*Math.cos(i*n.h);this.colorPickerSelector.style.left=o-.5*this.colorPickerSelector.clientWidth+"px",this.colorPickerSelector.style.top=s-.5*this.colorPickerSelector.clientHeight+"px",this._updatePicker(e)}},{key:"_setOpacity",value:function(e){this.color.a=e/100,this._updatePicker(this.color)}},{key:"_setBrightness",value:function(e){var t=Ms(this.color.r,this.color.g,this.color.b);t.v=e/100;var n=Is(t.h,t.s,t.v);n.a=this.color.a,this.color=n,this._updatePicker()}},{key:"_updatePicker",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.color,t=Ms(e.r,e.g,e.b),n=this.colorPickerCanvas.getContext("2d");void 0===this.pixelRation&&(this.pixelRatio=(window.devicePixelRatio||1)/(n.webkitBackingStorePixelRatio||n.mozBackingStorePixelRatio||n.msBackingStorePixelRatio||n.oBackingStorePixelRatio||n.backingStorePixelRatio||1)),n.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);var i=this.colorPickerCanvas.clientWidth,r=this.colorPickerCanvas.clientHeight;n.clearRect(0,0,i,r),n.putImageData(this.hueCircle,0,0),n.fillStyle="rgba(0,0,0,"+(1-t.v)+")",n.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r),_E(n).call(n),this.brightnessRange.value=100*t.v,this.opacityRange.value=100*e.a,this.initialColorDiv.style.backgroundColor="rgba("+this.initialColor.r+","+this.initialColor.g+","+this.initialColor.b+","+this.initialColor.a+")",this.newColorDiv.style.backgroundColor="rgba("+this.color.r+","+this.color.g+","+this.color.b+","+this.color.a+")"}},{key:"_setSize",value:function(){this.colorPickerCanvas.style.width="100%",this.colorPickerCanvas.style.height="100%",this.colorPickerCanvas.width=289*this.pixelRatio,this.colorPickerCanvas.height=289*this.pixelRatio}},{key:"_create",value:function(){var e,t,n,i;if(this.frame=document.createElement("div"),this.frame.className="vis-color-picker",this.colorPickerDiv=document.createElement("div"),this.colorPickerSelector=document.createElement("div"),this.colorPickerSelector.className="vis-selector",this.colorPickerDiv.appendChild(this.colorPickerSelector),this.colorPickerCanvas=document.createElement("canvas"),this.colorPickerDiv.appendChild(this.colorPickerCanvas),this.colorPickerCanvas.getContext){var r=this.colorPickerCanvas.getContext("2d");this.pixelRatio=(window.devicePixelRatio||1)/(r.webkitBackingStorePixelRatio||r.mozBackingStorePixelRatio||r.msBackingStorePixelRatio||r.oBackingStorePixelRatio||r.backingStorePixelRatio||1),this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0)}else{var o=document.createElement("DIV");o.style.color="red",o.style.fontWeight="bold",o.style.padding="10px",o.innerHTML="Error: your browser does not support HTML canvas",this.colorPickerCanvas.appendChild(o)}this.colorPickerDiv.className="vis-color",this.opacityDiv=document.createElement("div"),this.opacityDiv.className="vis-opacity",this.brightnessDiv=document.createElement("div"),this.brightnessDiv.className="vis-brightness",this.arrowDiv=document.createElement("div"),this.arrowDiv.className="vis-arrow",this.opacityRange=document.createElement("input");try{this.opacityRange.type="range",this.opacityRange.min="0",this.opacityRange.max="100"}catch(e){}this.opacityRange.value="100",this.opacityRange.className="vis-range",this.brightnessRange=document.createElement("input");try{this.brightnessRange.type="range",this.brightnessRange.min="0",this.brightnessRange.max="100"}catch(e){}this.brightnessRange.value="100",this.brightnessRange.className="vis-range",this.opacityDiv.appendChild(this.opacityRange),this.brightnessDiv.appendChild(this.brightnessRange);var s=this;this.opacityRange.onchange=function(){s._setOpacity(this.value)},this.opacityRange.oninput=function(){s._setOpacity(this.value)},this.brightnessRange.onchange=function(){s._setBrightness(this.value)},this.brightnessRange.oninput=function(){s._setBrightness(this.value)},this.brightnessLabel=document.createElement("div"),this.brightnessLabel.className="vis-label vis-brightness",this.brightnessLabel.innerHTML="brightness:",this.opacityLabel=document.createElement("div"),this.opacityLabel.className="vis-label vis-opacity",this.opacityLabel.innerHTML="opacity:",this.newColorDiv=document.createElement("div"),this.newColorDiv.className="vis-new-color",this.newColorDiv.innerHTML="new",this.initialColorDiv=document.createElement("div"),this.initialColorDiv.className="vis-initial-color",this.initialColorDiv.innerHTML="initial",this.cancelButton=document.createElement("div"),this.cancelButton.className="vis-button vis-cancel",this.cancelButton.innerHTML="cancel",this.cancelButton.onclick=K(e=this._hide).call(e,this,!1),this.applyButton=document.createElement("div"),this.applyButton.className="vis-button vis-apply",this.applyButton.innerHTML="apply",this.applyButton.onclick=K(t=this._apply).call(t,this),this.saveButton=document.createElement("div"),this.saveButton.className="vis-button vis-save",this.saveButton.innerHTML="save",this.saveButton.onclick=K(n=this._save).call(n,this),this.loadButton=document.createElement("div"),this.loadButton.className="vis-button vis-load",this.loadButton.innerHTML="load last",this.loadButton.onclick=K(i=this._loadLast).call(i,this),this.frame.appendChild(this.colorPickerDiv),this.frame.appendChild(this.arrowDiv),this.frame.appendChild(this.brightnessLabel),this.frame.appendChild(this.brightnessDiv),this.frame.appendChild(this.opacityLabel),this.frame.appendChild(this.opacityDiv),this.frame.appendChild(this.newColorDiv),this.frame.appendChild(this.initialColorDiv),this.frame.appendChild(this.cancelButton),this.frame.appendChild(this.applyButton),this.frame.appendChild(this.saveButton),this.frame.appendChild(this.loadButton)}},{key:"_bindHammer",value:function(){var e=this;this.drag={},this.pinch={},this.hammer=new ah(this.colorPickerCanvas),this.hammer.get("pinch").set({enable:!0}),sM.onTouch(this.hammer,(function(t){e._moveSelector(t)})),this.hammer.on("tap",(function(t){e._moveSelector(t)})),this.hammer.on("panstart",(function(t){e._moveSelector(t)})),this.hammer.on("panmove",(function(t){e._moveSelector(t)})),this.hammer.on("panend",(function(t){e._moveSelector(t)}))}},{key:"_generateHueCircle",value:function(){if(!1===this.generated){var e=this.colorPickerCanvas.getContext("2d");void 0===this.pixelRation&&(this.pixelRatio=(window.devicePixelRatio||1)/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)),e.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);var t,n,i,r,o=this.colorPickerCanvas.clientWidth,s=this.colorPickerCanvas.clientHeight;e.clearRect(0,0,o,s),this.centerCoordinates={x:.5*o,y:.5*s},this.r=.49*o;var a,l=2*Math.PI/360,u=1/this.r;for(i=0;i<360;i++)for(r=0;r<this.r;r++)t=this.centerCoordinates.x+r*Math.sin(l*i),n=this.centerCoordinates.y+r*Math.cos(l*i),a=Is(i*(1/360),r*u,1),e.fillStyle="rgb("+a.r+","+a.g+","+a.b+")",e.fillRect(t-.5,n-.5,2,2);e.strokeStyle="rgba(0,0,0,1)",e.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r),e.stroke(),this.hueCircle=e.getImageData(0,0,o,s)}this.generated=!0}},{key:"_moveSelector",value:function(e){var t=this.colorPickerDiv.getBoundingClientRect(),n=e.center.x-t.left,i=e.center.y-t.top,r=.5*this.colorPickerDiv.clientHeight,o=.5*this.colorPickerDiv.clientWidth,s=n-o,a=i-r,l=Math.atan2(s,a),u=.98*Math.min(Math.sqrt(s*s+a*a),o),c=Math.cos(l)*u+r,d=Math.sin(l)*u+o;this.colorPickerSelector.style.top=c-.5*this.colorPickerSelector.clientHeight+"px",this.colorPickerSelector.style.left=d-.5*this.colorPickerSelector.clientWidth+"px";var h=l/(2*Math.PI);h=h<0?h+1:h;var f=u/this.r,p=Ms(this.color.r,this.color.g,this.color.b);p.h=h,p.s=f;var v=Is(p.h,p.s,p.v);v.a=this.color.a,this.color=v,this.initialColorDiv.style.backgroundColor="rgba("+this.initialColor.r+","+this.initialColor.g+","+this.initialColor.b+","+this.initialColor.a+")",this.newColorDiv.style.backgroundColor="rgba("+this.color.r+","+this.color.g+","+this.color.b+","+this.color.a+")"}}]),e}(),gD=function(){function e(t,n,i){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;hh(this,e),this.parent=t,this.changedOptions=[],this.container=n,this.allowCreation=!1,this.options={},this.initialized=!1,this.popupCounter=0,this.defaultOptions={enabled:!1,filter:!0,container:void 0,showButton:!0},es(this.options,this.defaultOptions),this.configureOptions=i,this.moduleOptions={},this.domElements=[],this.popupDiv={},this.popupLimit=5,this.popupHistory={},this.colorPicker=new yD(r),this.wrapper=void 0}return yh(e,[{key:"setOptions",value:function(e){if(void 0!==e){this.popupHistory={},this._removePopup();var t=!0;if("string"==typeof e)this.options.filter=e;else if(e instanceof Array)this.options.filter=e.join();else if("object"===BO(e)){if(null==e)throw new TypeError("options cannot be null");void 0!==e.container&&(this.options.container=e.container),void 0!==CS(e)&&(this.options.filter=CS(e)),void 0!==e.showButton&&(this.options.showButton=e.showButton),void 0!==e.enabled&&(t=e.enabled)}else"boolean"==typeof e?(this.options.filter=!0,t=e):"function"==typeof e&&(this.options.filter=e,t=!0);!1===CS(this.options)&&(t=!1),this.options.enabled=t}this._clean()}},{key:"setModuleOptions",value:function(e){this.moduleOptions=e,!0===this.options.enabled&&(this._clean(),void 0!==this.options.container&&(this.container=this.options.container),this._create())}},{key:"_create",value:function(){this._clean(),this.changedOptions=[];var e=CS(this.options),t=0,n=!1;for(var i in this.configureOptions)this.configureOptions.hasOwnProperty(i)&&(this.allowCreation=!1,n=!1,"function"==typeof e?n=(n=e(i,[]))||this._handleObject(this.configureOptions[i],[i],!0):!0!==e&&-1===Cu(e).call(e,i)||(n=!0),!1!==n&&(this.allowCreation=!0,t>0&&this._makeItem([]),this._makeHeader(i),this._handleObject(this.configureOptions[i],[i])),t++);this._makeButton(),this._push()}},{key:"_push",value:function(){this.wrapper=document.createElement("div"),this.wrapper.className="vis-configuration-wrapper",this.container.appendChild(this.wrapper);for(var e=0;e<this.domElements.length;e++)this.wrapper.appendChild(this.domElements[e]);this._showPopupIfNeeded()}},{key:"_clean",value:function(){for(var e=0;e<this.domElements.length;e++)this.wrapper.removeChild(this.domElements[e]);void 0!==this.wrapper&&(this.container.removeChild(this.wrapper),this.wrapper=void 0),this.domElements=[],this._removePopup()}},{key:"_getValue",value:function(e){for(var t=this.moduleOptions,n=0;n<e.length;n++){if(void 0===t[e[n]]){t=void 0;break}t=t[e[n]]}return t}},{key:"_makeItem",value:function(e){if(!0===this.allowCreation){var t=document.createElement("div");t.className="vis-configuration vis-config-item vis-config-s"+e.length;for(var n=arguments.length,i=new Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r];return ql(i).call(i,(function(e){t.appendChild(e)})),this.domElements.push(t),this.domElements.length}return 0}},{key:"_makeHeader",value:function(e){var t=document.createElement("div");t.className="vis-configuration vis-config-header",t.innerHTML=e,this._makeItem([],t)}},{key:"_makeLabel",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=document.createElement("div");return i.className="vis-configuration vis-config-label vis-config-s"+t.length,i.innerHTML=!0===n?"<i><b>"+e+":</b></i>":e+":",i}},{key:"_makeDropdown",value:function(e,t,n){var i=document.createElement("select");i.className="vis-configuration vis-config-select";var r=0;void 0!==t&&-1!==Cu(e).call(e,t)&&(r=Cu(e).call(e,t));for(var o=0;o<e.length;o++){var s=document.createElement("option");s.value=e[o],o===r&&(s.selected="selected"),s.innerHTML=e[o],i.appendChild(s)}var a=this;i.onchange=function(){a._update(this.value,n)};var l=this._makeLabel(n[n.length-1],n);this._makeItem(n,l,i)}},{key:"_makeRange",value:function(e,t,n){var i=e[0],r=e[1],o=e[2],s=e[3],a=document.createElement("input");a.className="vis-configuration vis-config-range";try{a.type="range",a.min=r,a.max=o}catch(e){}a.step=s;var l="",u=0;void 0!==t?(t<0&&1.2*t<r?(a.min=Math.ceil(1.2*t),u=a.min,l="range increased"):t/1.2<r&&(a.min=Math.ceil(t/1.2),u=a.min,l="range increased"),1.2*t>o&&1!==o&&(a.max=Math.ceil(1.2*t),u=a.max,l="range increased"),a.value=t):a.value=i;var c=document.createElement("input");c.className="vis-configuration vis-config-rangeinput",c.value=a.value;var d=this;a.onchange=function(){c.value=this.value,d._update(Number(this.value),n)},a.oninput=function(){c.value=this.value};var h=this._makeLabel(n[n.length-1],n),f=this._makeItem(n,h,a,c);""!==l&&this.popupHistory[f]!==u&&(this.popupHistory[f]=u,this._setupPopup(l,f))}},{key:"_makeButton",value:function(){var e=this;if(!0===this.options.showButton){var t=document.createElement("div");t.className="vis-configuration vis-config-button",t.innerHTML="generate options",t.onclick=function(){e._printOptions()},t.onmouseover=function(){t.className="vis-configuration vis-config-button hover"},t.onmouseout=function(){t.className="vis-configuration vis-config-button"},this.optionsContainer=document.createElement("div"),this.optionsContainer.className="vis-configuration vis-config-option-container",this.domElements.push(this.optionsContainer),this.domElements.push(t)}}},{key:"_setupPopup",value:function(e,t){var n=this;if(!0===this.initialized&&!0===this.allowCreation&&this.popupCounter<this.popupLimit){var i=document.createElement("div");i.id="vis-configuration-popup",i.className="vis-configuration-popup",i.innerHTML=e,i.onclick=function(){n._removePopup()},this.popupCounter+=1,this.popupDiv={html:i,index:t}}}},{key:"_removePopup",value:function(){void 0!==this.popupDiv.html&&(this.popupDiv.html.parentNode.removeChild(this.popupDiv.html),clearTimeout(this.popupDiv.hideTimeout),clearTimeout(this.popupDiv.deleteTimeout),this.popupDiv={})}},{key:"_showPopupIfNeeded",value:function(){var e=this;if(void 0!==this.popupDiv.html){var t=this.domElements[this.popupDiv.index].getBoundingClientRect();this.popupDiv.html.style.left=t.left+"px",this.popupDiv.html.style.top=t.top-30+"px",document.body.appendChild(this.popupDiv.html),this.popupDiv.hideTimeout=xh((function(){e.popupDiv.html.style.opacity=0}),1500),this.popupDiv.deleteTimeout=xh((function(){e._removePopup()}),1800)}}},{key:"_makeCheckbox",value:function(e,t,n){var i=document.createElement("input");i.type="checkbox",i.className="vis-configuration vis-config-checkbox",i.checked=e,void 0!==t&&(i.checked=t,t!==e&&("object"===BO(e)?t!==e.enabled&&this.changedOptions.push({path:n,value:t}):this.changedOptions.push({path:n,value:t})));var r=this;i.onchange=function(){r._update(this.checked,n)};var o=this._makeLabel(n[n.length-1],n);this._makeItem(n,o,i)}},{key:"_makeTextInput",value:function(e,t,n){var i=document.createElement("input");i.type="text",i.className="vis-configuration vis-config-text",i.value=t,t!==e&&this.changedOptions.push({path:n,value:t});var r=this;i.onchange=function(){r._update(this.value,n)};var o=this._makeLabel(n[n.length-1],n);this._makeItem(n,o,i)}},{key:"_makeColorField",value:function(e,t,n){var i=this,r=e[1],o=document.createElement("div");"none"!==(t=void 0===t?r:t)?(o.className="vis-configuration vis-config-colorBlock",o.style.backgroundColor=t):o.className="vis-configuration vis-config-colorBlock none",t=void 0===t?r:t,o.onclick=function(){i._showColorPicker(t,o,n)};var s=this._makeLabel(n[n.length-1],n);this._makeItem(n,s,o)}},{key:"_showColorPicker",value:function(e,t,n){var i=this;t.onclick=function(){},this.colorPicker.insertTo(t),this.colorPicker.show(),this.colorPicker.setColor(e),this.colorPicker.setUpdateCallback((function(e){var r="rgba("+e.r+","+e.g+","+e.b+","+e.a+")";t.style.backgroundColor=r,i._update(r,n)})),this.colorPicker.setCloseCallback((function(){t.onclick=function(){i._showColorPicker(e,t,n)}}))}},{key:"_handleObject",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=!1,r=CS(this.options),o=!1;for(var s in e)if(e.hasOwnProperty(s)){i=!0;var a=e[s],l=as(t,s);if("function"==typeof r&&!1===(i=r(s,t))&&!(a instanceof Array)&&"string"!=typeof a&&"boolean"!=typeof a&&a instanceof Object&&(this.allowCreation=!1,i=this._handleObject(a,l,!0),this.allowCreation=!1===n),!1!==i){o=!0;var u=this._getValue(l);if(a instanceof Array)this._handleArray(a,u,l);else if("string"==typeof a)this._makeTextInput(a,u,l);else if("boolean"==typeof a)this._makeCheckbox(a,u,l);else if(a instanceof Object){var c=!0;if(-1!==Cu(t).call(t,"physics")&&this.moduleOptions.physics.solver!==s&&"wind"!==s&&(c=!1),!0===c)if(void 0!==a.enabled){var d=as(l,"enabled"),h=this._getValue(d);if(!0===h){var f=this._makeLabel(s,l,!0);this._makeItem(l,f),o=this._handleObject(a,l)||o}else this._makeCheckbox(a,h,l)}else{var p=this._makeLabel(s,l,!0);this._makeItem(l,p),o=this._handleObject(a,l)||o}}else console.error("dont know how to handle",a,s,l)}}return o}},{key:"_handleArray",value:function(e,t,n){"string"==typeof e[0]&&"color"===e[0]?(this._makeColorField(e,t,n),e[1]!==t&&this.changedOptions.push({path:n,value:t})):"string"==typeof e[0]?(this._makeDropdown(e,t,n),e[0]!==t&&this.changedOptions.push({path:n,value:t})):"number"==typeof e[0]&&(this._makeRange(e,t,n),e[0]!==t&&this.changedOptions.push({path:n,value:Number(t)}))}},{key:"_update",value:function(e,t){var n=this._constructOptions(e,t);this.parent.body&&this.parent.body.emitter&&this.parent.body.emitter.emit&&this.parent.body.emitter.emit("configChange",n),this.initialized=!0,this.parent.setOptions(n)}},{key:"_constructOptions",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=n;e="false"!==(e="true"===e||e)&&e;for(var r=0;r<t.length;r++)"global"!==t[r]&&(void 0===i[t[r]]&&(i[t[r]]={}),r!==t.length-1?i=i[t[r]]:i[t[r]]=e);return n}},{key:"_printOptions",value:function(){var e=this.getOptions();this.optionsContainer.innerHTML="<pre>var options = "+qE(e,null,2)+"</pre>"}},{key:"getOptions",value:function(){for(var e={},t=0;t<this.changedOptions.length;t++)this._constructOptions(this.changedOptions[t].value,this.changedOptions[t].path,e);return e}}]),e}(),mD="string",bD="boolean",wD="number",_D="object",kD=["arrow","bar","box","circle","crow","curve","diamond","image","inv_curve","inv_triangle","triangle","vee"],xD={configure:{enabled:{boolean:bD},filter:{boolean:bD,string:mD,array:"array",function:"function"},container:{dom:"dom"},showButton:{boolean:bD},__type__:{object:_D,boolean:bD,string:mD,array:"array",function:"function"}},edges:{arrows:{to:{enabled:{boolean:bD},scaleFactor:{number:wD},type:{string:kD},imageHeight:{number:wD},imageWidth:{number:wD},src:{string:mD},__type__:{object:_D,boolean:bD}},middle:{enabled:{boolean:bD},scaleFactor:{number:wD},type:{string:kD},imageWidth:{number:wD},imageHeight:{number:wD},src:{string:mD},__type__:{object:_D,boolean:bD}},from:{enabled:{boolean:bD},scaleFactor:{number:wD},type:{string:kD},imageWidth:{number:wD},imageHeight:{number:wD},src:{string:mD},__type__:{object:_D,boolean:bD}},__type__:{string:["from","to","middle"],object:_D}},arrowStrikethrough:{boolean:bD},background:{enabled:{boolean:bD},color:{string:mD},size:{number:wD},dashes:{boolean:bD,array:"array"},__type__:{object:_D,boolean:bD}},chosen:{label:{boolean:bD,function:"function"},edge:{boolean:bD,function:"function"},__type__:{object:_D,boolean:bD}},color:{color:{string:mD},highlight:{string:mD},hover:{string:mD},inherit:{string:["from","to","both"],boolean:bD},opacity:{number:wD},__type__:{object:_D,string:mD}},dashes:{boolean:bD,array:"array"},font:{color:{string:mD},size:{number:wD},face:{string:mD},background:{string:mD},strokeWidth:{number:wD},strokeColor:{string:mD},align:{string:["horizontal","top","middle","bottom"]},vadjust:{number:wD},multi:{boolean:bD,string:mD},bold:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},boldital:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},ital:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},mono:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},__type__:{object:_D,string:mD}},hidden:{boolean:bD},hoverWidth:{function:"function",number:wD},label:{string:mD,undefined:"undefined"},labelHighlightBold:{boolean:bD},length:{number:wD,undefined:"undefined"},physics:{boolean:bD},scaling:{min:{number:wD},max:{number:wD},label:{enabled:{boolean:bD},min:{number:wD},max:{number:wD},maxVisible:{number:wD},drawThreshold:{number:wD},__type__:{object:_D,boolean:bD}},customScalingFunction:{function:"function"},__type__:{object:_D}},selectionWidth:{function:"function",number:wD},selfReferenceSize:{number:wD},selfReference:{size:{number:wD},angle:{number:wD},renderBehindTheNode:{boolean:bD},__type__:{object:_D}},shadow:{enabled:{boolean:bD},color:{string:mD},size:{number:wD},x:{number:wD},y:{number:wD},__type__:{object:_D,boolean:bD}},smooth:{enabled:{boolean:bD},type:{string:["dynamic","continuous","discrete","diagonalCross","straightCross","horizontal","vertical","curvedCW","curvedCCW","cubicBezier"]},roundness:{number:wD},forceDirection:{string:["horizontal","vertical","none"],boolean:bD},__type__:{object:_D,boolean:bD}},title:{string:mD,undefined:"undefined"},width:{number:wD},widthConstraint:{maximum:{number:wD},__type__:{object:_D,boolean:bD,number:wD}},value:{number:wD,undefined:"undefined"},__type__:{object:_D}},groups:{useDefaultGroups:{boolean:bD},__any__:"get from nodes, will be overwritten below",__type__:{object:_D}},interaction:{dragNodes:{boolean:bD},dragView:{boolean:bD},hideEdgesOnDrag:{boolean:bD},hideEdgesOnZoom:{boolean:bD},hideNodesOnDrag:{boolean:bD},hover:{boolean:bD},keyboard:{enabled:{boolean:bD},speed:{x:{number:wD},y:{number:wD},zoom:{number:wD},__type__:{object:_D}},bindToWindow:{boolean:bD},__type__:{object:_D,boolean:bD}},multiselect:{boolean:bD},navigationButtons:{boolean:bD},selectable:{boolean:bD},selectConnectedEdges:{boolean:bD},hoverConnectedEdges:{boolean:bD},tooltipDelay:{number:wD},zoomView:{boolean:bD},zoomSpeed:{number:wD},__type__:{object:_D}},layout:{randomSeed:{undefined:"undefined",number:wD},improvedLayout:{boolean:bD},clusterThreshold:{number:wD},hierarchical:{enabled:{boolean:bD},levelSeparation:{number:wD},nodeSpacing:{number:wD},treeSpacing:{number:wD},blockShifting:{boolean:bD},edgeMinimization:{boolean:bD},parentCentralization:{boolean:bD},direction:{string:["UD","DU","LR","RL"]},sortMethod:{string:["hubsize","directed"]},shakeTowards:{string:["leaves","roots"]},__type__:{object:_D,boolean:bD}},__type__:{object:_D}},manipulation:{enabled:{boolean:bD},initiallyActive:{boolean:bD},addNode:{boolean:bD,function:"function"},addEdge:{boolean:bD,function:"function"},editNode:{function:"function"},editEdge:{editWithoutDrag:{function:"function"},__type__:{object:_D,boolean:bD,function:"function"}},deleteNode:{boolean:bD,function:"function"},deleteEdge:{boolean:bD,function:"function"},controlNodeStyle:"get from nodes, will be overwritten below",__type__:{object:_D,boolean:bD}},nodes:{borderWidth:{number:wD},borderWidthSelected:{number:wD,undefined:"undefined"},brokenImage:{string:mD,undefined:"undefined"},chosen:{label:{boolean:bD,function:"function"},node:{boolean:bD,function:"function"},__type__:{object:_D,boolean:bD}},color:{border:{string:mD},background:{string:mD},highlight:{border:{string:mD},background:{string:mD},__type__:{object:_D,string:mD}},hover:{border:{string:mD},background:{string:mD},__type__:{object:_D,string:mD}},__type__:{object:_D,string:mD}},fixed:{x:{boolean:bD},y:{boolean:bD},__type__:{object:_D,boolean:bD}},font:{align:{string:mD},color:{string:mD},size:{number:wD},face:{string:mD},background:{string:mD},strokeWidth:{number:wD},strokeColor:{string:mD},vadjust:{number:wD},multi:{boolean:bD,string:mD},bold:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},boldital:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},ital:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},mono:{color:{string:mD},size:{number:wD},face:{string:mD},mod:{string:mD},vadjust:{number:wD},__type__:{object:_D,string:mD}},__type__:{object:_D,string:mD}},group:{string:mD,number:wD,undefined:"undefined"},heightConstraint:{minimum:{number:wD},valign:{string:mD},__type__:{object:_D,boolean:bD,number:wD}},hidden:{boolean:bD},icon:{face:{string:mD},code:{string:mD},size:{number:wD},color:{string:mD},weight:{string:mD,number:wD},__type__:{object:_D}},id:{string:mD,number:wD},image:{selected:{string:mD,undefined:"undefined"},unselected:{string:mD,undefined:"undefined"},__type__:{object:_D,string:mD}},imagePadding:{top:{number:wD},right:{number:wD},bottom:{number:wD},left:{number:wD},__type__:{object:_D,number:wD}},label:{string:mD,undefined:"undefined"},labelHighlightBold:{boolean:bD},level:{number:wD,undefined:"undefined"},margin:{top:{number:wD},right:{number:wD},bottom:{number:wD},left:{number:wD},__type__:{object:_D,number:wD}},mass:{number:wD},physics:{boolean:bD},scaling:{min:{number:wD},max:{number:wD},label:{enabled:{boolean:bD},min:{number:wD},max:{number:wD},maxVisible:{number:wD},drawThreshold:{number:wD},__type__:{object:_D,boolean:bD}},customScalingFunction:{function:"function"},__type__:{object:_D}},shadow:{enabled:{boolean:bD},color:{string:mD},size:{number:wD},x:{number:wD},y:{number:wD},__type__:{object:_D,boolean:bD}},shape:{string:["ellipse","circle","database","box","text","image","circularImage","diamond","dot","star","triangle","triangleDown","square","icon","hexagon"]},shapeProperties:{borderDashes:{boolean:bD,array:"array"},borderRadius:{number:wD},interpolation:{boolean:bD},useImageSize:{boolean:bD},useBorderWithImage:{boolean:bD},__type__:{object:_D}},size:{number:wD},title:{string:mD,dom:"dom",undefined:"undefined"},value:{number:wD,undefined:"undefined"},widthConstraint:{minimum:{number:wD},maximum:{number:wD},__type__:{object:_D,boolean:bD,number:wD}},x:{number:wD},y:{number:wD},__type__:{object:_D}},physics:{enabled:{boolean:bD},barnesHut:{theta:{number:wD},gravitationalConstant:{number:wD},centralGravity:{number:wD},springLength:{number:wD},springConstant:{number:wD},damping:{number:wD},avoidOverlap:{number:wD},__type__:{object:_D}},forceAtlas2Based:{theta:{number:wD},gravitationalConstant:{number:wD},centralGravity:{number:wD},springLength:{number:wD},springConstant:{number:wD},damping:{number:wD},avoidOverlap:{number:wD},__type__:{object:_D}},repulsion:{centralGravity:{number:wD},springLength:{number:wD},springConstant:{number:wD},nodeDistance:{number:wD},damping:{number:wD},__type__:{object:_D}},hierarchicalRepulsion:{centralGravity:{number:wD},springLength:{number:wD},springConstant:{number:wD},nodeDistance:{number:wD},damping:{number:wD},avoidOverlap:{number:wD},__type__:{object:_D}},maxVelocity:{number:wD},minVelocity:{number:wD},solver:{string:["barnesHut","repulsion","hierarchicalRepulsion","forceAtlas2Based"]},stabilization:{enabled:{boolean:bD},iterations:{number:wD},updateInterval:{number:wD},onlyDynamicEdges:{boolean:bD},fit:{boolean:bD},__type__:{object:_D,boolean:bD}},timestep:{number:wD},adaptiveTimestep:{boolean:bD},wind:{x:{number:wD},y:{number:wD},__type__:{object:_D}},__type__:{object:_D,boolean:bD}},autoResize:{boolean:bD},clickToUse:{boolean:bD},locale:{string:mD},locales:{__any__:{any:"any"},__type__:{object:_D}},height:{string:mD},width:{string:mD},__type__:{object:_D}};xD.groups.__any__=xD.nodes,xD.manipulation.controlNodeStyle=xD.nodes;var SD={nodes:{borderWidth:[1,0,10,1],borderWidthSelected:[2,0,10,1],color:{border:["color","#2B7CE9"],background:["color","#97C2FC"],highlight:{border:["color","#2B7CE9"],background:["color","#D2E5FF"]},hover:{border:["color","#2B7CE9"],background:["color","#D2E5FF"]}},fixed:{x:!1,y:!1},font:{color:["color","#343434"],size:[14,0,100,1],face:["arial","verdana","tahoma"],background:["color","none"],strokeWidth:[0,0,50,1],strokeColor:["color","#ffffff"]},hidden:!1,labelHighlightBold:!0,physics:!0,scaling:{min:[10,0,200,1],max:[30,0,200,1],label:{enabled:!1,min:[14,0,200,1],max:[30,0,200,1],maxVisible:[30,0,200,1],drawThreshold:[5,0,20,1]}},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:[10,0,20,1],x:[5,-30,30,1],y:[5,-30,30,1]},shape:["ellipse","box","circle","database","diamond","dot","square","star","text","triangle","triangleDown","hexagon"],shapeProperties:{borderDashes:!1,borderRadius:[6,0,20,1],interpolation:!0,useImageSize:!1},size:[25,0,200,1]},edges:{arrows:{to:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"},middle:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"},from:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"}},arrowStrikethrough:!0,color:{color:["color","#848484"],highlight:["color","#848484"],hover:["color","#848484"],inherit:["from","to","both",!0,!1],opacity:[1,0,1,.05]},dashes:!1,font:{color:["color","#343434"],size:[14,0,100,1],face:["arial","verdana","tahoma"],background:["color","none"],strokeWidth:[2,0,50,1],strokeColor:["color","#ffffff"],align:["horizontal","top","middle","bottom"]},hidden:!1,hoverWidth:[1.5,0,5,.1],labelHighlightBold:!0,physics:!0,scaling:{min:[1,0,100,1],max:[15,0,100,1],label:{enabled:!0,min:[14,0,200,1],max:[30,0,200,1],maxVisible:[30,0,200,1],drawThreshold:[5,0,20,1]}},selectionWidth:[1.5,0,5,.1],selfReferenceSize:[20,0,200,1],selfReference:{size:[20,0,200,1],angle:[Math.PI/2,-6*Math.PI,6*Math.PI,Math.PI/8],renderBehindTheNode:!0},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:[10,0,20,1],x:[5,-30,30,1],y:[5,-30,30,1]},smooth:{enabled:!0,type:["dynamic","continuous","discrete","diagonalCross","straightCross","horizontal","vertical","curvedCW","curvedCCW","cubicBezier"],forceDirection:["horizontal","vertical","none"],roundness:[.5,0,1,.05]},width:[1,0,30,1]},layout:{hierarchical:{enabled:!1,levelSeparation:[150,20,500,5],nodeSpacing:[100,20,500,5],treeSpacing:[200,20,500,5],blockShifting:!0,edgeMinimization:!0,parentCentralization:!0,direction:["UD","DU","LR","RL"],sortMethod:["hubsize","directed"],shakeTowards:["leaves","roots"]}},interaction:{dragNodes:!0,dragView:!0,hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1,hover:!1,keyboard:{enabled:!1,speed:{x:[10,0,40,1],y:[10,0,40,1],zoom:[.02,0,.1,.005]},bindToWindow:!0},multiselect:!1,navigationButtons:!1,selectable:!0,selectConnectedEdges:!0,hoverConnectedEdges:!0,tooltipDelay:[300,0,1e3,25],zoomView:!0,zoomSpeed:[1,.1,2,.1]},manipulation:{enabled:!1,initiallyActive:!1},physics:{enabled:!0,barnesHut:{theta:[.5,.1,1,.05],gravitationalConstant:[-2e3,-3e4,0,50],centralGravity:[.3,0,10,.05],springLength:[95,0,500,5],springConstant:[.04,0,1.2,.005],damping:[.09,0,1,.01],avoidOverlap:[0,0,1,.01]},forceAtlas2Based:{theta:[.5,.1,1,.05],gravitationalConstant:[-50,-500,0,1],centralGravity:[.01,0,1,.005],springLength:[95,0,500,5],springConstant:[.08,0,1.2,.005],damping:[.4,0,1,.01],avoidOverlap:[0,0,1,.01]},repulsion:{centralGravity:[.2,0,10,.05],springLength:[200,0,500,5],springConstant:[.05,0,1.2,.005],nodeDistance:[100,0,500,5],damping:[.09,0,1,.01]},hierarchicalRepulsion:{centralGravity:[.2,0,10,.05],springLength:[100,0,500,5],springConstant:[.01,0,1.2,.005],nodeDistance:[120,0,500,5],damping:[.09,0,1,.01],avoidOverlap:[0,0,1,.01]},maxVelocity:[50,0,150,1],minVelocity:[.1,.01,.5,.01],solver:["barnesHut","forceAtlas2Based","repulsion","hierarchicalRepulsion"],timestep:[.5,.01,1,.01],wind:{x:[0,-10,10,.1],y:[0,-10,10,.1]}}},OD=Object.freeze({__proto__:null,allOptions:xD,configureOptions:SD}),ED=function(){function e(){hh(this,e)}return yh(e,[{key:"getDistances",value:function(e,t,n){for(var i={},r=e.edges,o=0;o<t.length;o++){var s={};i[t[o]]=s;for(var a=0;a<t.length;a++)s[t[a]]=o==a?0:1e9}for(var l=0;l<n.length;l++){var u=r[n[l]];!0===u.connected&&void 0!==i[u.fromId]&&void 0!==i[u.toId]&&(i[u.fromId][u.toId]=1,i[u.toId][u.fromId]=1)}for(var c=t.length,d=0;d<c;d++)for(var h=t[d],f=i[h],p=0;p<c-1;p++)for(var v=t[p],y=i[v],g=p+1;g<c;g++){var m=t[g],b=i[m],w=Math.min(y[m],y[h]+f[m]);y[m]=w,b[v]=w}return i}}]),e}(),TD=function(){function e(t,n,i){hh(this,e),this.body=t,this.springLength=n,this.springConstant=i,this.distanceSolver=new ED}return yh(e,[{key:"setOptions",value:function(e){e&&(e.springLength&&(this.springLength=e.springLength),e.springConstant&&(this.springConstant=e.springConstant))}},{key:"solve",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=this.distanceSolver.getDistances(this.body,e,t);this._createL_matrix(i),this._createK_matrix(i),this._createE_matrix();for(var r=.01,o=1,s=0,a=Math.max(1e3,Math.min(10*this.body.nodeIndices.length,6e3)),l=5,u=1e9,c=0,d=0,h=0,f=0,p=0;u>r&&s<a;){s+=1;var v=this._getHighestEnergyNode(n),y=IO(v,4);for(c=y[0],u=y[1],d=y[2],h=y[3],f=u,p=0;f>o&&p<l;){p+=1,this._moveNode(c,d,h);var g=this._getEnergy(c),m=IO(g,3);f=m[0],d=m[1],h=m[2]}}}},{key:"_getHighestEnergyNode",value:function(e){for(var t=this.body.nodeIndices,n=this.body.nodes,i=0,r=t[0],o=0,s=0,a=0;a<t.length;a++){var l=t[a];if(!1===n[l].predefinedPosition||!0===n[l].isCluster&&!0===e||!0===n[l].options.fixed.x||!0===n[l].options.fixed.y){var u=this._getEnergy(l),c=IO(u,3),d=c[0],h=c[1],f=c[2];i<d&&(i=d,r=l,o=h,s=f)}}return[r,i,o,s]}},{key:"_getEnergy",value:function(e){var t=IO(this.E_sums[e],2),n=t[0],i=t[1];return[Math.sqrt(Math.pow(n,2)+Math.pow(i,2)),n,i]}},{key:"_moveNode",value:function(e,t,n){for(var i=this.body.nodeIndices,r=this.body.nodes,o=0,s=0,a=0,l=r[e].x,u=r[e].y,c=this.K_matrix[e],d=this.L_matrix[e],h=0;h<i.length;h++){var f=i[h];if(f!==e){var p=r[f].x,v=r[f].y,y=c[f],g=d[f],m=1/Math.pow(Math.pow(l-p,2)+Math.pow(u-v,2),1.5);o+=y*(1-g*Math.pow(u-v,2)*m),s+=y*(g*(l-p)*(u-v)*m),a+=y*(1-g*Math.pow(l-p,2)*m)}}var b=(t/o+n/s)/(s/o-a/s),w=-(s*b+t)/o;r[e].x+=w,r[e].y+=b,this._updateE_matrix(e)}},{key:"_createL_matrix",value:function(e){var t=this.body.nodeIndices,n=this.springLength;this.L_matrix=[];for(var i=0;i<t.length;i++){this.L_matrix[t[i]]={};for(var r=0;r<t.length;r++)this.L_matrix[t[i]][t[r]]=n*e[t[i]][t[r]]}}},{key:"_createK_matrix",value:function(e){var t=this.body.nodeIndices,n=this.springConstant;this.K_matrix=[];for(var i=0;i<t.length;i++){this.K_matrix[t[i]]={};for(var r=0;r<t.length;r++)this.K_matrix[t[i]][t[r]]=n*Math.pow(e[t[i]][t[r]],-2)}}},{key:"_createE_matrix",value:function(){var e=this.body.nodeIndices,t=this.body.nodes;this.E_matrix={},this.E_sums={};for(var n=0;n<e.length;n++)this.E_matrix[e[n]]=[];for(var i=0;i<e.length;i++){for(var r=e[i],o=t[r].x,s=t[r].y,a=0,l=0,u=i;u<e.length;u++){var c=e[u];if(c!==r){var d=t[c].x,h=t[c].y,f=1/Math.sqrt(Math.pow(o-d,2)+Math.pow(s-h,2));this.E_matrix[r][u]=[this.K_matrix[r][c]*(o-d-this.L_matrix[r][c]*(o-d)*f),this.K_matrix[r][c]*(s-h-this.L_matrix[r][c]*(s-h)*f)],this.E_matrix[c][i]=this.E_matrix[r][u],a+=this.E_matrix[r][u][0],l+=this.E_matrix[r][u][1]}}this.E_sums[r]=[a,l]}}},{key:"_updateE_matrix",value:function(e){for(var t=this.body.nodeIndices,n=this.body.nodes,i=this.E_matrix[e],r=this.K_matrix[e],o=this.L_matrix[e],s=n[e].x,a=n[e].y,l=0,u=0,c=0;c<t.length;c++){var d=t[c];if(d!==e){var h=i[c],f=h[0],p=h[1],v=n[d].x,y=n[d].y,g=1/Math.sqrt(Math.pow(s-v,2)+Math.pow(a-y,2)),m=r[d]*(s-v-o[d]*(s-v)*g),b=r[d]*(a-y-o[d]*(a-y)*g);i[c]=[m,b],l+=m,u+=b;var w=this.E_sums[d];w[0]+=m-f,w[1]+=b-p}}this.E_sums[e]=[l,u]}}]),e}();function MD(e,t,n){var i,r,o,s,a=this;if(!(this instanceof MD))throw new SyntaxError("Constructor must be called with the new operator");this.options={},this.defaultOptions={locale:"en",locales:dh,clickToUse:!1},es(this.options,this.defaultOptions),this.body={container:e,nodes:{},nodeIndices:[],edges:{},edgeIndices:[],emitter:{on:K(i=this.on).call(i,this),off:K(r=this.off).call(r,this),emit:K(o=this.emit).call(o,this),once:K(s=this.once).call(s,this)},eventListeners:{onTap:function(){},onTouch:function(){},onDoubleTap:function(){},onHold:function(){},onDragStart:function(){},onDrag:function(){},onDragEnd:function(){},onMouseWheel:function(){},onPinch:function(){},onMouseMove:function(){},onRelease:function(){},onContext:function(){}},data:{nodes:null,edges:null},functions:{createNode:function(){},createEdge:function(){},getPointer:function(){}},modules:{},view:{scale:1,translation:{x:0,y:0}}},this.bindEventListeners(),this.images=new mh((function(){return a.body.emitter.emit("_requestRedraw")})),this.groups=new bh,this.canvas=new aM(this.body),this.selectionHandler=new vM(this.body,this.canvas),this.interactionHandler=new pM(this.body,this.canvas,this.selectionHandler),this.view=new dM(this.body,this.canvas),this.renderer=new rM(this.body,this.canvas),this.physics=new VT(this.body),this.layoutEngine=new fD(this.body),this.clustering=new iM(this.body),this.manipulation=new pD(this.body,this.canvas,this.selectionHandler,this.interactionHandler),this.nodesHandler=new JE(this.body,this.images,this.groups,this.layoutEngine),this.edgesHandler=new IT(this.body,this.images,this.groups),this.body.modules.kamadaKawai=new TD(this.body,150,.05),this.body.modules.clustering=this.clustering,this.canvas._create(),this.setOptions(n),this.setData(t)}oe(MD.prototype),MD.prototype.setOptions=function(e){var t=this;if(null===e&&(e=void 0),void 0!==e){if(!0===QE.validate(e,xD)&&console.log("%cErrors have been found in the supplied options object.",ZE),ns(["locale","locales","clickToUse"],this.options,e),e=this.layoutEngine.setOptions(e.layout,e),this.canvas.setOptions(e),this.groups.setOptions(e.groups),this.nodesHandler.setOptions(e.nodes),this.edgesHandler.setOptions(e.edges),this.physics.setOptions(e.physics),this.manipulation.setOptions(e.manipulation,e,this.options),this.interactionHandler.setOptions(e.interaction),this.renderer.setOptions(e.interaction),this.selectionHandler.setOptions(e.interaction),void 0!==e.groups&&this.body.emitter.emit("refreshNodes"),"configure"in e&&(this.configurator||(this.configurator=new gD(this,this.body.container,SD,this.canvas.pixelRatio)),this.configurator.setOptions(e.configure)),this.configurator&&!0===this.configurator.options.enabled){var n={nodes:{},edges:{},layout:{},interaction:{},manipulation:{},physics:{},global:{}};rs(n.nodes,this.nodesHandler.options),rs(n.edges,this.edgesHandler.options),rs(n.layout,this.layoutEngine.options),rs(n.interaction,this.selectionHandler.options),rs(n.interaction,this.renderer.options),rs(n.interaction,this.interactionHandler.options),rs(n.manipulation,this.manipulation.options),rs(n.physics,this.physics.options),rs(n.global,this.canvas.options),rs(n.global,this.options),this.configurator.setModuleOptions(n)}void 0!==e.clickToUse?!0===e.clickToUse?void 0===this.activator&&(this.activator=new ch(this.canvas.frame),this.activator.on("change",(function(){t.body.emitter.emit("activate")}))):(void 0!==this.activator&&(this.activator.destroy(),delete this.activator),this.body.emitter.emit("activate")):this.body.emitter.emit("activate"),this.canvas.setSize(),this.body.emitter.emit("startSimulation")}},MD.prototype._updateVisibleIndices=function(){var e=this.body.nodes,t=this.body.edges;for(var n in this.body.nodeIndices=[],this.body.edgeIndices=[],e)e.hasOwnProperty(n)&&(this.clustering._isClusteredNode(n)||!1!==e[n].options.hidden||this.body.nodeIndices.push(e[n].id));for(var i in t)if(t.hasOwnProperty(i)){var r=t[i],o=e[r.fromId],s=e[r.toId],a=void 0!==o&&void 0!==s;!this.clustering._isClusteredEdge(i)&&!1===r.options.hidden&&a&&!1===o.options.hidden&&!1===s.options.hidden&&this.body.edgeIndices.push(r.id)}},MD.prototype.bindEventListeners=function(){var e=this;this.body.emitter.on("_dataChanged",(function(){e.edgesHandler._updateState(),e.body.emitter.emit("_dataUpdated")})),this.body.emitter.on("_dataUpdated",(function(){e.clustering._updateState(),e._updateVisibleIndices(),e._updateValueRange(e.body.nodes),e._updateValueRange(e.body.edges),e.body.emitter.emit("startSimulation"),e.body.emitter.emit("_requestRedraw")}))},MD.prototype.setData=function(e){if(this.body.emitter.emit("resetPhysics"),this.body.emitter.emit("_resetData"),this.selectionHandler.unselectAll(),e&&e.dot&&(e.nodes||e.edges))throw new SyntaxError('Data must contain either parameter "dot" or  parameter pair "nodes" and "edges", but not both.');if(this.setOptions(e&&e.options),e&&e.dot){console.log("The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);");var t=dc.DOTToGraph(e.dot);this.setData(t)}else if(e&&e.gephi){console.log("The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);");var n=bc(e.gephi);this.setData(n)}else this.nodesHandler.setData(e&&e.nodes,!0),this.edgesHandler.setData(e&&e.edges,!0),this.body.emitter.emit("_dataChanged"),this.body.emitter.emit("_dataLoaded"),this.body.emitter.emit("initPhysics")},MD.prototype.destroy=function(){for(var e in this.body.emitter.emit("destroy"),this.body.emitter.off(),this.off(),delete this.groups,delete this.canvas,delete this.selectionHandler,delete this.interactionHandler,delete this.view,delete this.renderer,delete this.physics,delete this.layoutEngine,delete this.clustering,delete this.manipulation,delete this.nodesHandler,delete this.edgesHandler,delete this.configurator,delete this.images,this.body.nodes)this.body.nodes.hasOwnProperty(e)&&delete this.body.nodes[e];for(var t in this.body.edges)this.body.edges.hasOwnProperty(t)&&delete this.body.edges[t];$o(this.body.container)},MD.prototype._updateValueRange=function(e){var t,n=void 0,i=void 0,r=0;for(t in e)if(e.hasOwnProperty(t)){var o=e[t].getValue();void 0!==o&&(n=void 0===n?o:Math.min(o,n),i=void 0===i?o:Math.max(o,i),r+=o)}if(void 0!==n&&void 0!==i)for(t in e)e.hasOwnProperty(t)&&e[t].setValueRange(n,i,r)},MD.prototype.isActive=function(){return!this.activator||this.activator.active},MD.prototype.setSize=function(){return this.canvas.setSize.apply(this.canvas,arguments)},MD.prototype.canvasToDOM=function(){return this.canvas.canvasToDOM.apply(this.canvas,arguments)},MD.prototype.DOMtoCanvas=function(){return this.canvas.DOMtoCanvas.apply(this.canvas,arguments)},MD.prototype.findNode=function(){return this.clustering.findNode.apply(this.clustering,arguments)},MD.prototype.isCluster=function(){return this.clustering.isCluster.apply(this.clustering,arguments)},MD.prototype.openCluster=function(){return this.clustering.openCluster.apply(this.clustering,arguments)},MD.prototype.cluster=function(){return this.clustering.cluster.apply(this.clustering,arguments)},MD.prototype.getNodesInCluster=function(){return this.clustering.getNodesInCluster.apply(this.clustering,arguments)},MD.prototype.clusterByConnection=function(){return this.clustering.clusterByConnection.apply(this.clustering,arguments)},MD.prototype.clusterByHubsize=function(){return this.clustering.clusterByHubsize.apply(this.clustering,arguments)},MD.prototype.updateClusteredNode=function(){return this.clustering.updateClusteredNode.apply(this.clustering,arguments)},MD.prototype.getClusteredEdges=function(){return this.clustering.getClusteredEdges.apply(this.clustering,arguments)},MD.prototype.getBaseEdge=function(){return this.clustering.getBaseEdge.apply(this.clustering,arguments)},MD.prototype.getBaseEdges=function(){return this.clustering.getBaseEdges.apply(this.clustering,arguments)},MD.prototype.updateEdge=function(){return this.clustering.updateEdge.apply(this.clustering,arguments)},MD.prototype.clusterOutliers=function(){return this.clustering.clusterOutliers.apply(this.clustering,arguments)},MD.prototype.getSeed=function(){return this.layoutEngine.getSeed.apply(this.layoutEngine,arguments)},MD.prototype.enableEditMode=function(){return this.manipulation.enableEditMode.apply(this.manipulation,arguments)},MD.prototype.disableEditMode=function(){return this.manipulation.disableEditMode.apply(this.manipulation,arguments)},MD.prototype.addNodeMode=function(){return this.manipulation.addNodeMode.apply(this.manipulation,arguments)},MD.prototype.editNode=function(){return this.manipulation.editNode.apply(this.manipulation,arguments)},MD.prototype.editNodeMode=function(){return console.log("Deprecated: Please use editNode instead of editNodeMode."),this.manipulation.editNode.apply(this.manipulation,arguments)},MD.prototype.addEdgeMode=function(){return this.manipulation.addEdgeMode.apply(this.manipulation,arguments)},MD.prototype.editEdgeMode=function(){return this.manipulation.editEdgeMode.apply(this.manipulation,arguments)},MD.prototype.deleteSelected=function(){return this.manipulation.deleteSelected.apply(this.manipulation,arguments)},MD.prototype.getPositions=function(){return this.nodesHandler.getPositions.apply(this.nodesHandler,arguments)},MD.prototype.storePositions=function(){return this.nodesHandler.storePositions.apply(this.nodesHandler,arguments)},MD.prototype.moveNode=function(){return this.nodesHandler.moveNode.apply(this.nodesHandler,arguments)},MD.prototype.getBoundingBox=function(){return this.nodesHandler.getBoundingBox.apply(this.nodesHandler,arguments)},MD.prototype.getConnectedNodes=function(e){return void 0!==this.body.nodes[e]?this.nodesHandler.getConnectedNodes.apply(this.nodesHandler,arguments):this.edgesHandler.getConnectedNodes.apply(this.edgesHandler,arguments)},MD.prototype.getConnectedEdges=function(){return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler,arguments)},MD.prototype.startSimulation=function(){return this.physics.startSimulation.apply(this.physics,arguments)},MD.prototype.stopSimulation=function(){return this.physics.stopSimulation.apply(this.physics,arguments)},MD.prototype.stabilize=function(){return this.physics.stabilize.apply(this.physics,arguments)},MD.prototype.getSelection=function(){return this.selectionHandler.getSelection.apply(this.selectionHandler,arguments)},MD.prototype.setSelection=function(){return this.selectionHandler.setSelection.apply(this.selectionHandler,arguments)},MD.prototype.getSelectedNodes=function(){return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler,arguments)},MD.prototype.getSelectedEdges=function(){return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler,arguments)},MD.prototype.getNodeAt=function(){var e=this.selectionHandler.getNodeAt.apply(this.selectionHandler,arguments);return void 0!==e&&void 0!==e.id?e.id:e},MD.prototype.getEdgeAt=function(){var e=this.selectionHandler.getEdgeAt.apply(this.selectionHandler,arguments);return void 0!==e&&void 0!==e.id?e.id:e},MD.prototype.selectNodes=function(){return this.selectionHandler.selectNodes.apply(this.selectionHandler,arguments)},MD.prototype.selectEdges=function(){return this.selectionHandler.selectEdges.apply(this.selectionHandler,arguments)},MD.prototype.unselectAll=function(){this.selectionHandler.unselectAll.apply(this.selectionHandler,arguments),this.redraw()},MD.prototype.redraw=function(){return this.renderer.redraw.apply(this.renderer,arguments)},MD.prototype.getScale=function(){return this.view.getScale.apply(this.view,arguments)},MD.prototype.getViewPosition=function(){return this.view.getViewPosition.apply(this.view,arguments)},MD.prototype.fit=function(){return this.view.fit.apply(this.view,arguments)},MD.prototype.moveTo=function(){return this.view.moveTo.apply(this.view,arguments)},MD.prototype.focus=function(){return this.view.focus.apply(this.view,arguments)},MD.prototype.releaseNode=function(){return this.view.releaseNode.apply(this.view,arguments)},MD.prototype.getOptionsFromConfigurator=function(){var e={};return this.configurator&&(e=this.configurator.getOptions.apply(this.configurator)),e};var DD=i((function(e,t){t.prepareElements=function(e){for(var t in e)e.hasOwnProperty(t)&&(e[t].redundant=e[t].used,e[t].used=[])},t.cleanupElements=function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t].redundant){for(var n=0;n<e[t].redundant.length;n++)e[t].redundant[n].parentNode.removeChild(e[t].redundant[n]);e[t].redundant=[]}},t.resetElements=function(e){t.prepareElements(e),t.cleanupElements(e),t.prepareElements(e)},t.getSVGElement=function(e,t,n){var i;return t.hasOwnProperty(e)?t[e].redundant.length>0?(i=t[e].redundant[0],t[e].redundant.shift()):(i=document.createElementNS("http://www.w3.org/2000/svg",e),n.appendChild(i)):(i=document.createElementNS("http://www.w3.org/2000/svg",e),t[e]={used:[],redundant:[]},n.appendChild(i)),t[e].used.push(i),i},t.getDOMElement=function(e,t,n,i){var r;return t.hasOwnProperty(e)?t[e].redundant.length>0?(r=t[e].redundant[0],t[e].redundant.shift()):(r=document.createElement(e),void 0!==i?n.insertBefore(r,i):n.appendChild(r)):(r=document.createElement(e),t[e]={used:[],redundant:[]},void 0!==i?n.insertBefore(r,i):n.appendChild(r)),t[e].used.push(r),r},t.drawPoint=function(e,n,i,r,o,s){var a;if("circle"==i.style?((a=t.getSVGElement("circle",r,o)).setAttributeNS(null,"cx",e),a.setAttributeNS(null,"cy",n),a.setAttributeNS(null,"r",.5*i.size)):((a=t.getSVGElement("rect",r,o)).setAttributeNS(null,"x",e-.5*i.size),a.setAttributeNS(null,"y",n-.5*i.size),a.setAttributeNS(null,"width",i.size),a.setAttributeNS(null,"height",i.size)),void 0!==i.styles&&a.setAttributeNS(null,"style",i.styles),a.setAttributeNS(null,"class",i.className+" vis-point"),s){var l=t.getSVGElement("text",r,o);s.xOffset&&(e+=s.xOffset),s.yOffset&&(n+=s.yOffset),s.content&&(l.textContent=s.content),s.className&&l.setAttributeNS(null,"class",s.className+" vis-label"),l.setAttributeNS(null,"x",e),l.setAttributeNS(null,"y",n)}return a},t.drawBar=function(e,n,i,r,o,s,a,l){if(0!=r){r<0&&(n-=r*=-1);var u=t.getSVGElement("rect",s,a);u.setAttributeNS(null,"x",e-.5*i),u.setAttributeNS(null,"y",n),u.setAttributeNS(null,"width",i),u.setAttributeNS(null,"height",r),u.setAttributeNS(null,"class",o),l&&u.setAttributeNS(null,"style",l)}}})),CD=DD.prepareElements,PD=DD.cleanupElements,ND=DD.resetElements,ID=DD.getSVGElement,AD=DD.getDOMElement,FD=DD.drawPoint,RD=DD.drawBar,jD=Object.freeze({__proto__:null,default:DD,__moduleExports:DD,prepareElements:CD,cleanupElements:PD,resetElements:ND,getSVGElement:ID,getDOMElement:AD,drawPoint:FD,drawBar:RD}),LD=i((function(e,t){e.exports=function(){var t,n;function i(){return t.apply(null,arguments)}function r(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function o(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function s(e){return void 0===e}function a(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function l(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function u(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function c(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var n in t)c(t,n)&&(e[n]=t[n]);return c(t,"toString")&&(e.toString=t.toString),c(t,"valueOf")&&(e.valueOf=t.valueOf),e}function h(e,t,n,i){return xt(e,t,n,i,!0).utc()}function f(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function p(e){if(null==e._isValid){var t=f(e),i=n.call(t.parsedDateParts,(function(e){return null!=e})),r=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&i);if(e._strict&&(r=r&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return r;e._isValid=r}return e._isValid}function v(e){var t=h(NaN);return null!=e?d(f(t),e):f(t).userInvalidated=!0,t}n=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var y=i.momentProperties=[];function g(e,t){var n,i,r;if(s(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),s(t._i)||(e._i=t._i),s(t._f)||(e._f=t._f),s(t._l)||(e._l=t._l),s(t._strict)||(e._strict=t._strict),s(t._tzm)||(e._tzm=t._tzm),s(t._isUTC)||(e._isUTC=t._isUTC),s(t._offset)||(e._offset=t._offset),s(t._pf)||(e._pf=f(t)),s(t._locale)||(e._locale=t._locale),y.length>0)for(n=0;n<y.length;n++)s(r=t[i=y[n]])||(e[i]=r);return e}var m=!1;function b(e){g(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===m&&(m=!0,i.updateOffset(this),m=!1)}function w(e){return e instanceof b||null!=e&&null!=e._isAMomentObject}function _(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function k(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=_(t)),n}function x(e,t,n){var i,r=Math.min(e.length,t.length),o=Math.abs(e.length-t.length),s=0;for(i=0;i<r;i++)(n&&e[i]!==t[i]||!n&&k(e[i])!==k(t[i]))&&s++;return s+o}function S(e){!1===i.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function O(e,t){var n=!0;return d((function(){if(null!=i.deprecationHandler&&i.deprecationHandler(null,e),n){for(var r,o=[],s=0;s<arguments.length;s++){if(r="","object"==typeof arguments[s]){for(var a in r+="\n["+s+"] ",arguments[0])r+=a+": "+arguments[0][a]+", ";r=r.slice(0,-2)}else r=arguments[s];o.push(r)}S(e+"\nArguments: "+Array.prototype.slice.call(o).join("")+"\n"+(new Error).stack),n=!1}return t.apply(this,arguments)}),t)}var E,T={};function M(e,t){null!=i.deprecationHandler&&i.deprecationHandler(e,t),T[e]||(S(t),T[e]=!0)}function D(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function C(e,t){var n,i=d({},e);for(n in t)c(t,n)&&(o(e[n])&&o(t[n])?(i[n]={},d(i[n],e[n]),d(i[n],t[n])):null!=t[n]?i[n]=t[n]:delete i[n]);for(n in e)c(e,n)&&!c(t,n)&&o(e[n])&&(i[n]=d({},i[n]));return i}function P(e){null!=e&&this.set(e)}i.suppressDeprecationWarnings=!1,i.deprecationHandler=null,E=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)c(e,t)&&n.push(t);return n};var N={};function I(e,t){var n=e.toLowerCase();N[n]=N[n+"s"]=N[t]=e}function A(e){return"string"==typeof e?N[e]||N[e.toLowerCase()]:void 0}function F(e){var t,n,i={};for(n in e)c(e,n)&&(t=A(n))&&(i[t]=e[n]);return i}var R={};function j(e,t){R[e]=t}function L(e,t,n){var i=""+Math.abs(e),r=t-i.length;return(e>=0?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}var z=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Y=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,B={},H={};function W(e,t,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),e&&(H[e]=r),t&&(H[t[0]]=function(){return L(r.apply(this,arguments),t[1],t[2])}),n&&(H[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function U(e,t){return e.isValid()?(t=V(t,e.localeData()),B[t]=B[t]||function(e){var t,n,i,r=e.match(z);for(t=0,n=r.length;t<n;t++)H[r[t]]?r[t]=H[r[t]]:r[t]=(i=r[t]).match(/\[[\s\S]/)?i.replace(/^\[|\]$/g,""):i.replace(/\\/g,"");return function(t){var i,o="";for(i=0;i<n;i++)o+=D(r[i])?r[i].call(t,e):r[i];return o}}(t),B[t](e)):e.localeData().invalidDate()}function V(e,t){var n=5;function i(e){return t.longDateFormat(e)||e}for(Y.lastIndex=0;n>=0&&Y.test(e);)e=e.replace(Y,i),Y.lastIndex=0,n-=1;return e}var G=/\d/,q=/\d\d/,$=/\d{3}/,Z=/\d{4}/,Q=/[+-]?\d{6}/,X=/\d\d?/,K=/\d\d\d\d?/,J=/\d\d\d\d\d\d?/,ee=/\d{1,3}/,te=/\d{1,4}/,ne=/[+-]?\d{1,6}/,ie=/\d+/,re=/[+-]?\d+/,oe=/Z|[+-]\d\d:?\d\d/gi,se=/Z|[+-]\d\d(?::?\d\d)?/gi,ae=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,le={};function ue(e,t,n){le[e]=D(t)?t:function(e,i){return e&&n?n:t}}function ce(e,t){return c(le,e)?le[e](t._strict,t._locale):new RegExp(de(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,n,i,r){return t||n||i||r}))))}function de(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var he={};function fe(e,t){var n,i=t;for("string"==typeof e&&(e=[e]),a(t)&&(i=function(e,n){n[t]=k(e)}),n=0;n<e.length;n++)he[e[n]]=i}function pe(e,t){fe(e,(function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)}))}function ve(e,t,n){null!=t&&c(he,e)&&he[e](t,n._a,n,e)}function ye(e){return ge(e)?366:365}function ge(e){return e%4==0&&e%100!=0||e%400==0}W("Y",0,0,(function(){var e=this.year();return e<=9999?""+e:"+"+e})),W(0,["YY",2],0,(function(){return this.year()%100})),W(0,["YYYY",4],0,"year"),W(0,["YYYYY",5],0,"year"),W(0,["YYYYYY",6,!0],0,"year"),I("year","y"),j("year",1),ue("Y",re),ue("YY",X,q),ue("YYYY",te,Z),ue("YYYYY",ne,Q),ue("YYYYYY",ne,Q),fe(["YYYYY","YYYYYY"],0),fe("YYYY",(function(e,t){t[0]=2===e.length?i.parseTwoDigitYear(e):k(e)})),fe("YY",(function(e,t){t[0]=i.parseTwoDigitYear(e)})),fe("Y",(function(e,t){t[0]=parseInt(e,10)})),i.parseTwoDigitYear=function(e){return k(e)+(k(e)>68?1900:2e3)};var me,be=we("FullYear",!0);function we(e,t){return function(n){return null!=n?(ke(this,e,n),i.updateOffset(this,t),this):_e(this,e)}}function _e(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function ke(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&ge(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),xe(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function xe(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=function(e,t){return(e%12+12)%12}(t);return e+=(t-n)/12,1===n?ge(e)?29:28:31-n%7%2}me=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},W("M",["MM",2],"Mo",(function(){return this.month()+1})),W("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),W("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),I("month","M"),j("month",8),ue("M",X),ue("MM",X,q),ue("MMM",(function(e,t){return t.monthsShortRegex(e)})),ue("MMMM",(function(e,t){return t.monthsRegex(e)})),fe(["M","MM"],(function(e,t){t[1]=k(e)-1})),fe(["MMM","MMMM"],(function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null!=r?t[1]=r:f(n).invalidMonth=e}));var Se=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Oe="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Ee="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function Te(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=h([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?-1!==(r=me.call(this._shortMonthsParse,s))?r:null:-1!==(r=me.call(this._longMonthsParse,s))?r:null:"MMM"===t?-1!==(r=me.call(this._shortMonthsParse,s))?r:-1!==(r=me.call(this._longMonthsParse,s))?r:null:-1!==(r=me.call(this._longMonthsParse,s))?r:-1!==(r=me.call(this._shortMonthsParse,s))?r:null}function Me(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=k(t);else if(!a(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),xe(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function De(e){return null!=e?(Me(this,e),i.updateOffset(this,!0),this):_e(this,"Month")}var Ce=ae,Pe=ae;function Ne(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;t<12;t++)n=h([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;t<12;t++)i[t]=de(i[t]),r[t]=de(r[t]);for(t=0;t<24;t++)o[t]=de(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function Ie(e,t,n,i,r,o,s){var a;return e<100&&e>=0?(a=new Date(e+400,t,n,i,r,o,s),isFinite(a.getFullYear())&&a.setFullYear(e)):a=new Date(e,t,n,i,r,o,s),a}function Ae(e){var t;if(e<100&&e>=0){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function Fe(e,t,n){var i=7+t-n;return-(7+Ae(e,0,i).getUTCDay()-t)%7+i-1}function Re(e,t,n,i,r){var o,s,a=1+7*(t-1)+(7+n-i)%7+Fe(e,i,r);return a<=0?s=ye(o=e-1)+a:a>ye(e)?(o=e+1,s=a-ye(e)):(o=e,s=a),{year:o,dayOfYear:s}}function je(e,t,n){var i,r,o=Fe(e.year(),t,n),s=Math.floor((e.dayOfYear()-o-1)/7)+1;return s<1?i=s+Le(r=e.year()-1,t,n):s>Le(e.year(),t,n)?(i=s-Le(e.year(),t,n),r=e.year()+1):(r=e.year(),i=s),{week:i,year:r}}function Le(e,t,n){var i=Fe(e,t,n),r=Fe(e+1,t,n);return(ye(e)-i+r)/7}function ze(e,t){return e.slice(t,7).concat(e.slice(0,t))}W("w",["ww",2],"wo","week"),W("W",["WW",2],"Wo","isoWeek"),I("week","w"),I("isoWeek","W"),j("week",5),j("isoWeek",5),ue("w",X),ue("ww",X,q),ue("W",X),ue("WW",X,q),pe(["w","ww","W","WW"],(function(e,t,n,i){t[i.substr(0,1)]=k(e)})),W("d",0,"do","day"),W("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),W("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),W("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),W("e",0,0,"weekday"),W("E",0,0,"isoWeekday"),I("day","d"),I("weekday","e"),I("isoWeekday","E"),j("day",11),j("weekday",11),j("isoWeekday",11),ue("d",X),ue("e",X),ue("E",X),ue("dd",(function(e,t){return t.weekdaysMinRegex(e)})),ue("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),ue("dddd",(function(e,t){return t.weekdaysRegex(e)})),pe(["dd","ddd","dddd"],(function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null!=r?t.d=r:f(n).invalidWeekday=e})),pe(["d","e","E"],(function(e,t,n,i){t[i]=k(e)}));var Ye="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Be="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),He="Su_Mo_Tu_We_Th_Fr_Sa".split("_");function We(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=h([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?-1!==(r=me.call(this._weekdaysParse,s))?r:null:"ddd"===t?-1!==(r=me.call(this._shortWeekdaysParse,s))?r:null:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:"dddd"===t?-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._shortWeekdaysParse,s))?r:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:"ddd"===t?-1!==(r=me.call(this._shortWeekdaysParse,s))?r:-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._minWeekdaysParse,s))?r:null:-1!==(r=me.call(this._minWeekdaysParse,s))?r:-1!==(r=me.call(this._weekdaysParse,s))?r:-1!==(r=me.call(this._shortWeekdaysParse,s))?r:null}var Ue=ae,Ve=ae,Ge=ae;function qe(){function e(e,t){return t.length-e.length}var t,n,i,r,o,s=[],a=[],l=[],u=[];for(t=0;t<7;t++)n=h([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),s.push(i),a.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(s.sort(e),a.sort(e),l.sort(e),u.sort(e),t=0;t<7;t++)a[t]=de(a[t]),l[t]=de(l[t]),u[t]=de(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+s.join("|")+")","i")}function $e(){return this.hours()%12||12}function Ze(e,t){W(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function Qe(e,t){return t._meridiemParse}W("H",["HH",2],0,"hour"),W("h",["hh",2],0,$e),W("k",["kk",2],0,(function(){return this.hours()||24})),W("hmm",0,0,(function(){return""+$e.apply(this)+L(this.minutes(),2)})),W("hmmss",0,0,(function(){return""+$e.apply(this)+L(this.minutes(),2)+L(this.seconds(),2)})),W("Hmm",0,0,(function(){return""+this.hours()+L(this.minutes(),2)})),W("Hmmss",0,0,(function(){return""+this.hours()+L(this.minutes(),2)+L(this.seconds(),2)})),Ze("a",!0),Ze("A",!1),I("hour","h"),j("hour",13),ue("a",Qe),ue("A",Qe),ue("H",X),ue("h",X),ue("k",X),ue("HH",X,q),ue("hh",X,q),ue("kk",X,q),ue("hmm",K),ue("hmmss",J),ue("Hmm",K),ue("Hmmss",J),fe(["H","HH"],3),fe(["k","kk"],(function(e,t,n){var i=k(e);t[3]=24===i?0:i})),fe(["a","A"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),fe(["h","hh"],(function(e,t,n){t[3]=k(e),f(n).bigHour=!0})),fe("hmm",(function(e,t,n){var i=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i)),f(n).bigHour=!0})),fe("hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i,2)),t[5]=k(e.substr(r)),f(n).bigHour=!0})),fe("Hmm",(function(e,t,n){var i=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i))})),fe("Hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=k(e.substr(0,i)),t[4]=k(e.substr(i,2)),t[5]=k(e.substr(r))}));var Xe,Ke=we("Hours",!0),Je={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:Oe,monthsShort:Ee,week:{dow:0,doy:6},weekdays:Ye,weekdaysMin:He,weekdaysShort:Be,meridiemParse:/[ap]\.?m?\.?/i},et={},tt={};function nt(e){return e?e.toLowerCase().replace("_","-"):e}function it(t){var n=null;if(!et[t]&&e&&e.exports)try{n=Xe._abbr,function(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}(),rt(n)}catch(e){}return et[t]}function rt(e,t){var n;return e&&((n=s(t)?st(e):ot(e,t))?Xe=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Xe._abbr}function ot(e,t){if(null!==t){var n,i=Je;if(t.abbr=e,null!=et[e])M("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=et[e]._config;else if(null!=t.parentLocale)if(null!=et[t.parentLocale])i=et[t.parentLocale]._config;else{if(null==(n=it(t.parentLocale)))return tt[t.parentLocale]||(tt[t.parentLocale]=[]),tt[t.parentLocale].push({name:e,config:t}),null;i=n._config}return et[e]=new P(C(i,t)),tt[e]&&tt[e].forEach((function(e){ot(e.name,e.config)})),rt(e),et[e]}return delete et[e],null}function st(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Xe;if(!r(e)){if(t=it(e))return t;e=[e]}return function(e){for(var t,n,i,r,o=0;o<e.length;){for(t=(r=nt(e[o]).split("-")).length,n=(n=nt(e[o+1]))?n.split("-"):null;t>0;){if(i=it(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&x(r,n,!0)>=t-1)break;t--}o++}return Xe}(e)}function at(e){var t,n=e._a;return n&&-2===f(e).overflow&&(t=n[1]<0||n[1]>11?1:n[2]<1||n[2]>xe(n[0],n[1])?2:n[3]<0||n[3]>24||24===n[3]&&(0!==n[4]||0!==n[5]||0!==n[6])?3:n[4]<0||n[4]>59?4:n[5]<0||n[5]>59?5:n[6]<0||n[6]>999?6:-1,f(e)._overflowDayOfYear&&(t<0||t>2)&&(t=2),f(e)._overflowWeeks&&-1===t&&(t=7),f(e)._overflowWeekday&&-1===t&&(t=8),f(e).overflow=t),e}function lt(e,t,n){return null!=e?e:null!=t?t:n}function ut(e){var t,n,r,o,s,a=[];if(!e._d){for(r=function(e){var t=new Date(i.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var t,n,i,r,o,s,a,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)o=1,s=4,n=lt(t.GG,e._a[0],je(St(),1,4).year),i=lt(t.W,1),((r=lt(t.E,1))<1||r>7)&&(l=!0);else{o=e._locale._week.dow,s=e._locale._week.doy;var u=je(St(),o,s);n=lt(t.gg,e._a[0],u.year),i=lt(t.w,u.week),null!=t.d?((r=t.d)<0||r>6)&&(l=!0):null!=t.e?(r=t.e+o,(t.e<0||t.e>6)&&(l=!0)):r=o}i<1||i>Le(n,o,s)?f(e)._overflowWeeks=!0:null!=l?f(e)._overflowWeekday=!0:(a=Re(n,i,r,o,s),e._a[0]=a.year,e._dayOfYear=a.dayOfYear)}(e),null!=e._dayOfYear&&(s=lt(e._a[0],r[0]),(e._dayOfYear>ye(s)||0===e._dayOfYear)&&(f(e)._overflowDayOfYear=!0),n=Ae(s,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=a[t]=r[t];for(;t<7;t++)e._a[t]=a[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?Ae:Ie).apply(null,a),o=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&void 0!==e._w.d&&e._w.d!==o&&(f(e).weekdayMismatch=!0)}}var ct=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,dt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,ht=/Z|[+-]\d\d(?::?\d\d)?/,ft=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],pt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],vt=/^\/?Date\((\-?\d+)/i;function yt(e){var t,n,i,r,o,s,a=e._i,l=ct.exec(a)||dt.exec(a);if(l){for(f(e).iso=!0,t=0,n=ft.length;t<n;t++)if(ft[t][1].exec(l[1])){r=ft[t][0],i=!1!==ft[t][2];break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=pt.length;t<n;t++)if(pt[t][1].exec(l[3])){o=(l[2]||" ")+pt[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!ht.exec(l[4]))return void(e._isValid=!1);s="Z"}e._f=r+(o||"")+(s||""),_t(e)}else e._isValid=!1}var gt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function mt(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}var bt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function wt(e){var t,n,i,r,o,s,a,l=gt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(l){var u=(t=l[4],n=l[3],i=l[2],r=l[5],o=l[6],s=l[7],a=[mt(t),Ee.indexOf(n),parseInt(i,10),parseInt(r,10),parseInt(o,10)],s&&a.push(parseInt(s,10)),a);if(!function(e,t,n){return!e||Be.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(f(n).weekdayMismatch=!0,n._isValid=!1,!1)}(l[1],u,e))return;e._a=u,e._tzm=function(e,t,n){if(e)return bt[e];if(t)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(l[8],l[9],l[10]),e._d=Ae.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),f(e).rfc2822=!0}else e._isValid=!1}function _t(e){if(e._f!==i.ISO_8601)if(e._f!==i.RFC_2822){e._a=[],f(e).empty=!0;var t,n,r,o,s,a=""+e._i,l=a.length,u=0;for(r=V(e._f,e._locale).match(z)||[],t=0;t<r.length;t++)o=r[t],(n=(a.match(ce(o,e))||[])[0])&&((s=a.substr(0,a.indexOf(n))).length>0&&f(e).unusedInput.push(s),a=a.slice(a.indexOf(n)+n.length),u+=n.length),H[o]?(n?f(e).empty=!1:f(e).unusedTokens.push(o),ve(o,n,e)):e._strict&&!n&&f(e).unusedTokens.push(o);f(e).charsLeftOver=l-u,a.length>0&&f(e).unusedInput.push(a),e._a[3]<=12&&!0===f(e).bigHour&&e._a[3]>0&&(f(e).bigHour=void 0),f(e).parsedDateParts=e._a.slice(0),f(e).meridiem=e._meridiem,e._a[3]=function(e,t,n){var i;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?((i=e.isPM(n))&&t<12&&(t+=12),i||12!==t||(t=0),t):t}(e._locale,e._a[3],e._meridiem),ut(e),at(e)}else wt(e);else yt(e)}function kt(e){var t=e._i,n=e._f;return e._locale=e._locale||st(e._l),null===t||void 0===n&&""===t?v({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),w(t)?new b(at(t)):(l(t)?e._d=t:r(n)?function(e){var t,n,i,r,o;if(0===e._f.length)return f(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=g({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],_t(t),p(t)&&(o+=f(t).charsLeftOver,o+=10*f(t).unusedTokens.length,f(t).score=o,(null==i||o<i)&&(i=o,n=t));d(e,n||t)}(e):n?_t(e):function(e){var t=e._i;s(t)?e._d=new Date(i.now()):l(t)?e._d=new Date(t.valueOf()):"string"==typeof t?function(e){var t=vt.exec(e._i);null===t?(yt(e),!1===e._isValid&&(delete e._isValid,wt(e),!1===e._isValid&&(delete e._isValid,i.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):r(t)?(e._a=u(t.slice(0),(function(e){return parseInt(e,10)})),ut(e)):o(t)?function(e){if(!e._d){var t=F(e._i);e._a=u([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),ut(e)}}(e):a(t)?e._d=new Date(t):i.createFromInputFallback(e)}(e),p(e)||(e._d=null),e))}function xt(e,t,n,i,s){var a,l={};return!0!==n&&!1!==n||(i=n,n=void 0),(o(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||r(e)&&0===e.length)&&(e=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=s,l._l=n,l._i=e,l._f=t,l._strict=i,(a=new b(at(kt(l))))._nextDay&&(a.add(1,"d"),a._nextDay=void 0),a}function St(e,t,n,i){return xt(e,t,n,i,!1)}i.createFromInputFallback=O("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),i.ISO_8601=function(){},i.RFC_2822=function(){};var Ot=O("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:v()})),Et=O("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:v()}));function Tt(e,t){var n,i;if(1===t.length&&r(t[0])&&(t=t[0]),!t.length)return St();for(n=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](n)||(n=t[i]);return n}var Mt=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Dt(e){var t=F(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||t.isoWeek||0,s=t.day||0,a=t.hour||0,l=t.minute||0,u=t.second||0,c=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===me.call(Mt,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,i=0;i<Mt.length;++i)if(e[Mt[i]]){if(n)return!1;parseFloat(e[Mt[i]])!==k(e[Mt[i]])&&(n=!0)}return!0}(t),this._milliseconds=+c+1e3*u+6e4*l+1e3*a*60*60,this._days=+s+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=st(),this._bubble()}function Ct(e){return e instanceof Dt}function Pt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Nt(e,t){W(e,0,0,(function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+L(~~(e/60),2)+t+L(~~e%60,2)}))}Nt("Z",":"),Nt("ZZ",""),ue("Z",se),ue("ZZ",se),fe(["Z","ZZ"],(function(e,t,n){n._useUTC=!0,n._tzm=At(se,e)}));var It=/([\+\-]|\d\d)/gi;function At(e,t){var n=(t||"").match(e);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(It)||["-",0,0],r=60*i[1]+k(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ft(e,t){var n,r;return t._isUTC?(n=t.clone(),r=(w(e)||l(e)?e.valueOf():St(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+r),i.updateOffset(n,!1),n):St(e).local()}function Rt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function jt(){return!!this.isValid()&&this._isUTC&&0===this._offset}i.updateOffset=function(){};var Lt=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,zt=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Yt(e,t){var n,i,r,o,s,l,u=e,d=null;return Ct(e)?u={ms:e._milliseconds,d:e._days,M:e._months}:a(e)?(u={},t?u[t]=e:u.milliseconds=e):(d=Lt.exec(e))?(n="-"===d[1]?-1:1,u={y:0,d:k(d[2])*n,h:k(d[3])*n,m:k(d[4])*n,s:k(d[5])*n,ms:k(Pt(1e3*d[6]))*n}):(d=zt.exec(e))?(n="-"===d[1]?-1:1,u={y:Bt(d[2],n),M:Bt(d[3],n),w:Bt(d[4],n),d:Bt(d[5],n),h:Bt(d[6],n),m:Bt(d[7],n),s:Bt(d[8],n)}):null==u?u={}:"object"==typeof u&&("from"in u||"to"in u)&&(o=St(u.from),s=St(u.to),r=o.isValid()&&s.isValid()?(s=Ft(s,o),o.isBefore(s)?l=Ht(o,s):((l=Ht(s,o)).milliseconds=-l.milliseconds,l.months=-l.months),l):{milliseconds:0,months:0},(u={}).ms=r.milliseconds,u.M=r.months),i=new Dt(u),Ct(e)&&c(e,"_locale")&&(i._locale=e._locale),i}function Bt(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function Ht(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function Wt(e,t){return function(n,i){var r;return null===i||isNaN(+i)||(M(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),Ut(this,Yt(n="string"==typeof n?+n:n,i),e),this}}function Ut(e,t,n,r){var o=t._milliseconds,s=Pt(t._days),a=Pt(t._months);e.isValid()&&(r=null==r||r,a&&Me(e,_e(e,"Month")+a*n),s&&ke(e,"Date",_e(e,"Date")+s*n),o&&e._d.setTime(e._d.valueOf()+o*n),r&&i.updateOffset(e,s||a))}Yt.fn=Dt.prototype,Yt.invalid=function(){return Yt(NaN)};var Vt=Wt(1,"add"),Gt=Wt(-1,"subtract");function qt(e,t){var n=12*(t.year()-e.year())+(t.month()-e.month()),i=e.clone().add(n,"months");return-(n+(t-i<0?(t-i)/(i-e.clone().add(n-1,"months")):(t-i)/(e.clone().add(n+1,"months")-i)))||0}function $t(e){var t;return void 0===e?this._locale._abbr:(null!=(t=st(e))&&(this._locale=t),this)}i.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",i.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Zt=O("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));function Qt(){return this._locale}var Xt=126227808e5;function Kt(e,t){return(e%t+t)%t}function Jt(e,t,n){return e<100&&e>=0?new Date(e+400,t,n)-Xt:new Date(e,t,n).valueOf()}function en(e,t,n){return e<100&&e>=0?Date.UTC(e+400,t,n)-Xt:Date.UTC(e,t,n)}function tn(e,t){W(0,[e,e.length],0,t)}function nn(e,t,n,i,r){var o;return null==e?je(this,i,r).year:(t>(o=Le(e,i,r))&&(t=o),rn.call(this,e,t,n,i,r))}function rn(e,t,n,i,r){var o=Re(e,t,n,i,r),s=Ae(o.year,0,o.dayOfYear);return this.year(s.getUTCFullYear()),this.month(s.getUTCMonth()),this.date(s.getUTCDate()),this}W(0,["gg",2],0,(function(){return this.weekYear()%100})),W(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),tn("gggg","weekYear"),tn("ggggg","weekYear"),tn("GGGG","isoWeekYear"),tn("GGGGG","isoWeekYear"),I("weekYear","gg"),I("isoWeekYear","GG"),j("weekYear",1),j("isoWeekYear",1),ue("G",re),ue("g",re),ue("GG",X,q),ue("gg",X,q),ue("GGGG",te,Z),ue("gggg",te,Z),ue("GGGGG",ne,Q),ue("ggggg",ne,Q),pe(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,n,i){t[i.substr(0,2)]=k(e)})),pe(["gg","GG"],(function(e,t,n,r){t[r]=i.parseTwoDigitYear(e)})),W("Q",0,"Qo","quarter"),I("quarter","Q"),j("quarter",7),ue("Q",G),fe("Q",(function(e,t){t[1]=3*(k(e)-1)})),W("D",["DD",2],"Do","date"),I("date","D"),j("date",9),ue("D",X),ue("DD",X,q),ue("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),fe(["D","DD"],2),fe("Do",(function(e,t){t[2]=k(e.match(X)[0])}));var on=we("Date",!0);W("DDD",["DDDD",3],"DDDo","dayOfYear"),I("dayOfYear","DDD"),j("dayOfYear",4),ue("DDD",ee),ue("DDDD",$),fe(["DDD","DDDD"],(function(e,t,n){n._dayOfYear=k(e)})),W("m",["mm",2],0,"minute"),I("minute","m"),j("minute",14),ue("m",X),ue("mm",X,q),fe(["m","mm"],4);var sn=we("Minutes",!1);W("s",["ss",2],0,"second"),I("second","s"),j("second",15),ue("s",X),ue("ss",X,q),fe(["s","ss"],5);var an,ln=we("Seconds",!1);for(W("S",0,0,(function(){return~~(this.millisecond()/100)})),W(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),W(0,["SSS",3],0,"millisecond"),W(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),W(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),W(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),W(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),W(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),W(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),I("millisecond","ms"),j("millisecond",16),ue("S",ee,G),ue("SS",ee,q),ue("SSS",ee,$),an="SSSS";an.length<=9;an+="S")ue(an,ie);function un(e,t){t[6]=k(1e3*("0."+e))}for(an="S";an.length<=9;an+="S")fe(an,un);var cn=we("Milliseconds",!1);W("z",0,0,"zoneAbbr"),W("zz",0,0,"zoneName");var dn=b.prototype;function hn(e){return e}dn.add=Vt,dn.calendar=function(e,t){var n=e||St(),r=Ft(n,this).startOf("day"),o=i.calendarFormat(this,r)||"sameElse",s=t&&(D(t[o])?t[o].call(this,n):t[o]);return this.format(s||this.localeData().calendar(o,this,St(n)))},dn.clone=function(){return new b(this)},dn.diff=function(e,t,n){var i,r,o;if(!this.isValid())return NaN;if(!(i=Ft(e,this)).isValid())return NaN;switch(r=6e4*(i.utcOffset()-this.utcOffset()),t=A(t)){case"year":o=qt(this,i)/12;break;case"month":o=qt(this,i);break;case"quarter":o=qt(this,i)/3;break;case"second":o=(this-i)/1e3;break;case"minute":o=(this-i)/6e4;break;case"hour":o=(this-i)/36e5;break;case"day":o=(this-i-r)/864e5;break;case"week":o=(this-i-r)/6048e5;break;default:o=this-i}return n?o:_(o)},dn.endOf=function(e){var t;if(void 0===(e=A(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?en:Jt;switch(e){case"year":t=n(this.year()+1,0,1)-1;break;case"quarter":t=n(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=n(this.year(),this.month()+1,1)-1;break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=n(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=36e5-Kt(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1;break;case"minute":t=this._d.valueOf(),t+=6e4-Kt(t,6e4)-1;break;case"second":t=this._d.valueOf(),t+=1e3-Kt(t,1e3)-1}return this._d.setTime(t),i.updateOffset(this,!0),this},dn.format=function(e){e||(e=this.isUtc()?i.defaultFormatUtc:i.defaultFormat);var t=U(this,e);return this.localeData().postformat(t)},dn.from=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||St(e).isValid())?Yt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},dn.fromNow=function(e){return this.from(St(),e)},dn.to=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||St(e).isValid())?Yt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},dn.toNow=function(e){return this.to(St(),e)},dn.get=function(e){return D(this[e=A(e)])?this[e]():this},dn.invalidAt=function(){return f(this).overflow},dn.isAfter=function(e,t){var n=w(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},dn.isBefore=function(e,t){var n=w(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},dn.isBetween=function(e,t,n,i){var r=w(e)?e:St(e),o=w(t)?t:St(t);return!!(this.isValid()&&r.isValid()&&o.isValid())&&("("===(i=i||"()")[0]?this.isAfter(r,n):!this.isBefore(r,n))&&(")"===i[1]?this.isBefore(o,n):!this.isAfter(o,n))},dn.isSame=function(e,t){var n,i=w(e)?e:St(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=A(t)||"millisecond")?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},dn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},dn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},dn.isValid=function(){return p(this)},dn.lang=Zt,dn.locale=$t,dn.localeData=Qt,dn.max=Et,dn.min=Ot,dn.parsingFlags=function(){return d({},f(this))},dn.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:R[n]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=F(e)),i=0;i<n.length;i++)this[n[i].unit](e[n[i].unit]);else if(D(this[e=A(e)]))return this[e](t);return this},dn.startOf=function(e){var t;if(void 0===(e=A(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?en:Jt;switch(e){case"year":t=n(this.year(),0,1);break;case"quarter":t=n(this.year(),this.month()-this.month()%3,1);break;case"month":t=n(this.year(),this.month(),1);break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=n(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=Kt(t+(this._isUTC?0:6e4*this.utcOffset()),36e5);break;case"minute":t=this._d.valueOf(),t-=Kt(t,6e4);break;case"second":t=this._d.valueOf(),t-=Kt(t,1e3)}return this._d.setTime(t),i.updateOffset(this,!0),this},dn.subtract=Gt,dn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},dn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},dn.toDate=function(){return new Date(this.valueOf())},dn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?U(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):D(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",U(n,"Z")):U(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},dn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',i=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r=t+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},dn.toJSON=function(){return this.isValid()?this.toISOString():null},dn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},dn.unix=function(){return Math.floor(this.valueOf()/1e3)},dn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},dn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},dn.year=be,dn.isLeapYear=function(){return ge(this.year())},dn.weekYear=function(e){return nn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},dn.isoWeekYear=function(e){return nn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},dn.quarter=dn.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},dn.month=De,dn.daysInMonth=function(){return xe(this.year(),this.month())},dn.week=dn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},dn.isoWeek=dn.isoWeeks=function(e){var t=je(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},dn.weeksInYear=function(){var e=this.localeData()._week;return Le(this.year(),e.dow,e.doy)},dn.isoWeeksInYear=function(){return Le(this.year(),1,4)},dn.date=on,dn.day=dn.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,t){return"string"!=typeof e?e:isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,"d")):t},dn.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},dn.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},dn.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},dn.hour=dn.hours=Ke,dn.minute=dn.minutes=sn,dn.second=dn.seconds=ln,dn.millisecond=dn.milliseconds=cn,dn.utcOffset=function(e,t,n){var r,o=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"==typeof e){if(null===(e=At(se,e)))return this}else Math.abs(e)<16&&!n&&(e*=60);return!this._isUTC&&t&&(r=Rt(this)),this._offset=e,this._isUTC=!0,null!=r&&this.add(r,"m"),o!==e&&(!t||this._changeInProgress?Ut(this,Yt(e-o,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,i.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:Rt(this)},dn.utc=function(e){return this.utcOffset(0,e)},dn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Rt(this),"m")),this},dn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=At(oe,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},dn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?St(e).utcOffset():0,(this.utcOffset()-e)%60==0)},dn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},dn.isLocal=function(){return!!this.isValid()&&!this._isUTC},dn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},dn.isUtc=jt,dn.isUTC=jt,dn.zoneAbbr=function(){return this._isUTC?"UTC":""},dn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},dn.dates=O("dates accessor is deprecated. Use date instead.",on),dn.months=O("months accessor is deprecated. Use month instead",De),dn.years=O("years accessor is deprecated. Use year instead",be),dn.zone=O("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),dn.isDSTShifted=O("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!s(this._isDSTShifted))return this._isDSTShifted;var e={};if(g(e,this),(e=kt(e))._a){var t=e._isUTC?h(e._a):St(e._a);this._isDSTShifted=this.isValid()&&x(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}));var fn=P.prototype;function pn(e,t,n,i){var r=st(),o=h().set(i,t);return r[n](o,e)}function vn(e,t,n){if(a(e)&&(t=e,e=void 0),e=e||"",null!=t)return pn(e,t,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=pn(e,i,n,"month");return r}function yn(e,t,n,i){"boolean"==typeof e?(a(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,a(t)&&(n=t,t=void 0),t=t||"");var r,o=st(),s=e?o._week.dow:0;if(null!=n)return pn(t,(n+s)%7,i,"day");var l=[];for(r=0;r<7;r++)l[r]=pn(t,(r+s)%7,i,"day");return l}fn.calendar=function(e,t,n){var i=this._calendar[e]||this._calendar.sameElse;return D(i)?i.call(t,n):i},fn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},fn.invalidDate=function(){return this._invalidDate},fn.ordinal=function(e){return this._ordinal.replace("%d",e)},fn.preparse=hn,fn.postformat=hn,fn.relativeTime=function(e,t,n,i){var r=this._relativeTime[n];return D(r)?r(e,t,n,i):r.replace(/%d/i,e)},fn.pastFuture=function(e,t){var n=this._relativeTime[e>0?"future":"past"];return D(n)?n(t):n.replace(/%s/i,t)},fn.set=function(e){var t,n;for(n in e)D(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},fn.months=function(e,t){return e?r(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Se).test(t)?"format":"standalone"][e.month()]:r(this._months)?this._months:this._months.standalone},fn.monthsShort=function(e,t){return e?r(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Se.test(t)?"format":"standalone"][e.month()]:r(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},fn.monthsParse=function(e,t,n){var i,r,o;if(this._monthsParseExact)return Te.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=h([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}},fn.monthsRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Ne.call(this),e?this._monthsStrictRegex:this._monthsRegex):(c(this,"_monthsRegex")||(this._monthsRegex=Pe),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},fn.monthsShortRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Ne.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(c(this,"_monthsShortRegex")||(this._monthsShortRegex=Ce),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},fn.week=function(e){return je(e,this._week.dow,this._week.doy).week},fn.firstDayOfYear=function(){return this._week.doy},fn.firstDayOfWeek=function(){return this._week.dow},fn.weekdays=function(e,t){var n=r(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?ze(n,this._week.dow):e?n[e.day()]:n},fn.weekdaysMin=function(e){return!0===e?ze(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},fn.weekdaysShort=function(e){return!0===e?ze(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},fn.weekdaysParse=function(e,t,n){var i,r,o;if(this._weekdaysParseExact)return We.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=h([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}},fn.weekdaysRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(c(this,"_weekdaysRegex")||(this._weekdaysRegex=Ue),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},fn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(c(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ve),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},fn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||qe.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(c(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Ge),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},fn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},fn.meridiem=function(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"},rt("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===k(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),i.lang=O("moment.lang is deprecated. Use moment.locale instead.",rt),i.langData=O("moment.langData is deprecated. Use moment.localeData instead.",st);var gn=Math.abs;function mn(e,t,n,i){var r=Yt(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function bn(e){return e<0?Math.floor(e):Math.ceil(e)}function wn(e){return 4800*e/146097}function _n(e){return 146097*e/4800}function kn(e){return function(){return this.as(e)}}var xn=kn("ms"),Sn=kn("s"),On=kn("m"),En=kn("h"),Tn=kn("d"),Mn=kn("w"),Dn=kn("M"),Cn=kn("Q"),Pn=kn("y");function Nn(e){return function(){return this.isValid()?this._data[e]:NaN}}var In=Nn("milliseconds"),An=Nn("seconds"),Fn=Nn("minutes"),Rn=Nn("hours"),jn=Nn("days"),Ln=Nn("months"),zn=Nn("years"),Yn=Math.round,Bn={ss:44,s:45,m:45,h:22,d:26,M:11};function Hn(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}var Wn=Math.abs;function Un(e){return(e>0)-(e<0)||+e}function Vn(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Wn(this._milliseconds)/1e3,i=Wn(this._days),r=Wn(this._months);e=_(n/60),t=_(e/60),n%=60,e%=60;var o=_(r/12),s=r%=12,a=i,l=t,u=e,c=n?n.toFixed(3).replace(/\.?0+$/,""):"",d=this.asSeconds();if(!d)return"P0D";var h=d<0?"-":"",f=Un(this._months)!==Un(d)?"-":"",p=Un(this._days)!==Un(d)?"-":"",v=Un(this._milliseconds)!==Un(d)?"-":"";return h+"P"+(o?f+o+"Y":"")+(s?f+s+"M":"")+(a?p+a+"D":"")+(l||u||c?"T":"")+(l?v+l+"H":"")+(u?v+u+"M":"")+(c?v+c+"S":"")}var Gn=Dt.prototype;return Gn.isValid=function(){return this._isValid},Gn.abs=function(){var e=this._data;return this._milliseconds=gn(this._milliseconds),this._days=gn(this._days),this._months=gn(this._months),e.milliseconds=gn(e.milliseconds),e.seconds=gn(e.seconds),e.minutes=gn(e.minutes),e.hours=gn(e.hours),e.months=gn(e.months),e.years=gn(e.years),this},Gn.add=function(e,t){return mn(this,e,t,1)},Gn.subtract=function(e,t){return mn(this,e,t,-1)},Gn.as=function(e){if(!this.isValid())return NaN;var t,n,i=this._milliseconds;if("month"===(e=A(e))||"quarter"===e||"year"===e)switch(t=this._days+i/864e5,n=this._months+wn(t),e){case"month":return n;case"quarter":return n/3;case"year":return n/12}else switch(t=this._days+Math.round(_n(this._months)),e){case"week":return t/7+i/6048e5;case"day":return t+i/864e5;case"hour":return 24*t+i/36e5;case"minute":return 1440*t+i/6e4;case"second":return 86400*t+i/1e3;case"millisecond":return Math.floor(864e5*t)+i;default:throw new Error("Unknown unit "+e)}},Gn.asMilliseconds=xn,Gn.asSeconds=Sn,Gn.asMinutes=On,Gn.asHours=En,Gn.asDays=Tn,Gn.asWeeks=Mn,Gn.asMonths=Dn,Gn.asQuarters=Cn,Gn.asYears=Pn,Gn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*k(this._months/12):NaN},Gn._bubble=function(){var e,t,n,i,r,o=this._milliseconds,s=this._days,a=this._months,l=this._data;return o>=0&&s>=0&&a>=0||o<=0&&s<=0&&a<=0||(o+=864e5*bn(_n(a)+s),s=0,a=0),l.milliseconds=o%1e3,e=_(o/1e3),l.seconds=e%60,t=_(e/60),l.minutes=t%60,n=_(t/60),l.hours=n%24,s+=_(n/24),a+=r=_(wn(s)),s-=bn(_n(r)),i=_(a/12),a%=12,l.days=s,l.months=a,l.years=i,this},Gn.clone=function(){return Yt(this)},Gn.get=function(e){return e=A(e),this.isValid()?this[e+"s"]():NaN},Gn.milliseconds=In,Gn.seconds=An,Gn.minutes=Fn,Gn.hours=Rn,Gn.days=jn,Gn.weeks=function(){return _(this.days()/7)},Gn.months=Ln,Gn.years=zn,Gn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var i=Yt(e).abs(),r=Yn(i.as("s")),o=Yn(i.as("m")),s=Yn(i.as("h")),a=Yn(i.as("d")),l=Yn(i.as("M")),u=Yn(i.as("y")),c=r<=Bn.ss&&["s",r]||r<Bn.s&&["ss",r]||o<=1&&["m"]||o<Bn.m&&["mm",o]||s<=1&&["h"]||s<Bn.h&&["hh",s]||a<=1&&["d"]||a<Bn.d&&["dd",a]||l<=1&&["M"]||l<Bn.M&&["MM",l]||u<=1&&["y"]||["yy",u];return c[2]=t,c[3]=+e>0,c[4]=n,Hn.apply(null,c)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},Gn.toISOString=Vn,Gn.toString=Vn,Gn.toJSON=Vn,Gn.locale=$t,Gn.localeData=Qt,Gn.toIsoString=O("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Vn),Gn.lang=Zt,W("X",0,0,"unix"),W("x",0,0,"valueOf"),ue("x",re),ue("X",/[+-]?\d+(\.\d{1,3})?/),fe("X",(function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))})),fe("x",(function(e,t,n){n._d=new Date(k(e))})),i.version="2.24.0",t=St,i.fn=dn,i.min=function(){return Tt("isBefore",[].slice.call(arguments,0))},i.max=function(){return Tt("isAfter",[].slice.call(arguments,0))},i.now=function(){return Date.now?Date.now():+new Date},i.utc=h,i.unix=function(e){return St(1e3*e)},i.months=function(e,t){return vn(e,t,"months")},i.isDate=l,i.locale=rt,i.invalid=v,i.duration=Yt,i.isMoment=w,i.weekdays=function(e,t,n){return yn(e,t,n,"weekdays")},i.parseZone=function(){return St.apply(null,arguments).parseZone()},i.localeData=st,i.isDuration=Ct,i.monthsShort=function(e,t){return vn(e,t,"monthsShort")},i.weekdaysMin=function(e,t,n){return yn(e,t,n,"weekdaysMin")},i.defineLocale=ot,i.updateLocale=function(e,t){if(null!=t){var n,i,r=Je;null!=(i=it(e))&&(r=i._config),(n=new P(t=C(r,t))).parentLocale=et[e],et[e]=n,rt(e)}else null!=et[e]&&(null!=et[e].parentLocale?et[e]=et[e].parentLocale:null!=et[e]&&delete et[e]);return et[e]},i.locales=function(){return E(et)},i.weekdaysShort=function(e,t,n){return yn(e,t,n,"weekdaysShort")},i.normalizeUnits=A,i.relativeTimeRounding=function(e){return void 0===e?Yn:"function"==typeof e&&(Yn=e,!0)},i.relativeTimeThreshold=function(e,t){return void 0!==Bn[e]&&(void 0===t?Bn[e]:(Bn[e]=t,"s"===e&&(Bn.ss=t-1),!0))},i.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},i.prototype=dn,i.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},i}()})),zD="undefined"!=typeof window&&window.moment||LD,YD=Object.freeze({__proto__:null,default:zD,__moduleExports:zD}),BD={Images:mh,dotparser:hc,gephiParser:wc,allOptions:OD,convertDot:cc,convertGephi:bc},HD=Object.freeze({__proto__:null,network:BD,DOMutil:jD,util:Zs,data:fS,moment:YD,Hammer:lh,keycharm:xc,DataSet:cS,DataView:dS,Queue:nS,Network:MD});t.a=HD}).call(this,n(17))},function(e,t,n){"use strict";var i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function s(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(r){return!1}}()?Object.assign:function(e,t){for(var n,a,l=s(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))r.call(n,c)&&(l[c]=n[c]);if(i){a=i(n);for(var d=0;d<a.length;d++)o.call(n,a[d])&&(l[a[d]]=n[a[d]])}}return l}},function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}}(),e.exports=n(11)},,function(e,t,n){"use strict";var i=n(7),r="function"===typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,s=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,d=r?Symbol.for("react.context"):60110,h=r?Symbol.for("react.forward_ref"):60112,f=r?Symbol.for("react.suspense"):60113,p=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,y="function"===typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||m}function _(){}function k(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||m}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},_.prototype=w.prototype;var x=k.prototype=new _;x.constructor=k,i(x,w.prototype),x.isPureReactComponent=!0;var S={current:null},O=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var i,r={},s=null,a=null;if(null!=t)for(i in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(s=""+t.key),t)O.call(t,i)&&!E.hasOwnProperty(i)&&(r[i]=t[i]);var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];r.children=u}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===r[i]&&(r[i]=l[i]);return{$$typeof:o,type:e,key:s,ref:a,props:r,_owner:S.current}}function M(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var D=/\/+/g,C=[];function P(e,t,n,i){if(C.length){var r=C.pop();return r.result=e,r.keyPrefix=t,r.func=n,r.context=i,r.count=0,r}return{result:e,keyPrefix:t,func:n,context:i,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function I(e,t,n){return null==e?0:function e(t,n,i,r){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var l=!1;if(null===t)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case o:case s:l=!0}}if(l)return i(r,t,""===n?"."+A(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var c=n+A(a=t[u],u);l+=e(a,c,i,r)}else if(null===t||"object"!==typeof t?c=null:c="function"===typeof(c=y&&t[y]||t["@@iterator"])?c:null,"function"===typeof c)for(t=c.call(t),u=0;!(a=t.next()).done;)l+=e(a=a.value,c=n+A(a,u++),i,r);else if("object"===a)throw i=""+t,Error(g(31,"[object Object]"===i?"object with keys {"+Object.keys(t).join(", ")+"}":i,""));return l}(e,"",t,n)}function A(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function F(e,t){e.func.call(e.context,t,e.count++)}function R(e,t,n){var i=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?j(e,i,n,(function(e){return e})):null!=e&&(M(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,r+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(D,"$&/")+"/")+n)),i.push(e))}function j(e,t,n,i,r){var o="";null!=n&&(o=(""+n).replace(D,"$&/")+"/"),I(e,R,t=P(t,o,i,r)),N(t)}var L={current:null};function z(){var e=L.current;if(null===e)throw Error(g(321));return e}var Y={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:i};t.Children={map:function(e,t,n){if(null==e)return e;var i=[];return j(e,i,null,t,n),i},forEach:function(e,t,n){if(null==e)return e;I(e,F,t=P(null,null,t,n)),N(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return j(e,t,null,(function(e){return e})),t},only:function(e){if(!M(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=u,t.PureComponent=k,t.StrictMode=l,t.Suspense=f,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Y,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error(g(267,e));var r=i({},e.props),s=e.key,a=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,l=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)O.call(t,c)&&!E.hasOwnProperty(c)&&(r[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)r.children=n;else if(1<c){u=Array(c);for(var d=0;d<c;d++)u[d]=arguments[d+2];r.children=u}return{$$typeof:o,type:e.type,key:s,ref:a,props:r,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:h,render:e}},t.isValidElement=M,t.lazy=function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return z().useCallback(e,t)},t.useContext=function(e,t){return z().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return z().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return z().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return z().useLayoutEffect(e,t)},t.useMemo=function(e,t){return z().useMemo(e,t)},t.useReducer=function(e,t,n){return z().useReducer(e,t,n)},t.useRef=function(e){return z().useRef(e)},t.useState=function(e){return z().useState(e)},t.version="16.13.0"},function(e,t,n){"use strict";var i=n(0),r=n(7),o=n(12);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!i)throw Error(s(227));function a(e,t,n,i,r,o,s,a,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var l=!1,u=null,c=!1,d=null,h={onError:function(e){l=!0,u=e}};function f(e,t,n,i,r,o,s,c,d){l=!1,u=null,a.apply(h,arguments)}var p=null,v=null,y=null;function g(e,t,n){var i=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,i,r,o,a,h,p){if(f.apply(this,arguments),l){if(!l)throw Error(s(198));var v=u;l=!1,u=null,c||(c=!0,d=v)}}(i,t,void 0,e),e.currentTarget=null}var m=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;m.hasOwnProperty("ReactCurrentDispatcher")||(m.ReactCurrentDispatcher={current:null}),m.hasOwnProperty("ReactCurrentBatchConfig")||(m.ReactCurrentBatchConfig={suspense:null});var b=/^(.*)[\\\/]/,w="function"===typeof Symbol&&Symbol.for,_=w?Symbol.for("react.element"):60103,k=w?Symbol.for("react.portal"):60106,x=w?Symbol.for("react.fragment"):60107,S=w?Symbol.for("react.strict_mode"):60108,O=w?Symbol.for("react.profiler"):60114,E=w?Symbol.for("react.provider"):60109,T=w?Symbol.for("react.context"):60110,M=w?Symbol.for("react.concurrent_mode"):60111,D=w?Symbol.for("react.forward_ref"):60112,C=w?Symbol.for("react.suspense"):60113,P=w?Symbol.for("react.suspense_list"):60120,N=w?Symbol.for("react.memo"):60115,I=w?Symbol.for("react.lazy"):60116,A=w?Symbol.for("react.block"):60121,F="function"===typeof Symbol&&Symbol.iterator;function R(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}function j(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case x:return"Fragment";case k:return"Portal";case O:return"Profiler";case S:return"StrictMode";case C:return"Suspense";case P:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case T:return"Context.Consumer";case E:return"Context.Provider";case D:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case N:return j(e.type);case A:return j(e.render);case I:if(e=1===e._status?e._result:null)return j(e)}return null}function L(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var i=e._debugOwner,r=e._debugSource,o=j(e.type);n=null,i&&(n=j(i.type)),i=o,o="",r?o=" (at "+r.fileName.replace(b,"")+":"+r.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(i||"Unknown")+o}t+=n,e=e.return}while(e);return t}var z=null,Y={};function B(){if(z)for(var e in Y){var t=Y[e],n=z.indexOf(e);if(!(-1<n))throw Error(s(96,e));if(!W[n]){if(!t.extractEvents)throw Error(s(97,e));for(var i in W[n]=t,n=t.eventTypes){var r=void 0,o=n[i],a=t,l=i;if(U.hasOwnProperty(l))throw Error(s(99,l));U[l]=o;var u=o.phasedRegistrationNames;if(u){for(r in u)u.hasOwnProperty(r)&&H(u[r],a,l);r=!0}else o.registrationName?(H(o.registrationName,a,l),r=!0):r=!1;if(!r)throw Error(s(98,i,e))}}}}function H(e,t,n){if(V[e])throw Error(s(100,e));V[e]=t,G[e]=t.eventTypes[n].dependencies}var W=[],U={},V={},G={};function q(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var i=e[t];if(!Y.hasOwnProperty(t)||Y[t]!==i){if(Y[t])throw Error(s(102,t));Y[t]=i,n=!0}}n&&B()}var $=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),Z=null,Q=null,X=null;function K(e){if(e=v(e)){if("function"!==typeof Z)throw Error(s(280));var t=e.stateNode;t&&(t=p(t),Z(e.stateNode,e.type,t))}}function J(e){Q?X?X.push(e):X=[e]:Q=e}function ee(){if(Q){var e=Q,t=X;if(X=Q=null,K(e),t)for(e=0;e<t.length;e++)K(t[e])}}function te(e,t){return e(t)}function ne(e,t,n,i,r){return e(t,n,i,r)}function ie(){}var re=te,oe=!1,se=!1;function ae(){null===Q&&null===X||(ie(),ee())}function le(e,t,n){if(se)return e(t,n);se=!0;try{return re(e,t,n)}finally{se=!1,ae()}}var ue=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ce=Object.prototype.hasOwnProperty,de={},he={};function fe(e,t,n,i,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var pe={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){pe[e]=new fe(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];pe[t]=new fe(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){pe[e]=new fe(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){pe[e]=new fe(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){pe[e]=new fe(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){pe[e]=new fe(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){pe[e]=new fe(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){pe[e]=new fe(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){pe[e]=new fe(e,5,!1,e.toLowerCase(),null,!1)}));var ve=/[\-:]([a-z])/g;function ye(e){return e[1].toUpperCase()}function ge(e,t,n,i){var r=pe.hasOwnProperty(t)?pe[t]:null;(null!==r?0===r.type:!i&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,i){if(null===t||"undefined"===typeof t||function(e,t,n,i){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,i))return!0;if(i)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,i)&&(n=null),i||null===r?function(e){return!!ce.call(he,e)||!ce.call(de,e)&&(ue.test(e)?he[e]=!0:(de[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,i=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,i?e.setAttributeNS(i,t,n):e.setAttribute(t,n))))}function me(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){i=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function _e(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),i="";return e&&(i=be(e)?e.checked?"true":"false":e.value),(e=i)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return r({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;n=me(null!=t.value?t.value:n),e._wrapperState={initialChecked:i,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&ge(e,"checked",t,!1)}function Oe(e,t){Se(e,t);var n=me(t.value),i=t.type;if(null!=n)"number"===i?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,me(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ee(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Me(e,t){return e=r({children:void 0},t),(t=function(e){var t="";return i.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function De(e,t,n,i){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&i&&(e[n].defaultSelected=!0)}else{for(n=""+me(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(i&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function Ce(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return r({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Pe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:me(n)}}function Ne(e,t){var n=me(t.value),i=me(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=i&&(e.defaultValue=""+i)}function Ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(ve,ye);pe[t]=new fe(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(ve,ye);pe[t]=new fe(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(ve,ye);pe[t]=new fe(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){pe[e]=new fe(e,1,!1,e.toLowerCase(),null,!1)})),pe.xlinkHref=new fe("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){pe[e]=new fe(e,1,!1,e.toLowerCase(),null,!0)}));var Ae="http://www.w3.org/1999/xhtml",Fe="http://www.w3.org/2000/svg";function Re(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function je(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Re(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Le,ze=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,i,r){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Fe||"innerHTML"in e)e.innerHTML=t;else{for((Le=Le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var He={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},We={},Ue={};function Ve(e){if(We[e])return We[e];if(!He[e])return e;var t,n=He[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ue)return We[e]=n[t];return e}$&&(Ue=document.createElement("div").style,"AnimationEvent"in window||(delete He.animationend.animation,delete He.animationiteration.animation,delete He.animationstart.animation),"TransitionEvent"in window||delete He.transitionend.transition);var Ge=Ve("animationend"),qe=Ve("animationiteration"),$e=Ve("animationstart"),Ze=Ve("transitionend"),Qe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"===typeof WeakMap?WeakMap:Map);function Ke(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(s(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,i=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(i=r.return)){n=i;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return tt(r),e;if(o===i)return tt(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==i.return)n=r,i=o;else{for(var a=!1,l=r.child;l;){if(l===n){a=!0,n=r,i=o;break}if(l===i){a=!0,i=r,n=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===n){a=!0,n=o,i=r;break}if(l===i){a=!0,i=o,n=r;break}l=l.sibling}if(!a)throw Error(s(189))}}if(n.alternate!==i)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function it(e,t){if(null==t)throw Error(s(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function st(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var i=0;i<t.length&&!e.isPropagationStopped();i++)g(e,t[i],n[i]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(ot=it(ot,e)),e=ot,ot=null,e){if(rt(e,st),ot)throw Error(s(95));if(c)throw e=d,c=!1,d=null,e}}function lt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"===typeof t[e]),t}var ct=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ht(e,t,n,i){if(ct.length){var r=ct.pop();return r.topLevelType=e,r.eventSystemFlags=i,r.nativeEvent=t,r.targetInst=n,r}return{topLevelType:e,eventSystemFlags:i,nativeEvent:t,targetInst:n,ancestors:[]}}function ft(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var i=n;if(3===i.tag)i=i.stateNode.containerInfo;else{for(;i.return;)i=i.return;i=3!==i.tag?null:i.stateNode.containerInfo}if(!i)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(i)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var r=lt(e.nativeEvent);i=e.topLevelType;var o=e.nativeEvent,s=e.eventSystemFlags;0===n&&(s|=64);for(var a=null,l=0;l<W.length;l++){var u=W[l];u&&(u=u.extractEvents(i,t,o,r,s))&&(a=it(a,u))}at(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":$t(t,"scroll",!0);break;case"focus":case"blur":$t(t,"focus",!0),$t(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&$t(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Qe.indexOf(e)&&qt(e,t)}n.set(e,null)}}var vt,yt,gt,mt=!1,bt=[],wt=null,_t=null,kt=null,xt=new Map,St=new Map,Ot=[],Et="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Mt(e,t,n,i,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r,container:i}}function Dt(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":_t=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":St.delete(t.pointerId)}}function Ct(e,t,n,i,r,o){return null===e||e.nativeEvent!==o?(e=Mt(t,n,i,r,o),null!==t&&(null!==(t=Mn(t))&&yt(t)),e):(e.eventSystemFlags|=i,e)}function Pt(e){var t=Tn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){gt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Kt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Mn(t);return null!==n&&yt(n),e.blockedOn=t,!1}return!0}function It(e,t,n){Nt(e)&&n.delete(t)}function At(){for(mt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Mn(e.blockedOn))&&vt(e);break}var t=Kt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&Nt(wt)&&(wt=null),null!==_t&&Nt(_t)&&(_t=null),null!==kt&&Nt(kt)&&(kt=null),xt.forEach(It),St.forEach(It)}function Ft(e,t){e.blockedOn===t&&(e.blockedOn=null,mt||(mt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,At)))}function Rt(e){function t(t){return Ft(t,e)}if(0<bt.length){Ft(bt[0],e);for(var n=1;n<bt.length;n++){var i=bt[n];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==wt&&Ft(wt,e),null!==_t&&Ft(_t,e),null!==kt&&Ft(kt,e),xt.forEach(t),St.forEach(t),n=0;n<Ot.length;n++)(i=Ot[n]).blockedOn===e&&(i.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)Pt(n),null===n.blockedOn&&Ot.shift()}var jt={},Lt=new Map,zt=new Map,Yt=["abort","abort",Ge,"animationEnd",qe,"animationIteration",$e,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ze,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var i=e[n],r=e[n+1],o="on"+(r[0].toUpperCase()+r.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[i],eventPriority:t},zt.set(i,t),Lt.set(i,o),jt[r]=o}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Yt,2);for(var Ht="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Wt=0;Wt<Ht.length;Wt++)zt.set(Ht[Wt],0);var Ut=o.unstable_UserBlockingPriority,Vt=o.unstable_runWithPriority,Gt=!0;function qt(e,t){$t(t,e,!1)}function $t(e,t,n){var i=zt.get(t);switch(void 0===i?2:i){case 0:i=Zt.bind(null,t,1,e);break;case 1:i=Qt.bind(null,t,1,e);break;default:i=Xt.bind(null,t,1,e)}n?e.addEventListener(t,i,!0):e.addEventListener(t,i,!1)}function Zt(e,t,n,i){oe||ie();var r=Xt,o=oe;oe=!0;try{ne(r,e,t,n,i)}finally{(oe=o)||ae()}}function Qt(e,t,n,i){Vt(Ut,Xt.bind(null,e,t,n,i))}function Xt(e,t,n,i){if(Gt)if(0<bt.length&&-1<Et.indexOf(e))e=Mt(null,e,t,n,i),bt.push(e);else{var r=Kt(e,t,n,i);if(null===r)Dt(e,i);else if(-1<Et.indexOf(e))e=Mt(r,e,t,n,i),bt.push(e);else if(!function(e,t,n,i,r){switch(t){case"focus":return wt=Ct(wt,e,t,n,i,r),!0;case"dragenter":return _t=Ct(_t,e,t,n,i,r),!0;case"mouseover":return kt=Ct(kt,e,t,n,i,r),!0;case"pointerover":var o=r.pointerId;return xt.set(o,Ct(xt.get(o)||null,e,t,n,i,r)),!0;case"gotpointercapture":return o=r.pointerId,St.set(o,Ct(St.get(o)||null,e,t,n,i,r)),!0}return!1}(r,e,t,n,i)){Dt(e,i),e=ht(e,i,null,t);try{le(ft,e)}finally{dt(e)}}}}function Kt(e,t,n,i){if(null!==(n=Tn(n=lt(i)))){var r=Je(n);if(null===r)n=null;else{var o=r.tag;if(13===o){if(null!==(n=et(r)))return n;n=null}else if(3===o){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;n=null}else r!==n&&(n=null)}}e=ht(e,i,n,t);try{le(ft,e)}finally{dt(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var i=0===n.indexOf("--"),r=tn(n,t[n],i);"float"===n&&(n="cssFloat"),i?e.setProperty(n,r):e[n]=r}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if(!("object"===typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62,""))}}function sn(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=Ae;function ln(e,t){var n=Ke(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=G[t];for(var i=0;i<t.length;i++)pt(t[i],e,n)}function un(){}function cn(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function hn(e,t){var n,i=dn(e);for(e=0;i;){if(3===i.nodeType){if(n=e+i.textContent.length,e<=t&&n>=t)return{node:i,offset:t-e};e=n}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=dn(i)}}function fn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(i){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function pn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var vn=null,yn=null;function gn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function mn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"===typeof setTimeout?setTimeout:void 0,wn="function"===typeof clearTimeout?clearTimeout:void 0;function _n(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function kn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var xn=Math.random().toString(36).slice(2),Sn="__reactInternalInstance$"+xn,On="__reactEventHandlers$"+xn,En="__reactContainere$"+xn;function Tn(e){var t=e[Sn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[En]||n[Sn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=kn(e);null!==e;){if(n=e[Sn])return n;e=kn(e)}return t}n=(e=n).parentNode}return null}function Mn(e){return!(e=e[Sn]||e[En])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Dn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function Cn(e){return e[On]||null}function Pn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var i=p(n);if(!i)return null;n=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}function In(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=it(n._dispatchListeners,t),n._dispatchInstances=it(n._dispatchInstances,e))}function An(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Pn(t);for(t=n.length;0<t--;)In(n[t],"captured",e);for(t=0;t<n.length;t++)In(n[t],"bubbled",e)}}function Fn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=it(n._dispatchListeners,t),n._dispatchInstances=it(n._dispatchInstances,e))}function Rn(e){e&&e.dispatchConfig.registrationName&&Fn(e._targetInst,null,e)}function jn(e){rt(e,An)}var Ln=null,zn=null,Yn=null;function Bn(){if(Yn)return Yn;var e,t,n=zn,i=n.length,r="value"in Ln?Ln.value:Ln.textContent,o=r.length;for(e=0;e<i&&n[e]===r[e];e++);var s=i-e;for(t=1;t<=s&&n[i-t]===r[o-t];t++);return Yn=r.slice(e,1<t?1-t:void 0)}function Hn(){return!0}function Wn(){return!1}function Un(e,t,n,i){for(var r in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(r)&&((t=e[r])?this[r]=t(n):"target"===r?this.target=i:this[r]=n[r]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Hn:Wn,this.isPropagationStopped=Wn,this}function Vn(e,t,n,i){if(this.eventPool.length){var r=this.eventPool.pop();return this.call(r,e,t,n,i),r}return new this(e,t,n,i)}function Gn(e){if(!(e instanceof this))throw Error(s(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function qn(e){e.eventPool=[],e.getPooled=Vn,e.release=Gn}r(Un.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Hn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Hn)},persist:function(){this.isPersistent=Hn},isPersistent:Wn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wn,this._dispatchInstances=this._dispatchListeners=null}}),Un.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Un.extend=function(e){function t(){}function n(){return i.apply(this,arguments)}var i=this;t.prototype=i.prototype;var o=new t;return r(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=r({},i.Interface,e),n.extend=i.extend,qn(n),n},qn(Un);var $n=Un.extend({data:null}),Zn=Un.extend({data:null}),Qn=[9,13,27,32],Xn=$&&"CompositionEvent"in window,Kn=null;$&&"documentMode"in document&&(Kn=document.documentMode);var Jn=$&&"TextEvent"in window&&!Kn,ei=$&&(!Xn||Kn&&8<Kn&&11>=Kn),ti=String.fromCharCode(32),ni={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ii=!1;function ri(e,t){switch(e){case"keyup":return-1!==Qn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function oi(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var si=!1;var ai={eventTypes:ni,extractEvents:function(e,t,n,i){var r;if(Xn)e:{switch(e){case"compositionstart":var o=ni.compositionStart;break e;case"compositionend":o=ni.compositionEnd;break e;case"compositionupdate":o=ni.compositionUpdate;break e}o=void 0}else si?ri(e,n)&&(o=ni.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=ni.compositionStart);return o?(ei&&"ko"!==n.locale&&(si||o!==ni.compositionStart?o===ni.compositionEnd&&si&&(r=Bn()):(zn="value"in(Ln=i)?Ln.value:Ln.textContent,si=!0)),o=$n.getPooled(o,t,n,i),r?o.data=r:null!==(r=oi(n))&&(o.data=r),jn(o),r=o):r=null,(e=Jn?function(e,t){switch(e){case"compositionend":return oi(t);case"keypress":return 32!==t.which?null:(ii=!0,ti);case"textInput":return(e=t.data)===ti&&ii?null:e;default:return null}}(e,n):function(e,t){if(si)return"compositionend"===e||!Xn&&ri(e,t)?(e=Bn(),Yn=zn=Ln=null,si=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ei&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Zn.getPooled(ni.beforeInput,t,n,i)).data=e,jn(t)):t=null,null===r?t:null===t?r:[r,t]}},li={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ui(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!li[e.type]:"textarea"===t}var ci={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function di(e,t,n){return(e=Un.getPooled(ci.change,e,t,n)).type="change",J(n),jn(e),e}var hi=null,fi=null;function pi(e){at(e)}function vi(e){if(_e(Dn(e)))return e}function yi(e,t){if("change"===e)return t}var gi=!1;function mi(){hi&&(hi.detachEvent("onpropertychange",bi),fi=hi=null)}function bi(e){if("value"===e.propertyName&&vi(fi))if(e=di(fi,e,lt(e)),oe)at(e);else{oe=!0;try{te(pi,e)}finally{oe=!1,ae()}}}function wi(e,t,n){"focus"===e?(mi(),fi=n,(hi=t).attachEvent("onpropertychange",bi)):"blur"===e&&mi()}function _i(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return vi(fi)}function ki(e,t){if("click"===e)return vi(t)}function xi(e,t){if("input"===e||"change"===e)return vi(t)}$&&(gi=ut("input")&&(!document.documentMode||9<document.documentMode));var Si={eventTypes:ci,_isInputEventSupported:gi,extractEvents:function(e,t,n,i){var r=t?Dn(t):window,o=r.nodeName&&r.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===r.type)var s=yi;else if(ui(r))if(gi)s=xi;else{s=_i;var a=wi}else(o=r.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===r.type||"radio"===r.type)&&(s=ki);if(s&&(s=s(e,t)))return di(s,n,i);a&&a(e,r,t),"blur"===e&&(e=r._wrapperState)&&e.controlled&&"number"===r.type&&Te(r,"number",r.value)}},Oi=Un.extend({view:null,detail:null}),Ei={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ti(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ei[e])&&!!t[e]}function Mi(){return Ti}var Di=0,Ci=0,Pi=!1,Ni=!1,Ii=Oi.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mi,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Di;return Di=e.screenX,Pi?"mousemove"===e.type?e.screenX-t:0:(Pi=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ci;return Ci=e.screenY,Ni?"mousemove"===e.type?e.screenY-t:0:(Ni=!0,0)}}),Ai=Ii.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fi={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ri={eventTypes:Fi,extractEvents:function(e,t,n,i,r){var o="mouseover"===e||"pointerover"===e,s="mouseout"===e||"pointerout"===e;if(o&&0===(32&r)&&(n.relatedTarget||n.fromElement)||!s&&!o)return null;(o=i.window===i?i:(o=i.ownerDocument)?o.defaultView||o.parentWindow:window,s)?(s=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):s=null;if(s===t)return null;if("mouseout"===e||"mouseover"===e)var a=Ii,l=Fi.mouseLeave,u=Fi.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ai,l=Fi.pointerLeave,u=Fi.pointerEnter,c="pointer");if(e=null==s?o:Dn(s),o=null==t?o:Dn(t),(l=a.getPooled(l,s,n,i)).type=c+"leave",l.target=e,l.relatedTarget=o,(n=a.getPooled(u,t,n,i)).type=c+"enter",n.target=o,n.relatedTarget=e,c=t,(i=s)&&c)e:{for(u=c,s=0,e=a=i;e;e=Pn(e))s++;for(e=0,t=u;t;t=Pn(t))e++;for(;0<s-e;)a=Pn(a),s--;for(;0<e-s;)u=Pn(u),e--;for(;s--;){if(a===u||a===u.alternate)break e;a=Pn(a),u=Pn(u)}a=null}else a=null;for(u=a,a=[];i&&i!==u&&(null===(s=i.alternate)||s!==u);)a.push(i),i=Pn(i);for(i=[];c&&c!==u&&(null===(s=c.alternate)||s!==u);)i.push(c),c=Pn(c);for(c=0;c<a.length;c++)Fn(a[c],"bubbled",l);for(c=i.length;0<c--;)Fn(i[c],"captured",n);return 0===(64&r)?[l]:[l,n]}};var ji="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},Li=Object.prototype.hasOwnProperty;function zi(e,t){if(ji(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++)if(!Li.call(t,n[i])||!ji(e[n[i]],t[n[i]]))return!1;return!0}var Yi=$&&"documentMode"in document&&11>=document.documentMode,Bi={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Hi=null,Wi=null,Ui=null,Vi=!1;function Gi(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vi||null==Hi||Hi!==cn(n)?null:("selectionStart"in(n=Hi)&&pn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Ui&&zi(Ui,n)?null:(Ui=n,(e=Un.getPooled(Bi.select,Wi,e,t)).type="select",e.target=Hi,jn(e),e))}var qi={eventTypes:Bi,extractEvents:function(e,t,n,i,r,o){if(!(o=!(r=o||(i.window===i?i.document:9===i.nodeType?i:i.ownerDocument)))){e:{r=Ke(r),o=G.onSelect;for(var s=0;s<o.length;s++)if(!r.has(o[s])){r=!1;break e}r=!0}o=!r}if(o)return null;switch(r=t?Dn(t):window,e){case"focus":(ui(r)||"true"===r.contentEditable)&&(Hi=r,Wi=t,Ui=null);break;case"blur":Ui=Wi=Hi=null;break;case"mousedown":Vi=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vi=!1,Gi(n,i);case"selectionchange":if(Yi)break;case"keydown":case"keyup":return Gi(n,i)}return null}},$i=Un.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zi=Un.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Qi=Oi.extend({relatedTarget:null});function Xi(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Ki={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ji={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},er=Oi.extend({key:function(e){if(e.key){var t=Ki[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xi(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ji[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mi,charCode:function(e){return"keypress"===e.type?Xi(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xi(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),tr=Ii.extend({dataTransfer:null}),nr=Oi.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mi}),ir=Un.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),rr=Ii.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),or={eventTypes:jt,extractEvents:function(e,t,n,i){var r=Lt.get(e);if(!r)return null;switch(e){case"keypress":if(0===Xi(n))return null;case"keydown":case"keyup":e=er;break;case"blur":case"focus":e=Qi;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Ii;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=tr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=nr;break;case Ge:case qe:case $e:e=$i;break;case Ze:e=ir;break;case"scroll":e=Oi;break;case"wheel":e=rr;break;case"copy":case"cut":case"paste":e=Zi;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ai;break;default:e=Un}return jn(t=e.getPooled(r,t,n,i)),t}};if(z)throw Error(s(101));z=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),B(),p=Cn,v=Mn,y=Dn,q({SimpleEventPlugin:or,EnterLeaveEventPlugin:Ri,ChangeEventPlugin:Si,SelectEventPlugin:qi,BeforeInputEventPlugin:ai});var sr=[],ar=-1;function lr(e){0>ar||(e.current=sr[ar],sr[ar]=null,ar--)}function ur(e,t){ar++,sr[ar]=e.current,e.current=t}var cr={},dr={current:cr},hr={current:!1},fr=cr;function pr(e,t){var n=e.type.contextTypes;if(!n)return cr;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var r,o={};for(r in n)o[r]=t[r];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function vr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function yr(){lr(hr),lr(dr)}function gr(e,t,n){if(dr.current!==cr)throw Error(s(168));ur(dr,t),ur(hr,n)}function mr(e,t,n){var i=e.stateNode;if(e=t.childContextTypes,"function"!==typeof i.getChildContext)return n;for(var o in i=i.getChildContext())if(!(o in e))throw Error(s(108,j(t)||"Unknown",o));return r({},n,{},i)}function br(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||cr,fr=dr.current,ur(dr,e),ur(hr,hr.current),!0}function wr(e,t,n){var i=e.stateNode;if(!i)throw Error(s(169));n?(e=mr(e,t,fr),i.__reactInternalMemoizedMergedChildContext=e,lr(hr),lr(dr),ur(dr,e)):lr(hr),ur(hr,n)}var _r=o.unstable_runWithPriority,kr=o.unstable_scheduleCallback,xr=o.unstable_cancelCallback,Sr=o.unstable_requestPaint,Or=o.unstable_now,Er=o.unstable_getCurrentPriorityLevel,Tr=o.unstable_ImmediatePriority,Mr=o.unstable_UserBlockingPriority,Dr=o.unstable_NormalPriority,Cr=o.unstable_LowPriority,Pr=o.unstable_IdlePriority,Nr={},Ir=o.unstable_shouldYield,Ar=void 0!==Sr?Sr:function(){},Fr=null,Rr=null,jr=!1,Lr=Or(),zr=1e4>Lr?Or:function(){return Or()-Lr};function Yr(){switch(Er()){case Tr:return 99;case Mr:return 98;case Dr:return 97;case Cr:return 96;case Pr:return 95;default:throw Error(s(332))}}function Br(e){switch(e){case 99:return Tr;case 98:return Mr;case 97:return Dr;case 96:return Cr;case 95:return Pr;default:throw Error(s(332))}}function Hr(e,t){return e=Br(e),_r(e,t)}function Wr(e,t,n){return e=Br(e),kr(e,t,n)}function Ur(e){return null===Fr?(Fr=[e],Rr=kr(Tr,Gr)):Fr.push(e),Nr}function Vr(){if(null!==Rr){var e=Rr;Rr=null,xr(e)}Gr()}function Gr(){if(!jr&&null!==Fr){jr=!0;var e=0;try{var t=Fr;Hr(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fr=null}catch(n){throw null!==Fr&&(Fr=Fr.slice(e+1)),kr(Tr,Vr),n}finally{jr=!1}}}function qr(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function $r(e,t){if(e&&e.defaultProps)for(var n in t=r({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Zr={current:null},Qr=null,Xr=null,Kr=null;function Jr(){Kr=Xr=Qr=null}function eo(e){var t=Zr.current;lr(Zr),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Qr=e,Kr=Xr=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Cs=!0),e.firstContext=null)}function io(e,t){if(Kr!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(Kr=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xr){if(null===Qr)throw Error(s(308));Xr=t,Qr.dependencies={expirationTime:0,firstContext:t,responders:null}}else Xr=Xr.next=t;return e._currentValue}var ro=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function so(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ao(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function lo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function uo(e,t){var n=e.alternate;null!==n&&so(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function co(e,t,n,i){var o=e.updateQueue;ro=!1;var s=o.baseQueue,a=o.shared.pending;if(null!==a){if(null!==s){var l=s.next;s.next=a.next,a.next=l}s=a,o.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=a))}if(null!==s){l=s.next;var u=o.baseState,c=0,d=null,h=null,f=null;if(null!==l)for(var p=l;;){if((a=p.expirationTime)<i){var v={expirationTime:p.expirationTime,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null};null===f?(h=f=v,d=u):f=f.next=v,a>c&&(c=a)}else{null!==f&&(f=f.next={expirationTime:1073741823,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null}),ol(a,p.suspenseConfig);e:{var y=e,g=p;switch(a=t,v=n,g.tag){case 1:if("function"===typeof(y=g.payload)){u=y.call(v,u,a);break e}u=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null===(a="function"===typeof(y=g.payload)?y.call(v,u,a):y)||void 0===a)break e;u=r({},u,a);break e;case 2:ro=!0}}null!==p.callback&&(e.effectTag|=32,null===(a=o.effects)?o.effects=[p]:a.push(p))}if(null===(p=p.next)||p===l){if(null===(a=o.shared.pending))break;p=s.next=a.next,a.next=l,o.baseQueue=s=a,o.shared.pending=null}}null===f?d=u:f.next=h,o.baseState=d,o.baseQueue=f,sl(c),e.expirationTime=c,e.memoizedState=u}}function ho(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],r=i.callback;if(null!==r){if(i.callback=null,i=r,r=n,"function"!==typeof i)throw Error(s(191,i));i.call(r)}}}var fo=m.ReactCurrentBatchConfig,po=(new i.Component).refs;function vo(e,t,n,i){n=null===(n=n(i,t=e.memoizedState))||void 0===n?t:r({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var yo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var i=Ga(),r=fo.suspense;(r=ao(i=qa(i,e,r),r)).payload=t,void 0!==n&&null!==n&&(r.callback=n),lo(e,r),$a(e,i)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var i=Ga(),r=fo.suspense;(r=ao(i=qa(i,e,r),r)).tag=1,r.payload=t,void 0!==n&&null!==n&&(r.callback=n),lo(e,r),$a(e,i)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ga(),i=fo.suspense;(i=ao(n=qa(n,e,i),i)).tag=2,void 0!==t&&null!==t&&(i.callback=t),lo(e,i),$a(e,n)}};function go(e,t,n,i,r,o,s){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,o,s):!t.prototype||!t.prototype.isPureReactComponent||(!zi(n,i)||!zi(r,o))}function mo(e,t,n){var i=!1,r=cr,o=t.contextType;return"object"===typeof o&&null!==o?o=io(o):(r=vr(t)?fr:dr.current,o=(i=null!==(i=t.contextTypes)&&void 0!==i)?pr(e,r):cr),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=yo,e.stateNode=t,t._reactInternalFiber=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),t}function bo(e,t,n,i){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,i),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,i),t.state!==e&&yo.enqueueReplaceState(t,t.state,null)}function wo(e,t,n,i){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=po,oo(e);var o=t.contextType;"object"===typeof o&&null!==o?r.context=io(o):(o=vr(t)?fr:dr.current,r.context=pr(e,o)),co(e,n,r,i),r.state=e.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(vo(e,t,o,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&yo.enqueueReplaceState(r,r.state,null),co(e,n,r,i),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.effectTag|=4)}var _o=Array.isArray;function ko(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var i=n.stateNode}if(!i)throw Error(s(147,e));var r=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===r?t.ref:((t=function(e){var t=i.refs;t===po&&(t=i.refs={}),null===e?delete t[r]:t[r]=e})._stringRef=r,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function xo(e,t){if("textarea"!==e.type)throw Error(s(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function So(e){function t(t,n){if(e){var i=t.lastEffect;null!==i?(i.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,i){if(!e)return null;for(;null!==i;)t(n,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=El(e,t)).index=0,e.sibling=null,e}function o(t,n,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<n?(t.effectTag=2,n):i:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,i){return null===t||6!==t.tag?((t=Dl(n,e.mode,i)).return=e,t):((t=r(t,n)).return=e,t)}function u(e,t,n,i){return null!==t&&t.elementType===n.type?((i=r(t,n.props)).ref=ko(e,t,n),i.return=e,i):((i=Tl(n.type,n.key,n.props,null,e.mode,i)).ref=ko(e,t,n),i.return=e,i)}function c(e,t,n,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Cl(n,e.mode,i)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,i,o){return null===t||7!==t.tag?((t=Ml(n,e.mode,i,o)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Dl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case _:return(n=Tl(t.type,t.key,t.props,null,e.mode,n)).ref=ko(e,null,t),n.return=e,n;case k:return(t=Cl(t,e.mode,n)).return=e,t}if(_o(t)||R(t))return(t=Ml(t,e.mode,n,null)).return=e,t;xo(e,t)}return null}function f(e,t,n,i){var r=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==r?null:l(e,t,""+n,i);if("object"===typeof n&&null!==n){switch(n.$$typeof){case _:return n.key===r?n.type===x?d(e,t,n.props.children,i,r):u(e,t,n,i):null;case k:return n.key===r?c(e,t,n,i):null}if(_o(n)||R(n))return null!==r?null:d(e,t,n,i,null);xo(e,n)}return null}function p(e,t,n,i,r){if("string"===typeof i||"number"===typeof i)return l(t,e=e.get(n)||null,""+i,r);if("object"===typeof i&&null!==i){switch(i.$$typeof){case _:return e=e.get(null===i.key?n:i.key)||null,i.type===x?d(t,e,i.props.children,r,i.key):u(t,e,i,r);case k:return c(t,e=e.get(null===i.key?n:i.key)||null,i,r)}if(_o(i)||R(i))return d(t,e=e.get(n)||null,i,r,null);xo(t,i)}return null}function v(r,s,a,l){for(var u=null,c=null,d=s,v=s=0,y=null;null!==d&&v<a.length;v++){d.index>v?(y=d,d=null):y=d.sibling;var g=f(r,d,a[v],l);if(null===g){null===d&&(d=y);break}e&&d&&null===g.alternate&&t(r,d),s=o(g,s,v),null===c?u=g:c.sibling=g,c=g,d=y}if(v===a.length)return n(r,d),u;if(null===d){for(;v<a.length;v++)null!==(d=h(r,a[v],l))&&(s=o(d,s,v),null===c?u=d:c.sibling=d,c=d);return u}for(d=i(r,d);v<a.length;v++)null!==(y=p(d,r,v,a[v],l))&&(e&&null!==y.alternate&&d.delete(null===y.key?v:y.key),s=o(y,s,v),null===c?u=y:c.sibling=y,c=y);return e&&d.forEach((function(e){return t(r,e)})),u}function y(r,a,l,u){var c=R(l);if("function"!==typeof c)throw Error(s(150));if(null==(l=c.call(l)))throw Error(s(151));for(var d=c=null,v=a,y=a=0,g=null,m=l.next();null!==v&&!m.done;y++,m=l.next()){v.index>y?(g=v,v=null):g=v.sibling;var b=f(r,v,m.value,u);if(null===b){null===v&&(v=g);break}e&&v&&null===b.alternate&&t(r,v),a=o(b,a,y),null===d?c=b:d.sibling=b,d=b,v=g}if(m.done)return n(r,v),c;if(null===v){for(;!m.done;y++,m=l.next())null!==(m=h(r,m.value,u))&&(a=o(m,a,y),null===d?c=m:d.sibling=m,d=m);return c}for(v=i(r,v);!m.done;y++,m=l.next())null!==(m=p(v,r,y,m.value,u))&&(e&&null!==m.alternate&&v.delete(null===m.key?y:m.key),a=o(m,a,y),null===d?c=m:d.sibling=m,d=m);return e&&v.forEach((function(e){return t(r,e)})),c}return function(e,i,o,l){var u="object"===typeof o&&null!==o&&o.type===x&&null===o.key;u&&(o=o.props.children);var c="object"===typeof o&&null!==o;if(c)switch(o.$$typeof){case _:e:{for(c=o.key,u=i;null!==u;){if(u.key===c){switch(u.tag){case 7:if(o.type===x){n(e,u.sibling),(i=r(u,o.props.children)).return=e,e=i;break e}break;default:if(u.elementType===o.type){n(e,u.sibling),(i=r(u,o.props)).ref=ko(e,u,o),i.return=e,e=i;break e}}n(e,u);break}t(e,u),u=u.sibling}o.type===x?((i=Ml(o.props.children,e.mode,l,o.key)).return=e,e=i):((l=Tl(o.type,o.key,o.props,null,e.mode,l)).ref=ko(e,i,o),l.return=e,e=l)}return a(e);case k:e:{for(u=o.key;null!==i;){if(i.key===u){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){n(e,i.sibling),(i=r(i,o.children||[])).return=e,e=i;break e}n(e,i);break}t(e,i),i=i.sibling}(i=Cl(o,e.mode,l)).return=e,e=i}return a(e)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==i&&6===i.tag?(n(e,i.sibling),(i=r(i,o)).return=e,e=i):(n(e,i),(i=Dl(o,e.mode,l)).return=e,e=i),a(e);if(_o(o))return v(e,i,o,l);if(R(o))return y(e,i,o,l);if(c&&xo(e,o),"undefined"===typeof o&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(s(152,e.displayName||e.name||"Component"))}return n(e,i)}}var Oo=So(!0),Eo=So(!1),To={},Mo={current:To},Do={current:To},Co={current:To};function Po(e){if(e===To)throw Error(s(174));return e}function No(e,t){switch(ur(Co,t),ur(Do,e),ur(Mo,To),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:je(null,"");break;default:t=je(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lr(Mo),ur(Mo,t)}function Io(){lr(Mo),lr(Do),lr(Co)}function Ao(e){Po(Co.current);var t=Po(Mo.current),n=je(t,e.type);t!==n&&(ur(Do,e),ur(Mo,n))}function Fo(e){Do.current===e&&(lr(Mo),lr(Do))}var Ro={current:0};function jo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Lo(e,t){return{responder:e,props:t}}var zo=m.ReactCurrentDispatcher,Yo=m.ReactCurrentBatchConfig,Bo=0,Ho=null,Wo=null,Uo=null,Vo=!1;function Go(){throw Error(s(321))}function qo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ji(e[n],t[n]))return!1;return!0}function $o(e,t,n,i,r,o){if(Bo=o,Ho=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,zo.current=null===e||null===e.memoizedState?gs:ms,e=n(i,r),t.expirationTime===Bo){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(s(301));o+=1,Uo=Wo=null,t.updateQueue=null,zo.current=bs,e=n(i,r)}while(t.expirationTime===Bo)}if(zo.current=ys,t=null!==Wo&&null!==Wo.next,Bo=0,Uo=Wo=Ho=null,Vo=!1,t)throw Error(s(300));return e}function Zo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Uo?Ho.memoizedState=Uo=e:Uo=Uo.next=e,Uo}function Qo(){if(null===Wo){var e=Ho.alternate;e=null!==e?e.memoizedState:null}else e=Wo.next;var t=null===Uo?Ho.memoizedState:Uo.next;if(null!==t)Uo=t,Wo=e;else{if(null===e)throw Error(s(310));e={memoizedState:(Wo=e).memoizedState,baseState:Wo.baseState,baseQueue:Wo.baseQueue,queue:Wo.queue,next:null},null===Uo?Ho.memoizedState=Uo=e:Uo=Uo.next=e}return Uo}function Xo(e,t){return"function"===typeof t?t(e):t}function Ko(e){var t=Qo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var i=Wo,r=i.baseQueue,o=n.pending;if(null!==o){if(null!==r){var a=r.next;r.next=o.next,o.next=a}i.baseQueue=r=o,n.pending=null}if(null!==r){r=r.next,i=i.baseState;var l=a=o=null,u=r;do{var c=u.expirationTime;if(c<Bo){var d={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===l?(a=l=d,o=i):l=l.next=d,c>Ho.expirationTime&&(Ho.expirationTime=c,sl(c))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),ol(c,u.suspenseConfig),i=u.eagerReducer===e?u.eagerState:e(i,u.action);u=u.next}while(null!==u&&u!==r);null===l?o=i:l.next=a,ji(i,t.memoizedState)||(Cs=!0),t.memoizedState=i,t.baseState=o,t.baseQueue=l,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function Jo(e){var t=Qo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var i=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var a=r=r.next;do{o=e(o,a.action),a=a.next}while(a!==r);ji(o,t.memoizedState)||(Cs=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,i]}function es(e){var t=Zo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xo,lastRenderedState:e}).dispatch=vs.bind(null,Ho,e),[t.memoizedState,e]}function ts(e,t,n,i){return e={tag:e,create:t,destroy:n,deps:i,next:null},null===(t=Ho.updateQueue)?(t={lastEffect:null},Ho.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(i=n.next,n.next=e,e.next=i,t.lastEffect=e),e}function ns(){return Qo().memoizedState}function is(e,t,n,i){var r=Zo();Ho.effectTag|=e,r.memoizedState=ts(1|t,n,void 0,void 0===i?null:i)}function rs(e,t,n,i){var r=Qo();i=void 0===i?null:i;var o=void 0;if(null!==Wo){var s=Wo.memoizedState;if(o=s.destroy,null!==i&&qo(i,s.deps))return void ts(t,n,o,i)}Ho.effectTag|=e,r.memoizedState=ts(1|t,n,o,i)}function os(e,t){return is(516,4,e,t)}function ss(e,t){return rs(516,4,e,t)}function as(e,t){return rs(4,2,e,t)}function ls(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function us(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,rs(4,2,ls.bind(null,t,e),n)}function cs(){}function ds(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e}function hs(e,t){var n=Qo();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&qo(t,i[1])?i[0]:(n.memoizedState=[e,t],e)}function fs(e,t){var n=Qo();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&qo(t,i[1])?i[0]:(e=e(),n.memoizedState=[e,t],e)}function ps(e,t,n){var i=Yr();Hr(98>i?98:i,(function(){e(!0)})),Hr(97<i?97:i,(function(){var i=Yo.suspense;Yo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Yo.suspense=i}}))}function vs(e,t,n){var i=Ga(),r=fo.suspense;r={expirationTime:i=qa(i,e,r),suspenseConfig:r,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?r.next=r:(r.next=o.next,o.next=r),t.pending=r,o=e.alternate,e===Ho||null!==o&&o===Ho)Vo=!0,r.expirationTime=Bo,Ho.expirationTime=Bo;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var s=t.lastRenderedState,a=o(s,n);if(r.eagerReducer=o,r.eagerState=a,ji(a,s))return}catch(l){}$a(e,i)}}var ys={readContext:io,useCallback:Go,useContext:Go,useEffect:Go,useImperativeHandle:Go,useLayoutEffect:Go,useMemo:Go,useReducer:Go,useRef:Go,useState:Go,useDebugValue:Go,useResponder:Go,useDeferredValue:Go,useTransition:Go},gs={readContext:io,useCallback:ds,useContext:io,useEffect:os,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,is(4,2,ls.bind(null,t,e),n)},useLayoutEffect:function(e,t){return is(4,2,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var i=Zo();return t=void 0!==n?n(t):t,i.memoizedState=i.baseState=t,e=(e=i.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=vs.bind(null,Ho,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:es,useDebugValue:cs,useResponder:Lo,useDeferredValue:function(e,t){var n=es(e),i=n[0],r=n[1];return os((function(){var n=Yo.suspense;Yo.suspense=void 0===t?null:t;try{r(e)}finally{Yo.suspense=n}}),[e,t]),i},useTransition:function(e){var t=es(!1),n=t[0];return t=t[1],[ds(ps.bind(null,t,e),[t,e]),n]}},ms={readContext:io,useCallback:hs,useContext:io,useEffect:ss,useImperativeHandle:us,useLayoutEffect:as,useMemo:fs,useReducer:Ko,useRef:ns,useState:function(){return Ko(Xo)},useDebugValue:cs,useResponder:Lo,useDeferredValue:function(e,t){var n=Ko(Xo),i=n[0],r=n[1];return ss((function(){var n=Yo.suspense;Yo.suspense=void 0===t?null:t;try{r(e)}finally{Yo.suspense=n}}),[e,t]),i},useTransition:function(e){var t=Ko(Xo),n=t[0];return t=t[1],[hs(ps.bind(null,t,e),[t,e]),n]}},bs={readContext:io,useCallback:hs,useContext:io,useEffect:ss,useImperativeHandle:us,useLayoutEffect:as,useMemo:fs,useReducer:Jo,useRef:ns,useState:function(){return Jo(Xo)},useDebugValue:cs,useResponder:Lo,useDeferredValue:function(e,t){var n=Jo(Xo),i=n[0],r=n[1];return ss((function(){var n=Yo.suspense;Yo.suspense=void 0===t?null:t;try{r(e)}finally{Yo.suspense=n}}),[e,t]),i},useTransition:function(e){var t=Jo(Xo),n=t[0];return t=t[1],[hs(ps.bind(null,t,e),[t,e]),n]}},ws=null,_s=null,ks=!1;function xs(e,t){var n=Sl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ss(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Os(e){if(ks){var t=_s;if(t){var n=t;if(!Ss(e,t)){if(!(t=_n(n.nextSibling))||!Ss(e,t))return e.effectTag=-1025&e.effectTag|2,ks=!1,void(ws=e);xs(ws,n)}ws=e,_s=_n(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ks=!1,ws=e}}function Es(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ws=e}function Ts(e){if(e!==ws)return!1;if(!ks)return Es(e),ks=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!mn(t,e.memoizedProps))for(t=_s;t;)xs(e,t),t=_n(t.nextSibling);if(Es(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){_s=_n(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}_s=null}}else _s=ws?_n(e.stateNode.nextSibling):null;return!0}function Ms(){_s=ws=null,ks=!1}var Ds=m.ReactCurrentOwner,Cs=!1;function Ps(e,t,n,i){t.child=null===e?Eo(t,null,n,i):Oo(t,e.child,n,i)}function Ns(e,t,n,i,r){n=n.render;var o=t.ref;return no(t,r),i=$o(e,t,n,i,o,r),null===e||Cs?(t.effectTag|=1,Ps(e,t,i,r),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=r&&(e.expirationTime=0),$s(e,t,r))}function Is(e,t,n,i,r,o){if(null===e){var s=n.type;return"function"!==typeof s||Ol(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Tl(n.type,null,i,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,As(e,t,s,i,r,o))}return s=e.child,r<o&&(r=s.memoizedProps,(n=null!==(n=n.compare)?n:zi)(r,i)&&e.ref===t.ref)?$s(e,t,o):(t.effectTag|=1,(e=El(s,i)).ref=t.ref,e.return=t,t.child=e)}function As(e,t,n,i,r,o){return null!==e&&zi(e.memoizedProps,i)&&e.ref===t.ref&&(Cs=!1,r<o)?(t.expirationTime=e.expirationTime,$s(e,t,o)):Rs(e,t,n,i,o)}function Fs(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Rs(e,t,n,i,r){var o=vr(n)?fr:dr.current;return o=pr(t,o),no(t,r),n=$o(e,t,n,i,o,r),null===e||Cs?(t.effectTag|=1,Ps(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=r&&(e.expirationTime=0),$s(e,t,r))}function js(e,t,n,i,r){if(vr(n)){var o=!0;br(t)}else o=!1;if(no(t,r),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),mo(t,n,i),wo(t,n,i,r),i=!0;else if(null===e){var s=t.stateNode,a=t.memoizedProps;s.props=a;var l=s.context,u=n.contextType;"object"===typeof u&&null!==u?u=io(u):u=pr(t,u=vr(n)?fr:dr.current);var c=n.getDerivedStateFromProps,d="function"===typeof c||"function"===typeof s.getSnapshotBeforeUpdate;d||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(a!==i||l!==u)&&bo(t,s,i,u),ro=!1;var h=t.memoizedState;s.state=h,co(t,i,s,r),l=t.memoizedState,a!==i||h!==l||hr.current||ro?("function"===typeof c&&(vo(t,n,c,i),l=t.memoizedState),(a=ro||go(t,n,a,i,h,l,u))?(d||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(t.effectTag|=4)):("function"===typeof s.componentDidMount&&(t.effectTag|=4),t.memoizedProps=i,t.memoizedState=l),s.props=i,s.state=l,s.context=u,i=a):("function"===typeof s.componentDidMount&&(t.effectTag|=4),i=!1)}else s=t.stateNode,so(e,t),a=t.memoizedProps,s.props=t.type===t.elementType?a:$r(t.type,a),l=s.context,"object"===typeof(u=n.contextType)&&null!==u?u=io(u):u=pr(t,u=vr(n)?fr:dr.current),(d="function"===typeof(c=n.getDerivedStateFromProps)||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(a!==i||l!==u)&&bo(t,s,i,u),ro=!1,l=t.memoizedState,s.state=l,co(t,i,s,r),h=t.memoizedState,a!==i||l!==h||hr.current||ro?("function"===typeof c&&(vo(t,n,c,i),h=t.memoizedState),(c=ro||go(t,n,a,i,l,h,u))?(d||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(i,h,u),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(i,h,u)),"function"===typeof s.componentDidUpdate&&(t.effectTag|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!==typeof s.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!==typeof s.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=i,t.memoizedState=h),s.props=i,s.state=h,s.context=u,i=c):("function"!==typeof s.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!==typeof s.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),i=!1);return Ls(e,t,n,i,o,r)}function Ls(e,t,n,i,r,o){Fs(e,t);var s=0!==(64&t.effectTag);if(!i&&!s)return r&&wr(t,n,!1),$s(e,t,o);i=t.stateNode,Ds.current=t;var a=s&&"function"!==typeof n.getDerivedStateFromError?null:i.render();return t.effectTag|=1,null!==e&&s?(t.child=Oo(t,e.child,null,o),t.child=Oo(t,null,a,o)):Ps(e,t,a,o),t.memoizedState=i.state,r&&wr(t,n,!0),t.child}function zs(e){var t=e.stateNode;t.pendingContext?gr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&gr(0,t.context,!1),No(e,t.containerInfo)}var Ys,Bs,Hs,Ws={dehydrated:null,retryTime:0};function Us(e,t,n){var i,r=t.mode,o=t.pendingProps,s=Ro.current,a=!1;if((i=0!==(64&t.effectTag))||(i=0!==(2&s)&&(null===e||null!==e.memoizedState)),i?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(s|=1),ur(Ro,1&s),null===e){if(void 0!==o.fallback&&Os(t),a){if(a=o.fallback,(o=Ml(null,r,0,null)).return=t,0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Ml(a,r,n,null)).return=t,o.sibling=n,t.memoizedState=Ws,t.child=o,n}return r=o.children,t.memoizedState=null,t.child=Eo(t,null,r,n)}if(null!==e.memoizedState){if(r=(e=e.child).sibling,a){if(o=o.fallback,(n=El(e,e.pendingProps)).return=t,0===(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(r=El(r,o)).return=t,n.sibling=r,n.childExpirationTime=0,t.memoizedState=Ws,t.child=n,r}return n=Oo(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=o.fallback,(o=Ml(null,r,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Ml(a,r,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=Ws,t.child=o,n}return t.memoizedState=null,t.child=Oo(t,e,o.children,n)}function Vs(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Gs(e,t,n,i,r,o){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:n,tailExpiration:0,tailMode:r,lastEffect:o}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=i,s.tail=n,s.tailExpiration=0,s.tailMode=r,s.lastEffect=o)}function qs(e,t,n){var i=t.pendingProps,r=i.revealOrder,o=i.tail;if(Ps(e,t,i.children,n),0!==(2&(i=Ro.current)))i=1&i|2,t.effectTag|=64;else{if(null!==e&&0!==(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Vs(e,n);else if(19===e.tag)Vs(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(ur(Ro,i),0===(2&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===jo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Gs(t,!1,r,n,o,t.lastEffect);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===jo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Gs(t,!0,n,null,o,t.lastEffect);break;case"together":Gs(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function $s(e,t,n){null!==e&&(t.dependencies=e.dependencies);var i=t.expirationTime;if(0!==i&&sl(i),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=El(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=El(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Zs(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Qs(e,t,n){var i=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return vr(t.type)&&yr(),null;case 3:return Io(),lr(hr),lr(dr),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ts(t)||(t.effectTag|=4),null;case 5:Fo(t),n=Po(Co.current);var o=t.type;if(null!==e&&null!=t.stateNode)Bs(e,t,o,i,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!i){if(null===t.stateNode)throw Error(s(166));return null}if(e=Po(Mo.current),Ts(t)){i=t.stateNode,o=t.type;var a=t.memoizedProps;switch(i[Sn]=t,i[On]=a,o){case"iframe":case"object":case"embed":qt("load",i);break;case"video":case"audio":for(e=0;e<Qe.length;e++)qt(Qe[e],i);break;case"source":qt("error",i);break;case"img":case"image":case"link":qt("error",i),qt("load",i);break;case"form":qt("reset",i),qt("submit",i);break;case"details":qt("toggle",i);break;case"input":xe(i,a),qt("invalid",i),ln(n,"onChange");break;case"select":i._wrapperState={wasMultiple:!!a.multiple},qt("invalid",i),ln(n,"onChange");break;case"textarea":Pe(i,a),qt("invalid",i),ln(n,"onChange")}for(var l in on(o,a),e=null,a)if(a.hasOwnProperty(l)){var u=a[l];"children"===l?"string"===typeof u?i.textContent!==u&&(e=["children",u]):"number"===typeof u&&i.textContent!==""+u&&(e=["children",""+u]):V.hasOwnProperty(l)&&null!=u&&ln(n,l)}switch(o){case"input":we(i),Ee(i,a,!0);break;case"textarea":we(i),Ie(i);break;case"select":case"option":break;default:"function"===typeof a.onClick&&(i.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===an&&(e=Re(o)),e===an?"script"===o?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof i.is?e=l.createElement(o,{is:i.is}):(e=l.createElement(o),"select"===o&&(l=e,i.multiple?l.multiple=!0:i.size&&(l.size=i.size))):e=l.createElementNS(e,o),e[Sn]=t,e[On]=i,Ys(e,t),t.stateNode=e,l=sn(o,i),o){case"iframe":case"object":case"embed":qt("load",e),u=i;break;case"video":case"audio":for(u=0;u<Qe.length;u++)qt(Qe[u],e);u=i;break;case"source":qt("error",e),u=i;break;case"img":case"image":case"link":qt("error",e),qt("load",e),u=i;break;case"form":qt("reset",e),qt("submit",e),u=i;break;case"details":qt("toggle",e),u=i;break;case"input":xe(e,i),u=ke(e,i),qt("invalid",e),ln(n,"onChange");break;case"option":u=Me(e,i);break;case"select":e._wrapperState={wasMultiple:!!i.multiple},u=r({},i,{value:void 0}),qt("invalid",e),ln(n,"onChange");break;case"textarea":Pe(e,i),u=Ce(e,i),qt("invalid",e),ln(n,"onChange");break;default:u=i}on(o,u);var c=u;for(a in c)if(c.hasOwnProperty(a)){var d=c[a];"style"===a?nn(e,d):"dangerouslySetInnerHTML"===a?null!=(d=d?d.__html:void 0)&&ze(e,d):"children"===a?"string"===typeof d?("textarea"!==o||""!==d)&&Ye(e,d):"number"===typeof d&&Ye(e,""+d):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(V.hasOwnProperty(a)?null!=d&&ln(n,a):null!=d&&ge(e,a,d,l))}switch(o){case"input":we(e),Ee(e,i,!1);break;case"textarea":we(e),Ie(e);break;case"option":null!=i.value&&e.setAttribute("value",""+me(i.value));break;case"select":e.multiple=!!i.multiple,null!=(n=i.value)?De(e,!!i.multiple,n,!1):null!=i.defaultValue&&De(e,!!i.multiple,i.defaultValue,!0);break;default:"function"===typeof u.onClick&&(e.onclick=un)}gn(o,i)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Hs(0,t,e.memoizedProps,i);else{if("string"!==typeof i&&null===t.stateNode)throw Error(s(166));n=Po(Co.current),Po(Mo.current),Ts(t)?(n=t.stateNode,i=t.memoizedProps,n[Sn]=t,n.nodeValue!==i&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(i))[Sn]=t,t.stateNode=n)}return null;case 13:return lr(Ro),i=t.memoizedState,0!==(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==i,i=!1,null===e?void 0!==t.memoizedProps.fallback&&Ts(t):(i=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=o,o.nextEffect=a):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!i&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Ro.current)?Ta===wa&&(Ta=_a):(Ta!==wa&&Ta!==_a||(Ta=ka),0!==Na&&null!==Sa&&(Il(Sa,Ea),Al(Sa,Na)))),(n||i)&&(t.effectTag|=4),null);case 4:return Io(),null;case 10:return eo(t),null;case 17:return vr(t.type)&&yr(),null;case 19:if(lr(Ro),null===(i=t.memoizedState))return null;if(o=0!==(64&t.effectTag),null===(a=i.rendering)){if(o)Zs(i,!1);else if(Ta!==wa||null!==e&&0!==(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=jo(a))){for(t.effectTag|=64,Zs(i,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===i.lastEffect&&(t.firstEffect=null),t.lastEffect=i.lastEffect,i=t.child;null!==i;)a=n,(o=i).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=a,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,a=e.dependencies,o.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),i=i.sibling;return ur(Ro,1&Ro.current|2),t.child}a=a.sibling}}else{if(!o)if(null!==(e=jo(a))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Zs(i,!0),null===i.tail&&"hidden"===i.tailMode&&!a.alternate)return null!==(t=t.lastEffect=i.lastEffect)&&(t.nextEffect=null),null}else 2*zr()-i.renderingStartTime>i.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Zs(i,!1),t.expirationTime=t.childExpirationTime=n-1);i.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=i.last)?n.sibling=a:t.child=a,i.last=a)}return null!==i.tail?(0===i.tailExpiration&&(i.tailExpiration=zr()+500),n=i.tail,i.rendering=n,i.tail=n.sibling,i.lastEffect=t.lastEffect,i.renderingStartTime=zr(),n.sibling=null,t=Ro.current,ur(Ro,o?1&t|2:1&t),n):null}throw Error(s(156,t.tag))}function Xs(e){switch(e.tag){case 1:vr(e.type)&&yr();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Io(),lr(hr),lr(dr),0!==(64&(t=e.effectTag)))throw Error(s(285));return e.effectTag=-4097&t|64,e;case 5:return Fo(e),null;case 13:return lr(Ro),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return lr(Ro),null;case 4:return Io(),null;case 10:return eo(e),null;default:return null}}function Ks(e,t){return{value:e,source:t,stack:L(t)}}Ys=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bs=function(e,t,n,i,o){var s=e.memoizedProps;if(s!==i){var a,l,u=t.stateNode;switch(Po(Mo.current),e=null,n){case"input":s=ke(u,s),i=ke(u,i),e=[];break;case"option":s=Me(u,s),i=Me(u,i),e=[];break;case"select":s=r({},s,{value:void 0}),i=r({},i,{value:void 0}),e=[];break;case"textarea":s=Ce(u,s),i=Ce(u,i),e=[];break;default:"function"!==typeof s.onClick&&"function"===typeof i.onClick&&(u.onclick=un)}for(a in on(n,i),n=null,s)if(!i.hasOwnProperty(a)&&s.hasOwnProperty(a)&&null!=s[a])if("style"===a)for(l in u=s[a])u.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(V.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in i){var c=i[a];if(u=null!=s?s[a]:void 0,i.hasOwnProperty(a)&&c!==u&&(null!=c||null!=u))if("style"===a)if(u){for(l in u)!u.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&u[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(e||(e=[]),e.push(a,n)),n=c;else"dangerouslySetInnerHTML"===a?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(a,c)):"children"===a?u===c||"string"!==typeof c&&"number"!==typeof c||(e=e||[]).push(a,""+c):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(V.hasOwnProperty(a)?(null!=c&&ln(o,a),e||u===c||(e=[])):(e=e||[]).push(a,c))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Hs=function(e,t,n,i){n!==i&&(t.effectTag|=4)};var Js="function"===typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,i=t.stack;null===i&&null!==n&&(i=L(n)),null!==n&&j(n.type),t=t.value,null!==e&&1===e.tag&&j(e.type);try{console.error(t)}catch(r){setTimeout((function(){throw r}))}}function ta(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(n){ml(e,n)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,i=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:$r(t.type,n),i),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(s(163))}function ia(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.destroy;n.destroy=void 0,void 0!==i&&i()}n=n.next}while(n!==t)}}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.create;n.destroy=i()}n=n.next}while(n!==t)}}function oa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ra(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var i=n.elementType===n.type?t.memoizedProps:$r(n.type,t.memoizedProps);e.componentDidUpdate(i,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&ho(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}ho(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Rt(n)))));case 19:case 17:case 20:case 21:return}throw Error(s(163))}function sa(e,t,n){switch("function"===typeof kl&&kl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var i=e.next;Hr(97<n?97:n,(function(){var e=i;do{var n=e.destroy;if(void 0!==n){var r=t;try{n()}catch(o){ml(r,o)}}e=e.next}while(e!==i)}))}break;case 1:ta(t),"function"===typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(n){ml(e,n)}}(t,n);break;case 5:ta(t);break;case 4:ca(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function la(e){return 5===e.tag||3===e.tag||4===e.tag}function ua(e){e:{for(var t=e.return;null!==t;){if(la(t)){var n=t;break e}t=t.return}throw Error(s(160))}switch(t=n.stateNode,n.tag){case 5:var i=!1;break;case 3:case 4:t=t.containerInfo,i=!0;break;default:throw Error(s(161))}16&n.effectTag&&(Ye(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||la(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}i?function e(t,n,i){var r=t.tag,o=5===r||6===r;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===i.nodeType?i.parentNode.insertBefore(t,n):i.insertBefore(t,n):(8===i.nodeType?(n=i.parentNode).insertBefore(t,i):(n=i).appendChild(t),null!==(i=i._reactRootContainer)&&void 0!==i||null!==n.onclick||(n.onclick=un));else if(4!==r&&null!==(t=t.child))for(e(t,n,i),t=t.sibling;null!==t;)e(t,n,i),t=t.sibling}(e,n,t):function e(t,n,i){var r=t.tag,o=5===r||6===r;if(o)t=o?t.stateNode:t.stateNode.instance,n?i.insertBefore(t,n):i.appendChild(t);else if(4!==r&&null!==(t=t.child))for(e(t,n,i),t=t.sibling;null!==t;)e(t,n,i),t=t.sibling}(e,n,t)}function ca(e,t,n){for(var i,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(s(160));switch(i=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:i=i.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,c=n,d=u;;)if(sa(l,d,c),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===u)break e;for(;null===d.sibling;){if(null===d.return||d.return===u)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}r?(l=i,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):i.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){i=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(sa(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function da(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ia(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var i=t.memoizedProps,r=null!==e?e.memoizedProps:i;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[On]=i,"input"===e&&"radio"===i.type&&null!=i.name&&Se(n,i),sn(e,r),t=sn(e,i),r=0;r<o.length;r+=2){var a=o[r],l=o[r+1];"style"===a?nn(n,l):"dangerouslySetInnerHTML"===a?ze(n,l):"children"===a?Ye(n,l):ge(n,a,l,t)}switch(e){case"input":Oe(n,i);break;case"textarea":Ne(n,i);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!i.multiple,null!=(e=i.value)?De(n,!!i.multiple,e,!1):t!==!!i.multiple&&(null!=i.defaultValue?De(n,!!i.multiple,i.defaultValue,!0):De(n,!!i.multiple,i.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(s(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Rt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?i=!1:(i=!0,n=t.child,Aa=zr()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,i?"function"===typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,r=void 0!==(r=e.memoizedProps.style)&&null!==r&&r.hasOwnProperty("display")?r.display:null,o.style.display=tn("display",r));else if(6===e.tag)e.stateNode.nodeValue=i?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ha(t);case 19:return void ha(t);case 17:return}throw Error(s(163))}function ha(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Js),t.forEach((function(t){var i=wl.bind(null,e,t);n.has(t)||(n.add(t),t.then(i,i))}))}}var fa="function"===typeof WeakMap?WeakMap:Map;function pa(e,t,n){(n=ao(n,null)).tag=3,n.payload={element:null};var i=t.value;return n.callback=function(){Ra||(Ra=!0,ja=i),ea(e,t)},n}function va(e,t,n){(n=ao(n,null)).tag=3;var i=e.type.getDerivedStateFromError;if("function"===typeof i){var r=t.value;n.payload=function(){return ea(e,t),i(r)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){"function"!==typeof i&&(null===La?La=new Set([this]):La.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var ya,ga=Math.ceil,ma=m.ReactCurrentDispatcher,ba=m.ReactCurrentOwner,wa=0,_a=3,ka=4,xa=0,Sa=null,Oa=null,Ea=0,Ta=wa,Ma=null,Da=1073741823,Ca=1073741823,Pa=null,Na=0,Ia=!1,Aa=0,Fa=null,Ra=!1,ja=null,La=null,za=!1,Ya=null,Ba=90,Ha=null,Wa=0,Ua=null,Va=0;function Ga(){return 0!==(48&xa)?1073741821-(zr()/10|0):0!==Va?Va:Va=1073741821-(zr()/10|0)}function qa(e,t,n){if(0===(2&(t=t.mode)))return 1073741823;var i=Yr();if(0===(4&t))return 99===i?1073741823:1073741822;if(0!==(16&xa))return Ea;if(null!==n)e=qr(e,0|n.timeoutMs||5e3,250);else switch(i){case 99:e=1073741823;break;case 98:e=qr(e,150,100);break;case 97:case 96:e=qr(e,5e3,250);break;case 95:e=2;break;default:throw Error(s(326))}return null!==Sa&&e===Ea&&--e,e}function $a(e,t){if(50<Wa)throw Wa=0,Ua=null,Error(s(185));if(null!==(e=Za(e,t))){var n=Yr();1073741823===t?0!==(8&xa)&&0===(48&xa)?Ja(e):(Xa(e),0===xa&&Vr()):Xa(e),0===(4&xa)||98!==n&&99!==n||(null===Ha?Ha=new Map([[e,t]]):(void 0===(n=Ha.get(e))||n>t)&&Ha.set(e,t))}}function Za(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var i=e.return,r=null;if(null===i&&3===e.tag)r=e.stateNode;else for(;null!==i;){if(n=i.alternate,i.childExpirationTime<t&&(i.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===i.return&&3===i.tag){r=i.stateNode;break}i=i.return}return null!==r&&(Sa===r&&(sl(t),Ta===ka&&Il(r,Ea)),Al(r,t)),r}function Qa(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Nl(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xa(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ur(Ja.bind(null,e));else{var t=Qa(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var i=Ga();if(1073741823===t?i=99:1===t||2===t?i=95:i=0>=(i=10*(1073741821-t)-10*(1073741821-i))?99:250>=i?98:5250>=i?97:95,null!==n){var r=e.callbackPriority;if(e.callbackExpirationTime===t&&r>=i)return;n!==Nr&&xr(n)}e.callbackExpirationTime=t,e.callbackPriority=i,t=1073741823===t?Ur(Ja.bind(null,e)):Wr(i,Ka.bind(null,e),{timeout:10*(1073741821-t)-zr()}),e.callbackNode=t}}}function Ka(e,t){if(Va=0,t)return Fl(e,t=Ga()),Xa(e),null;var n=Qa(e);if(0!==n){if(t=e.callbackNode,0!==(48&xa))throw Error(s(327));if(vl(),e===Sa&&n===Ea||nl(e,n),null!==Oa){var i=xa;xa|=16;for(var r=rl();;)try{ll();break}catch(l){il(e,l)}if(Jr(),xa=i,ma.current=r,1===Ta)throw t=Ma,nl(e,n),Il(e,n),Xa(e),t;if(null===Oa)switch(r=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,i=Ta,Sa=null,i){case wa:case 1:throw Error(s(345));case 2:Fl(e,2<n?2:n);break;case _a:if(Il(e,n),n===(i=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=dl(r)),1073741823===Da&&10<(r=Aa+500-zr())){if(Ia){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(o=Qa(e))&&o!==n)break;if(0!==i&&i!==n){e.lastPingedTime=i;break}e.timeoutHandle=bn(hl.bind(null,e),r);break}hl(e);break;case ka:if(Il(e,n),n===(i=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=dl(r)),Ia&&(0===(r=e.lastPingedTime)||r>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(r=Qa(e))&&r!==n)break;if(0!==i&&i!==n){e.lastPingedTime=i;break}if(1073741823!==Ca?i=10*(1073741821-Ca)-zr():1073741823===Da?i=0:(i=10*(1073741821-Da)-5e3,0>(i=(r=zr())-i)&&(i=0),(n=10*(1073741821-n)-r)<(i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*ga(i/1960))-i)&&(i=n)),10<i){e.timeoutHandle=bn(hl.bind(null,e),i);break}hl(e);break;case 5:if(1073741823!==Da&&null!==Pa){o=Da;var a=Pa;if(0>=(i=0|a.busyMinDurationMs)?i=0:(r=0|a.busyDelayMs,i=(o=zr()-(10*(1073741821-o)-(0|a.timeoutMs||5e3)))<=r?0:r+i-o),10<i){Il(e,n),e.timeoutHandle=bn(hl.bind(null,e),i);break}}hl(e);break;default:throw Error(s(329))}if(Xa(e),e.callbackNode===t)return Ka.bind(null,e)}}return null}function Ja(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!==(48&xa))throw Error(s(327));if(vl(),e===Sa&&t===Ea||nl(e,t),null!==Oa){var n=xa;xa|=16;for(var i=rl();;)try{al();break}catch(r){il(e,r)}if(Jr(),xa=n,ma.current=i,1===Ta)throw n=Ma,nl(e,t),Il(e,t),Xa(e),n;if(null!==Oa)throw Error(s(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Sa=null,hl(e),Xa(e)}return null}function el(e,t){var n=xa;xa|=1;try{return e(t)}finally{0===(xa=n)&&Vr()}}function tl(e,t){var n=xa;xa&=-2,xa|=8;try{return e(t)}finally{0===(xa=n)&&Vr()}}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Oa)for(n=Oa.return;null!==n;){var i=n;switch(i.tag){case 1:null!==(i=i.type.childContextTypes)&&void 0!==i&&yr();break;case 3:Io(),lr(hr),lr(dr);break;case 5:Fo(i);break;case 4:Io();break;case 13:case 19:lr(Ro);break;case 10:eo(i)}n=n.return}Sa=e,Oa=El(e.current,null),Ea=t,Ta=wa,Ma=null,Ca=Da=1073741823,Pa=null,Na=0,Ia=!1}function il(e,t){for(;;){try{if(Jr(),zo.current=ys,Vo)for(var n=Ho.memoizedState;null!==n;){var i=n.queue;null!==i&&(i.pending=null),n=n.next}if(Bo=0,Uo=Wo=Ho=null,Vo=!1,null===Oa||null===Oa.return)return Ta=1,Ma=t,Oa=null;e:{var r=e,o=Oa.return,s=Oa,a=t;if(t=Ea,s.effectTag|=2048,s.firstEffect=s.lastEffect=null,null!==a&&"object"===typeof a&&"function"===typeof a.then){var l=a;if(0===(2&s.mode)){var u=s.alternate;u?(s.memoizedState=u.memoizedState,s.expirationTime=u.expirationTime):s.memoizedState=null}var c=0!==(1&Ro.current),d=o;do{var h;if(h=13===d.tag){var f=d.memoizedState;if(null!==f)h=null!==f.dehydrated;else{var p=d.memoizedProps;h=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!c)}}if(h){var v=d.updateQueue;if(null===v){var y=new Set;y.add(l),d.updateQueue=y}else v.add(l);if(0===(2&d.mode)){if(d.effectTag|=64,s.effectTag&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var g=ao(1073741823,null);g.tag=2,lo(s,g)}s.expirationTime=1073741823;break e}a=void 0,s=t;var m=r.pingCache;if(null===m?(m=r.pingCache=new fa,a=new Set,m.set(l,a)):void 0===(a=m.get(l))&&(a=new Set,m.set(l,a)),!a.has(s)){a.add(s);var b=bl.bind(null,r,l,s);l.then(b,b)}d.effectTag|=4096,d.expirationTime=t;break e}d=d.return}while(null!==d);a=Error((j(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+L(s))}5!==Ta&&(Ta=2),a=Ks(a,s),d=o;do{switch(d.tag){case 3:l=a,d.effectTag|=4096,d.expirationTime=t,uo(d,pa(d,l,t));break e;case 1:l=a;var w=d.type,_=d.stateNode;if(0===(64&d.effectTag)&&("function"===typeof w.getDerivedStateFromError||null!==_&&"function"===typeof _.componentDidCatch&&(null===La||!La.has(_)))){d.effectTag|=4096,d.expirationTime=t,uo(d,va(d,l,t));break e}}d=d.return}while(null!==d)}Oa=cl(Oa)}catch(k){t=k;continue}break}}function rl(){var e=ma.current;return ma.current=ys,null===e?ys:e}function ol(e,t){e<Da&&2<e&&(Da=e),null!==t&&e<Ca&&2<e&&(Ca=e,Pa=t)}function sl(e){e>Na&&(Na=e)}function al(){for(;null!==Oa;)Oa=ul(Oa)}function ll(){for(;null!==Oa&&!Ir();)Oa=ul(Oa)}function ul(e){var t=ya(e.alternate,e,Ea);return e.memoizedProps=e.pendingProps,null===t&&(t=cl(e)),ba.current=null,t}function cl(e){Oa=e;do{var t=Oa.alternate;if(e=Oa.return,0===(2048&Oa.effectTag)){if(t=Qs(t,Oa,Ea),1===Ea||1!==Oa.childExpirationTime){for(var n=0,i=Oa.child;null!==i;){var r=i.expirationTime,o=i.childExpirationTime;r>n&&(n=r),o>n&&(n=o),i=i.sibling}Oa.childExpirationTime=n}if(null!==t)return t;null!==e&&0===(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Oa.firstEffect),null!==Oa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Oa.firstEffect),e.lastEffect=Oa.lastEffect),1<Oa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Oa:e.firstEffect=Oa,e.lastEffect=Oa))}else{if(null!==(t=Xs(Oa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Oa.sibling))return t;Oa=e}while(null!==Oa);return Ta===wa&&(Ta=5),null}function dl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function hl(e){var t=Yr();return Hr(99,fl.bind(null,e,t)),null}function fl(e,t){do{vl()}while(null!==Ya);if(0!==(48&xa))throw Error(s(327));var n=e.finishedWork,i=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var r=dl(n);if(e.firstPendingTime=r,i<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:i<=e.firstSuspendedTime&&(e.firstSuspendedTime=i-1),i<=e.lastPingedTime&&(e.lastPingedTime=0),i<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Sa&&(Oa=Sa=null,Ea=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){var o=xa;xa|=32,ba.current=null,vn=Gt;var a=fn();if(pn(a)){if("selectionStart"in a)var l={start:a.selectionStart,end:a.selectionEnd};else e:{var u=(l=(l=a.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(u&&0!==u.rangeCount){l=u.anchorNode;var c=u.anchorOffset,d=u.focusNode;u=u.focusOffset;try{l.nodeType,d.nodeType}catch(E){l=null;break e}var h=0,f=-1,p=-1,v=0,y=0,g=a,m=null;t:for(;;){for(var b;g!==l||0!==c&&3!==g.nodeType||(f=h+c),g!==d||0!==u&&3!==g.nodeType||(p=h+u),3===g.nodeType&&(h+=g.nodeValue.length),null!==(b=g.firstChild);)m=g,g=b;for(;;){if(g===a)break t;if(m===l&&++v===c&&(f=h),m===d&&++y===u&&(p=h),null!==(b=g.nextSibling))break;m=(g=m).parentNode}g=b}l=-1===f||-1===p?null:{start:f,end:p}}else l=null}l=l||{start:0,end:0}}else l=null;yn={activeElementDetached:null,focusedElem:a,selectionRange:l},Gt=!1,Fa=r;do{try{pl()}catch(E){if(null===Fa)throw Error(s(330));ml(Fa,E),Fa=Fa.nextEffect}}while(null!==Fa);Fa=r;do{try{for(a=e,l=t;null!==Fa;){var w=Fa.effectTag;if(16&w&&Ye(Fa.stateNode,""),128&w){var _=Fa.alternate;if(null!==_){var k=_.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&w){case 2:ua(Fa),Fa.effectTag&=-3;break;case 6:ua(Fa),Fa.effectTag&=-3,da(Fa.alternate,Fa);break;case 1024:Fa.effectTag&=-1025;break;case 1028:Fa.effectTag&=-1025,da(Fa.alternate,Fa);break;case 4:da(Fa.alternate,Fa);break;case 8:ca(a,c=Fa,l),aa(c)}Fa=Fa.nextEffect}}catch(E){if(null===Fa)throw Error(s(330));ml(Fa,E),Fa=Fa.nextEffect}}while(null!==Fa);if(k=yn,_=fn(),w=k.focusedElem,l=k.selectionRange,_!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==l&&pn(w)&&(_=l.start,void 0===(k=l.end)&&(k=_),"selectionStart"in w?(w.selectionStart=_,w.selectionEnd=Math.min(k,w.value.length)):(k=(_=w.ownerDocument||document)&&_.defaultView||window).getSelection&&(k=k.getSelection(),c=w.textContent.length,a=Math.min(l.start,c),l=void 0===l.end?a:Math.min(l.end,c),!k.extend&&a>l&&(c=l,l=a,a=c),c=hn(w,a),d=hn(w,l),c&&d&&(1!==k.rangeCount||k.anchorNode!==c.node||k.anchorOffset!==c.offset||k.focusNode!==d.node||k.focusOffset!==d.offset)&&((_=_.createRange()).setStart(c.node,c.offset),k.removeAllRanges(),a>l?(k.addRange(_),k.extend(d.node,d.offset)):(_.setEnd(d.node,d.offset),k.addRange(_))))),_=[];for(k=w;k=k.parentNode;)1===k.nodeType&&_.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof w.focus&&w.focus(),w=0;w<_.length;w++)(k=_[w]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Gt=!!vn,yn=vn=null,e.current=n,Fa=r;do{try{for(w=e;null!==Fa;){var x=Fa.effectTag;if(36&x&&oa(w,Fa.alternate,Fa),128&x){_=void 0;var S=Fa.ref;if(null!==S){var O=Fa.stateNode;switch(Fa.tag){case 5:_=O;break;default:_=O}"function"===typeof S?S(_):S.current=_}}Fa=Fa.nextEffect}}catch(E){if(null===Fa)throw Error(s(330));ml(Fa,E),Fa=Fa.nextEffect}}while(null!==Fa);Fa=null,Ar(),xa=o}else e.current=n;if(za)za=!1,Ya=e,Ba=t;else for(Fa=r;null!==Fa;)t=Fa.nextEffect,Fa.nextEffect=null,Fa=t;if(0===(t=e.firstPendingTime)&&(La=null),1073741823===t?e===Ua?Wa++:(Wa=0,Ua=e):Wa=0,"function"===typeof _l&&_l(n.stateNode,i),Xa(e),Ra)throw Ra=!1,e=ja,ja=null,e;return 0!==(8&xa)?null:(Vr(),null)}function pl(){for(;null!==Fa;){var e=Fa.effectTag;0!==(256&e)&&na(Fa.alternate,Fa),0===(512&e)||za||(za=!0,Wr(97,(function(){return vl(),null}))),Fa=Fa.nextEffect}}function vl(){if(90!==Ba){var e=97<Ba?97:Ba;return Ba=90,Hr(e,yl)}}function yl(){if(null===Ya)return!1;var e=Ya;if(Ya=null,0!==(48&xa))throw Error(s(331));var t=xa;for(xa|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ia(5,n),ra(5,n)}}catch(i){if(null===e)throw Error(s(330));ml(e,i)}n=e.nextEffect,e.nextEffect=null,e=n}return xa=t,Vr(),!0}function gl(e,t,n){lo(e,t=pa(e,t=Ks(n,t),1073741823)),null!==(e=Za(e,1073741823))&&Xa(e)}function ml(e,t){if(3===e.tag)gl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){gl(n,e,t);break}if(1===n.tag){var i=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof i.componentDidCatch&&(null===La||!La.has(i))){lo(n,e=va(n,e=Ks(t,e),1073741823)),null!==(n=Za(n,1073741823))&&Xa(n);break}}n=n.return}}function bl(e,t,n){var i=e.pingCache;null!==i&&i.delete(t),Sa===e&&Ea===n?Ta===ka||Ta===_a&&1073741823===Da&&zr()-Aa<500?nl(e,Ea):Ia=!0:Nl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xa(e)))}function wl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=qa(t=Ga(),e,null)),null!==(e=Za(e,t))&&Xa(e)}ya=function(e,t,n){var i=t.expirationTime;if(null!==e){var r=t.pendingProps;if(e.memoizedProps!==r||hr.current)Cs=!0;else{if(i<n){switch(Cs=!1,t.tag){case 3:zs(t),Ms();break;case 5:if(Ao(t),4&t.mode&&1!==n&&r.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vr(t.type)&&br(t);break;case 4:No(t,t.stateNode.containerInfo);break;case 10:i=t.memoizedProps.value,r=t.type._context,ur(Zr,r._currentValue),r._currentValue=i;break;case 13:if(null!==t.memoizedState)return 0!==(i=t.child.childExpirationTime)&&i>=n?Us(e,t,n):(ur(Ro,1&Ro.current),null!==(t=$s(e,t,n))?t.sibling:null);ur(Ro,1&Ro.current);break;case 19:if(i=t.childExpirationTime>=n,0!==(64&e.effectTag)){if(i)return qs(e,t,n);t.effectTag|=64}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null),ur(Ro,Ro.current),!i)return null}return $s(e,t,n)}Cs=!1}}else Cs=!1;switch(t.expirationTime=0,t.tag){case 2:if(i=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,r=pr(t,dr.current),no(t,n),r=$o(null,t,i,e,r,n),t.effectTag|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vr(i)){var o=!0;br(t)}else o=!1;t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,oo(t);var a=i.getDerivedStateFromProps;"function"===typeof a&&vo(t,i,a,e),r.updater=yo,t.stateNode=r,r._reactInternalFiber=t,wo(t,i,e,n),t=Ls(null,t,i,!0,o,n)}else t.tag=0,Ps(null,t,r,n),t=t.child;return t;case 16:e:{if(r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(r),1!==r._status)throw r._result;switch(r=r._result,t.type=r,o=t.tag=function(e){if("function"===typeof e)return Ol(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===D)return 11;if(e===N)return 14}return 2}(r),e=$r(r,e),o){case 0:t=Rs(null,t,r,e,n);break e;case 1:t=js(null,t,r,e,n);break e;case 11:t=Ns(null,t,r,e,n);break e;case 14:t=Is(null,t,r,$r(r.type,e),i,n);break e}throw Error(s(306,r,""))}return t;case 0:return i=t.type,r=t.pendingProps,Rs(e,t,i,r=t.elementType===i?r:$r(i,r),n);case 1:return i=t.type,r=t.pendingProps,js(e,t,i,r=t.elementType===i?r:$r(i,r),n);case 3:if(zs(t),i=t.updateQueue,null===e||null===i)throw Error(s(282));if(i=t.pendingProps,r=null!==(r=t.memoizedState)?r.element:null,so(e,t),co(t,i,null,n),(i=t.memoizedState.element)===r)Ms(),t=$s(e,t,n);else{if((r=t.stateNode.hydrate)&&(_s=_n(t.stateNode.containerInfo.firstChild),ws=t,r=ks=!0),r)for(n=Eo(t,null,i,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ps(e,t,i,n),Ms();t=t.child}return t;case 5:return Ao(t),null===e&&Os(t),i=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,a=r.children,mn(i,r)?a=null:null!==o&&mn(i,o)&&(t.effectTag|=16),Fs(e,t),4&t.mode&&1!==n&&r.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ps(e,t,a,n),t=t.child),t;case 6:return null===e&&Os(t),null;case 13:return Us(e,t,n);case 4:return No(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=Oo(t,null,i,n):Ps(e,t,i,n),t.child;case 11:return i=t.type,r=t.pendingProps,Ns(e,t,i,r=t.elementType===i?r:$r(i,r),n);case 7:return Ps(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ps(e,t,t.pendingProps.children,n),t.child;case 10:e:{i=t.type._context,r=t.pendingProps,a=t.memoizedProps,o=r.value;var l=t.type._context;if(ur(Zr,l._currentValue),l._currentValue=o,null!==a)if(l=a.value,0===(o=ji(l,o)?0:0|("function"===typeof i._calculateChangedBits?i._calculateChangedBits(l,o):1073741823))){if(a.children===r.children&&!hr.current){t=$s(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){a=l.child;for(var c=u.firstContext;null!==c;){if(c.context===i&&0!==(c.observedBits&o)){1===l.tag&&((c=ao(n,null)).tag=2,lo(l,c)),l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n),to(l.return,n),u.expirationTime<n&&(u.expirationTime=n);break}c=c.next}}else a=10===l.tag&&l.type===t.type?null:l.child;if(null!==a)a.return=l;else for(a=l;null!==a;){if(a===t){a=null;break}if(null!==(l=a.sibling)){l.return=a.return,a=l;break}a=a.return}l=a}Ps(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,i=(o=t.pendingProps).children,no(t,n),i=i(r=io(r,o.unstable_observedBits)),t.effectTag|=1,Ps(e,t,i,n),t.child;case 14:return o=$r(r=t.type,t.pendingProps),Is(e,t,r,o=$r(r.type,o),i,n);case 15:return As(e,t,t.type,t.pendingProps,i,n);case 17:return i=t.type,r=t.pendingProps,r=t.elementType===i?r:$r(i,r),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vr(i)?(e=!0,br(t)):e=!1,no(t,n),mo(t,i,r),wo(t,i,r,n),Ls(null,t,i,!0,e,n);case 19:return qs(e,t,n)}throw Error(s(156,t.tag))};var _l=null,kl=null;function xl(e,t,n,i){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Sl(e,t,n,i){return new xl(e,t,n,i)}function Ol(e){return!(!(e=e.prototype)||!e.isReactComponent)}function El(e,t){var n=e.alternate;return null===n?((n=Sl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Tl(e,t,n,i,r,o){var a=2;if(i=e,"function"===typeof e)Ol(e)&&(a=1);else if("string"===typeof e)a=5;else e:switch(e){case x:return Ml(n.children,r,o,t);case M:a=8,r|=7;break;case S:a=8,r|=1;break;case O:return(e=Sl(12,n,t,8|r)).elementType=O,e.type=O,e.expirationTime=o,e;case C:return(e=Sl(13,n,t,r)).type=C,e.elementType=C,e.expirationTime=o,e;case P:return(e=Sl(19,n,t,r)).elementType=P,e.expirationTime=o,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case E:a=10;break e;case T:a=9;break e;case D:a=11;break e;case N:a=14;break e;case I:a=16,i=null;break e;case A:a=22;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Sl(a,n,t,r)).elementType=e,t.type=i,t.expirationTime=o,t}function Ml(e,t,n,i){return(e=Sl(7,e,i,t)).expirationTime=n,e}function Dl(e,t,n){return(e=Sl(6,e,null,t)).expirationTime=n,e}function Cl(e,t,n){return(t=Sl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pl(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Il(e,t){var n=e.firstSuspendedTime,i=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(i>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Al(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Fl(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Rl(e,t,n,i){var r=t.current,o=Ga(),a=fo.suspense;o=qa(o,r,a);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(s(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(vr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(s(171))}if(1===n.tag){var u=n.type;if(vr(u)){n=mr(n,u,l);break e}}n=l}else n=cr;return null===t.context?t.context=n:t.pendingContext=n,(t=ao(o,a)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),lo(r,t),$a(r,o),o}function jl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ll(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function zl(e,t){Ll(e,t),(e=e.alternate)&&Ll(e,t)}function Yl(e,t,n){var i=new Pl(e,t,n=null!=n&&!0===n.hydrate),r=Sl(3,null,null,2===t?7:1===t?3:0);i.current=r,r.stateNode=i,oo(r),e[En]=i.current,n&&0!==t&&function(e,t){var n=Ke(t);Et.forEach((function(e){pt(e,t,n)})),Tt.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=i}function Bl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Hl(e,t,n,i,r){var o=n._reactRootContainer;if(o){var s=o._internalRoot;if("function"===typeof r){var a=r;r=function(){var e=jl(s);a.call(e)}}Rl(t,s,e,r)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Yl(e,0,t?{hydrate:!0}:void 0)}(n,i),s=o._internalRoot,"function"===typeof r){var l=r;r=function(){var e=jl(s);l.call(e)}}tl((function(){Rl(t,s,e,r)}))}return jl(s)}function Wl(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==i?null:""+i,children:e,containerInfo:t,implementation:n}}function Ul(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Bl(t))throw Error(s(200));return Wl(e,t,null,n)}Yl.prototype.render=function(e){Rl(e,this._internalRoot,null,null)},Yl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Rl(null,e,null,(function(){t[En]=null}))},vt=function(e){if(13===e.tag){var t=qr(Ga(),150,100);$a(e,t),zl(e,t)}},yt=function(e){13===e.tag&&($a(e,3),zl(e,3))},gt=function(e){if(13===e.tag){var t=Ga();$a(e,t=qa(t,e,null)),zl(e,t)}},Z=function(e,t,n){switch(t){case"input":if(Oe(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var i=n[t];if(i!==e&&i.form===e.form){var r=Cn(i);if(!r)throw Error(s(90));_e(i),Oe(i,r)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&De(e,!!n.multiple,t,!1)}},te=el,ne=function(e,t,n,i,r){var o=xa;xa|=4;try{return Hr(98,e.bind(null,t,n,i,r))}finally{0===(xa=o)&&Vr()}},ie=function(){0===(49&xa)&&(function(){if(null!==Ha){var e=Ha;Ha=null,e.forEach((function(e,t){Fl(t,e),Xa(t)})),Vr()}}(),vl())},re=function(e,t){var n=xa;xa|=2;try{return e(t)}finally{0===(xa=n)&&Vr()}};var Vl={Events:[Mn,Dn,Cn,q,U,jn,function(e){rt(e,Rn)},J,ee,Xt,at,vl,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);_l=function(e){try{t.onCommitFiberRoot(n,e,void 0,64===(64&e.current.effectTag))}catch(i){}},kl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(i){}}}catch(i){}})(r({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:m.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Tn,bundleType:0,version:"16.13.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Vl,t.createPortal=Ul,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw Error(s(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!==(48&xa))throw Error(s(187));var n=xa;xa|=1;try{return Hr(99,e.bind(null,t))}finally{xa=n,Vr()}},t.hydrate=function(e,t,n){if(!Bl(t))throw Error(s(200));return Hl(null,e,t,!0,n)},t.render=function(e,t,n){if(!Bl(t))throw Error(s(200));return Hl(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Bl(e))throw Error(s(40));return!!e._reactRootContainer&&(tl((function(){Hl(null,null,e,!1,(function(){e._reactRootContainer=null,e[En]=null}))})),!0)},t.unstable_batchedUpdates=el,t.unstable_createPortal=function(e,t){return Ul(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,i){if(!Bl(n))throw Error(s(200));if(null==e||void 0===e._reactInternalFiber)throw Error(s(38));return Hl(e,t,n,!1,i)},t.version="16.13.0"},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";var i,r,o,s,a;if("undefined"===typeof window||"function"!==typeof MessageChannel){var l=null,u=null,c=function e(){if(null!==l)try{var n=t.unstable_now();l(!0,n),l=null}catch(i){throw setTimeout(e,0),i}},d=Date.now();t.unstable_now=function(){return Date.now()-d},i=function(e){null!==l?setTimeout(i,0,e):(l=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},s=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var h=window.performance,f=window.Date,p=window.setTimeout,v=window.clearTimeout;if("undefined"!==typeof console){var y=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof h&&"function"===typeof h.now)t.unstable_now=function(){return h.now()};else{var g=f.now();t.unstable_now=function(){return f.now()-g}}var m=!1,b=null,w=-1,_=5,k=0;s=function(){return t.unstable_now()>=k},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):_=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,S=x.port2;x.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();k=e+_;try{b(!0,e)?S.postMessage(null):(m=!1,b=null)}catch(n){throw S.postMessage(null),n}}else m=!1},i=function(e){b=e,m||(m=!0,S.postMessage(null))},r=function(e,n){w=p((function(){e(t.unstable_now())}),n)},o=function(){v(w),w=-1}}function O(e,t){var n=e.length;e.push(t);e:for(;;){var i=n-1>>>1,r=e[i];if(!(void 0!==r&&0<M(r,t)))break e;e[i]=t,e[n]=r,n=i}}function E(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,r=e.length;i<r;){var o=2*(i+1)-1,s=e[o],a=o+1,l=e[a];if(void 0!==s&&0>M(s,n))void 0!==l&&0>M(l,s)?(e[i]=l,e[a]=n,i=a):(e[i]=s,e[o]=n,i=o);else{if(!(void 0!==l&&0>M(l,n)))break e;e[i]=l,e[a]=n,i=a}}}return t}return null}function M(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var D=[],C=[],P=1,N=null,I=3,A=!1,F=!1,R=!1;function j(e){for(var t=E(C);null!==t;){if(null===t.callback)T(C);else{if(!(t.startTime<=e))break;T(C),t.sortIndex=t.expirationTime,O(D,t)}t=E(C)}}function L(e){if(R=!1,j(e),!F)if(null!==E(D))F=!0,i(z);else{var t=E(C);null!==t&&r(L,t.startTime-e)}}function z(e,n){F=!1,R&&(R=!1,o()),A=!0;var i=I;try{for(j(n),N=E(D);null!==N&&(!(N.expirationTime>n)||e&&!s());){var a=N.callback;if(null!==a){N.callback=null,I=N.priorityLevel;var l=a(N.expirationTime<=n);n=t.unstable_now(),"function"===typeof l?N.callback=l:N===E(D)&&T(D),j(n)}else T(D);N=E(D)}if(null!==N)var u=!0;else{var c=E(C);null!==c&&r(L,c.startTime-n),u=!1}return u}finally{N=null,I=i,A=!1}}function Y(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){F||A||(F=!0,i(z))},t.unstable_getCurrentPriorityLevel=function(){return I},t.unstable_getFirstCallbackNode=function(){return E(D)},t.unstable_next=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var n=I;I=t;try{return e()}finally{I=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=I;I=e;try{return t()}finally{I=n}},t.unstable_scheduleCallback=function(e,n,s){var a=t.unstable_now();if("object"===typeof s&&null!==s){var l=s.delay;l="number"===typeof l&&0<l?a+l:a,s="number"===typeof s.timeout?s.timeout:Y(e)}else s=Y(e),l=a;return e={id:P++,callback:n,priorityLevel:e,startTime:l,expirationTime:s=l+s,sortIndex:-1},l>a?(e.sortIndex=l,O(C,e),null===E(D)&&e===E(C)&&(R?o():R=!0,r(L,l-a))):(e.sortIndex=s,O(D,e),F||A||(F=!0,i(z))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();j(e);var n=E(D);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||s()},t.unstable_wrapCallback=function(e){var t=I;return function(){var n=I;I=t;try{return e.apply(this,arguments)}finally{I=n}}}},,function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var i=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,i="function"===typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function a(e,t,n,i){var r=t&&t.prototype instanceof c?t:c,o=Object.create(r.prototype),s=new k(i||[]);return o._invoke=function(e,t,n){var i="suspendedStart";return function(r,o){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===r)throw o;return S()}for(n.method=r,n.arg=o;;){var s=n.delegate;if(s){var a=b(s,n);if(a){if(a===u)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===i)throw i="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i="executing";var c=l(e,t,n);if("normal"===c.type){if(i=n.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(i="completed",n.method="throw",n.arg=c.arg)}}}(e,n,s),o}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(i){return{type:"throw",arg:i}}}e.wrap=a;var u={};function c(){}function d(){}function h(){}var f={};f[r]=function(){return this};var p=Object.getPrototypeOf,v=p&&p(p(x([])));v&&v!==t&&n.call(v,r)&&(f=v);var y=h.prototype=c.prototype=Object.create(f);function g(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function m(e){var t;this._invoke=function(i,r){function o(){return new Promise((function(t,o){!function t(i,r,o,s){var a=l(e[i],e,r);if("throw"!==a.type){var u=a.arg,c=u.value;return c&&"object"===typeof c&&n.call(c,"__await")?Promise.resolve(c.__await).then((function(e){t("next",e,o,s)}),(function(e){t("throw",e,o,s)})):Promise.resolve(c).then((function(e){u.value=e,o(u)}),(function(e){return t("throw",e,o,s)}))}s(a.arg)}(i,r,t,o)}))}return t=t?t.then(o,o):o()}}function b(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,b(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var i=l(n,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,u;var r=i.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function k(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function x(e){if(e){var t=e[r];if(t)return t.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var i=-1,o=function t(){for(;++i<e.length;)if(n.call(e,i))return t.value=e[i],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:S}}function S(){return{value:void 0,done:!0}}return d.prototype=y.constructor=h,h.constructor=d,h[s]=d.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,s in e||(e[s]="GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},g(m.prototype),m.prototype[o]=function(){return this},e.AsyncIterator=m,e.async=function(t,n,i,r){var o=new m(a(t,n,i,r));return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},g(y),y[s]="Generator",y[r]=function(){return this},y.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},e.values=x,k.prototype={constructor:k,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function i(n,i){return s.type="throw",s.arg=e,t.next=n,i&&(t.method="next",t.arg=void 0),!!i}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],s=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var a=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(a&&l){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,t){for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i];if(r.tryLoc<=this.prev&&n.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),_(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var r=i.arg;_(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:x(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=i}catch(r){Function("r","regeneratorRuntime = r")(i)}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(i){"object"===typeof window&&(n=window)}e.exports=n},,,function(e,t,n){}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,